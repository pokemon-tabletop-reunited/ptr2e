{
  "COMBAT.ResetEncounter": "Reset Encounter",
  "TYPES.Actor.humanoid": "Humanoid",
  "TYPES.Actor.pokemon": "Pokémon",
  "TYPES.Item.ability": "Ability",
  "TYPES.Item.consumable": "Consumable",
  "TYPES.Item.container": "Container",
  "TYPES.Item.effect": "Effect",
  "TYPES.Item.equipment": "Equipment",
  "TYPES.Item.gear": "Gear",
  "TYPES.Item.move": "Move",
  "TYPES.Item.perk": "Perk",
  "TYPES.Item.species": "Species",
  "TYPES.Item.weapon": "Weapon",
  "TYPES.ActiveEffect.passive": "Passive Effect",
  "TYPES.ActiveEffect.affliction": "Affliction",
  "ITEM.AddButton": "Add",
  "ITEM.DeleteButton": "Delete",
  "PTR2E": {
    "Actor": {
      "Plural": "Actors"
    },
    "Item": {
      "Plural": "Items"
    },
    "DataInspector": {
      "DataButton": "Data",
      "Instructions": "<p>The Data Inspector for Documents will show you all the available fields based on the <em>Mode</em> you have selected, most modes show the data located in the `system` property.</p><p>Left click to expand an entry.</p><p>Right click a <em>key</em> to copy path to clipboard,</p><p>right click a <em>value</em> to copy that value to clipboard.</p><br><p>The Data Inspector for Chat Messages will show you info about the rolls in those messages</p><p>Right click a <em>domain</em> or <em>option</em> to copy that value to clipboard.</p>",
      "Search": "Search",
      "SearchHint": "Fuzzy Search for specific data/key paths.",
      "OptionSearch": "Search Options",
      "OptionSearchHint": "Search in options.",
      "TabsHeader": "Rolls per Target",
      "Filter": "Filter",
      "IDValue": "ID: {id}\nClick to copy to clipboard",
      "Key": "Key",
      "Value": "Value",
      "NotAvailable": "n/a",
      "Link": "Link",
      "NoData": "No data found.",
      "DataEntries": "Data Entries",
      "MaxDepth": "Maximum Depth",
      "Info": {
        "CopyValue": "Value of \"{path}\" copied to clipboard",
        "CopyPath": "Path \"{path}\" copied to clipboard",
        "CopyRollInfo": "{type}: \"{value}\" copied to clipboard"
      },
      "Depth": {
        "Plain": "Plain Data",
        "Functional": "Include Functions"
      },
      "Context": {
        "OpenInspector": "Open in Data Inspector"
      },
      "Settings": {
        "AllowEditing": "Allow editing",
        "AllowEditingHint": "Allows simple editing by double clicking the values. This affects all users. Responsibility is on you if you break something with this.",
        "AllowEditingUnsupported": "Allow editing unsupported",
        "AllowEditingUnsupportedHint": "Allows editing certain additional data types (e.g. base objects and arrays). Only delete option is provided.",
        "AllowUsers": "Allow users",
        "AllowUsersHint": "If enabled, users have access to the module.",
        "Tooltip": "Display entry tooltip",
        "TooltipHint": "Display tooltips with more straightforward display of per line information, such as complete path.",
        "IncludeFunctions": "Include functions",
        "IncludeFunctionsHint": "Include functions in data tree by default.",
        "ResultQuality": "Result quality",
        "ResultQualityHint": "Default search result quality. Higher is stricter matching, lower is less so.",
        "DefaultMode": "Default mode",
        "DefaultModeHint": "Default data mode.",
        "Fuzziness": "Fuzziness",
        "FuzzinessHint": "Search fuzziness. Left is stricter, right is more fuzzy.",
        "Functions": "Functions",
        "FunctionsHint": "Include getters and functions."
      },
      "Editor": {
        "Title": "Editor",
        "TokenWarning": "Altering override data may temporarily break the actor. Re-opening the sheet should be enough to fix it.",
        "TypeWarning": "You're changing the datatype. Be careful!",
        "Dangerous": "THIS IS POTENTIALLY VERY DANGEROUS."
      },
      "Data": {
        "Mixed": "Mixed",
        "RollData": "Roll Data",
        "Roll": "Roll Inspector",
        "Source": "Source",
        "Derived": "Derived",
        "Override": "Override",
        "Flags": "Flags",
        "Legend": "Roll data – used for formulas.<br>Derived data – as seen by the system, macros, modules, etc.<br>Source data – permanently stored data."
      },
      "DataValue": {
        "Getter": "getter",
        "Function": "function",
        "Value": "Value",
        "Total": "Total",
        "Length": "{length} characters",
        "Null": "Null",
        "Undefined": "Undefined",
        "Error": {
          "Unidentified": "ERROR: Unidentified type"
        }
      },
      "Error": {
        "NavigationFailure": "Failed to navigate to the target datapath: {path}",
        "NoGetterEdit": "Can't edit values inside getters.",
        "UnsupportedEditType": "Unsupported type for editing: {type}",
        "SameDocument": "You are already viewing this document.",
        "InvalidDocument": "This document is not supported by the Data Inspector."
      },
      "Types": {
        "undefined": "Undefined",
        "null": "Null",
        "object": "Object",
        "number": "Number",
        "boolean": "Boolean",
        "string": "String",
        "array": "Array",
        "set": "Set",
        "map": "Map",
        "collection": "Collection",
        "function": "Function",
        "getter": "Getter",
        "model": "Data Model",
        "data": "Document Data",
        "document": "Document",
        "placeable": "Placeable",
        "app": "Application",
        "pixi": "PIXI graphic",
        "custom": "Custom"
      },
      "Path": "Path",
      "PathHint": "Zoom in on a specific data path. (e.g. 'traits')",
      "Mode": "Mode",
      "Type": "Type",
      "Document": "Document",
      "DocumentID": "Document ID",
      "DataModel": "Data Model",
      "ChildCount": "Children",
      "StringLength": "Length",
      "Update": "Update",
      "Delete": "Delete"
    },
    "OK": "Ok",
    "ChatContext": {
      "RerollSkill": {
        "label": "Push Your Luck! (Reroll)",
        "title": "Are you sure you're Pushing Your Luck?",
        "content": "You're about to reroll a skill check. Did you receive GM Permission?"
      },
      "SpendLuckSkill": {
        "label": "Spend Luck to Increase DoS",
        "title": "Are you sure you're Spending Luck?",
        "content": "You're about to spend {amount} Luck to increase your Degree of Success."
      },
      "RollInspector": {
        "label": "Open Roll Inspector"
      }
    },
    "Migrations": {
      "Finished": "PTR2E System Migration to version {version} completed!",
      "OnlyGMCanUse": "Only a gamemaster can use this tool.",
      "OutsideSchemaRange": "The specified range is outside the system's schema version range (between {minimum} and {maximum}).",
      "Running": "Running system migration ...",
      "Starting": "Applying PTR2E System Migration to version {version}. Please be patient and do not close your game or shut down your server.",
      "Summary": {
        "Documents": "Documents",
        "HelpResources": "An unexpected error was encountered while migrating some actors or items. If you would like further assistance, feel free to report an issue at the <a href=\"https://github.com/pokemon-tabletop-reunited/ptr2e/issues\">system repository</a> or visit us on <a href=\"https://discord.gg/ptrfvtt\">Discord</a> for community support.",
        "Migrated": "Migrated",
        "Remigrate": "Remigrate",
        "Title": "Migration Summary",
        "Total": "Total",
        "Troubleshoot": {
          "Hint": "Here you can run a remigration, which will attempt to automatically fix issues with actors and items.",
          "Title": "System Troubleshooting"
        }
      },
      "Troubleshooting": "Troubleshooting",
      "WorldNotReady": "Game world not ready: try again in a few seconds."
    },
    "Modifiers": {
      "power": "Attack Power",
      "accuracy": "Accuracy Stages",
      "evasion": "Evasion Stages",
      "critical": "Critical Hit",
      "attack": "Attack Stat",
      "defense": "Defense Stat",
      "specialAttack": "Special Attack Stat",
      "specialDefense": "Special Defense Stat",
      "speed": "Speed Stat",
      "rip": "Range Increment Penalty",
      "crit": "Crit Stages"
    },
    "Effect": {
      "FIELDS": {
        "ChangeType": {
          "label": "Type",
          "hint": "The type of change.",
          "basic": "AE-Like",
          "flat-modifier": "Flat Modifier",
          "stage-modifier": "Stage Modifier",
          "percentile-modifier": "Percentile Modifier",
          "roll-option": "Roll Option",
          "grant-item": "Grant Item",
          "grant-effect": "Grant Effect",
          "ephemeral-effect": "Ephemeral Effect",
          "roll-note": "Roll Note",
          "roll-effect": "Roll Effect"
        },
        "ChangeLabel": {
          "label": "Label",
          "hint": "The label of the change."
        },
        "ChangeMode": {
          "label": "Mode",
          "hint": "The mode of the change."
        },
        "ChangeKey": {
          "label": "Path",
          "hint": "The system path of the change."
        },
        "ChangeValue": {
          "label": "Value",
          "hint": "The value of the change."
        },
        "ChangeSelector": {
          "label": "Selector",
          "hint": "The selector of the change."
        },
        "ChangeText": {
          "label": "Text",
          "hint": "The text of the change."
        },
        "ChangeDomain": {
          "label": "Domain",
          "hint": "The domain of the change."
        },
        "ChangeUuid": {
          "label": "UUID",
          "hint": "The UUID of the change.",
          "invalid": {
            "notAnItemUuid": "UUID must be a valid Item UUID.",
            "itemNotFound": "Failed to find an Item with UUID \"{uuid}\"."
          }
        },
        "ChangeChance": {
          "label": "Chance",
          "hint": "The %chance for this effect to occur."
        },
        "ChangeAffects": {
          "label": "Affects",
          "hint": "Whether this affects 'Self', 'Origin' or 'Target'",
          "target": "Target",
          "self": "Self",
          "origin": "Origin"
        },
        "ChangeReevaluateOnUpdate": {
          "label": "Reevaluate on Update",
          "hint": "Whether to reevaluate this change on update."
        },
        "ChangeAllowDuplicate": {
          "label": "Allow Duplicate",
          "hint": "Whether to allow duplicates of this item."
        },
        "ChangePredicate": {
          "label": "Predicate",
          "hint": "The predicate of the change."
        },
        "priority": {
          "label": "Priority",
          "hint": "Affliction's are applied in batches based on their priority, from lowest to highest.\nThe system keeps all healing affliction at priority 0, and all damaging afflictions at priority 30, and in-between those numbers special cases are handled.\n\nFor homebrew content we recommend using these same numbers if your affliction is meant to be applied in the same batch as the system afflictions."
        },
        "formula": {
          "label": "Formula",
          "hint": "The result of this formula will be multiplied by the afflicted target's Max HP.\nExample Input: \"1/16\" (this is 1 tick)"
        },
        "type": {
          "label": "Type",
          "hint": "Whether this affliction's formula should be applied as damage or healing."
        },
        "removeAfterCombat": {
          "label": "Remove After Combat",
          "hint": "Whether this effect should be removed after a combat encounter ends."
        },
        "removeOnRecall": {
          "label": "Remove On Recall",
          "hint": "Whether this effect should be removed when the actor is taken out of combat (without ending combat)."
        },
        "stacks": {
          "label": "Stacks",
          "hint": "The number of stacks this affliction currently has."
        },
        "duration": {
          "turns": {
            "label": "Affl. Duration (Activations)",
            "hint": "The number of activations this affliction will last before it is automatically deleted.\nLeave blank for afflictions that should persist indefinitely."
          },
          "startTurn": {
            "label": "Applied On Activation",
            "hint": "The Nth activation of the actor this affliction applies to, when the affliction was first applied.\nNote: Generally should not be edited."
          },
          "remaining": {
            "label": "Remaining Activations",
            "hint": "The number of activations remaining before this affliction expires and is removed."
          }
        },
        "tint": {
          "label": "Icon Tint Color",
          "hint": "The color tint to apply to the effect icon."
        },
        "description": {
          "label": "Effect Description",
          "hint": "Description of the effect."
        },
        "disabled": {
          "label": "Effect Suspended?",
          "hint": "Whether this effect is suspended and should not be applied."
        },
        "origin": {
          "label": "Effect Origin",
          "hint": "The origin of the effect if any."
        },
        "transfer": {
          "label": "Transfer Effect?",
          "hint": "Whether this effect should apply to the actor holding this item (checked), or the item itself (unchecked)."
        }
      },
      "Fields": {
        "duration": {
          "turns": {
            "label": "Affl. Duration (Activations)",
            "hint": "The number of activations this affliction will last before it is automatically deleted.\nLeave blank for afflictions that should persist indefinitely."
          },
          "startTurn": {
            "label": "Applied On Activation",
            "hint": "The Nth activation of the actor this affliction applies to, when the affliction was first applied.\nNote: Generally should not be edited."
          },
          "remaining": {
            "label": "Remaining Activations",
            "hint": "The number of activations remaining before this affliction expires and is removed."
          }
        }
      },
      "Statuses": {
        "Labels": {
          "fainted": "Fainted",
          "burn": "Burn",
          "poison": "Poison",
          "blight": "Blight",
          "paralysis": "Paralysis",
          "drowsy": "Drowsy",
          "nightmares": "Nightmares",
          "frozen": "Frozen",
          "splinter": "Splinter",
          "slowed": "Slowed",
          "hindered": "Hindered",
          "stunted": "Stunted",
          "confused": "Confused",
          "hyper-mode": "Hyper Mode",
          "weary": "Weary",
          "blinded": "Blinded",
          "stuck": "Stuck",
          "bound": "Bound",
          "disabled": "Disabled",
          "nullified": "Nullified",
          "suppressed": "Suppressed",
          "lifted": "Lifted",
          "raised": "Raised",
          "harden": "Harden",
          "sharpen": "Sharpen",
          "destined": "Destined",
          "disguised": "Disguised",
          "braced": "Braced",
          "duel": "Duel",
          "engulfed": "Engulfed",
          "curled": "Curled",
          "chanted": "Chanted",
          "choice-locked": "Choice-Locked",
          "grounded": "Grounded",
          "cursed": "Cursed",
          "true-sight": "True Sight",
          "shrink": "Shrink",
          "enlarge": "Enlarge",
          "marked": "Marked",
          "unlucky": "Unlucky",
          "perish": "Perish",
          "invisible": "Invisible",
          "transient": "Transient",
          "fear": "Fear",
          "stockpile": "Stockpile",
          "leech": "Leech",
          "rebound": "Rebound",
          "ringed": "Ringed",
          "enraged": "Enraged",
          "charmed": "Charmed",
          "taunted": "Taunted",
          "grapple": "Grapple",
          "resolved": "Resolved",
          "boosted": "Boosted",
          "rapid": "Rapid",
          "strong": "Strong",
          "agile": "Agile",
          "precise": "Precise",
          "evasive": "Evasive"
        },
        "Descriptions": {
          "fainted": "<p>When a creature's HP reaches and remains at 0, it is afflicted with Fainted.</p><p>A Fainted creature cannot use Actions, does not benefit from Abilities, and is cured of all @Trait[major-affliction], @Trait[minor-affliction], @Trait[pseudo-affliction], and @Trait[stage-change] effects they possess.</p><p>Fainted is cured when the afflicted creature's HP is greater than 0.</p><p>The creature's @Affliction[weary] count increases by 1 whenever they are cured of Fainted.</p>",
          "burn": "The afflicted creature loses a Tick of HP at the end of each of their Activations. The creature has their default ATK stages are reduced by 1 while Burn is active.",
          "poison": "The afflicted creature loses a Tick of HP at the end of each of their Activations. The afflicted creature’s default SPATK stages are reduced by 1 while Poison is active.",
          "blight": "At the end of the afflicted creature’s Activation, it loses X Stacks of Blight, where X is 2<sup style='font-size: x-small;'># of Activations passed with Blight</sup> and takes a Tick of HP per Stack lost. The afflicted creature’s default SPATK stages are reduced by 1 while Blight is active. When a creature receives Blight, it loses the Poison Condition, with Blight gaining 33% of its remaining Poison Stacks as extra Stacks on Blight. When afflicted with Poisoned X while Blighted, the creature gains +1 to its Blight Stacks.",
          "paralysis": "The afflicted creature's SPD is reduced by 50%. The creature also has Slowed while Paralysis is active.",
          "drowsy": "The Power of all of the afflicted creature's attacks is reduced by 33%, and the creature cannot utilize the [Priority X] or [Interrupt X] capabilities of their Actions. The afflicted creature's default SPDEF stages are reduced by 1 while Drowsy is active.",
          "nightmares": "This affliction can only be applied to Drowsy creatures. The Power of all of the afflicted creature's attacks is reduced by 50%, and the creature cannot utilize the [Priority X] or [Interrupt X] capabilities of their actions. The creature loses a Tick of HP at the end of each of its Activations and has their default SPDEF and ACC stages reduced by 1 while Nightmares is active. When a creature receives Nightmares, it loses the Drowsy Condition, and gains 33% of its remaining Drowsy Stacks onto Nightmares, and further Nightmares Stacks cannot be applied.",
          "frozen": "The afflicted creature is unable to use actions (either during its Activations or as interrupts/reactions), but takes 33% less damage from all sources. The afflicted creature's default DEF stages are reduced by 1, and has its SPD increased by 50%. Additional Frozen Stacks cannot be added while Frozen is on a creature.",
          "splinter": "The afflicted creature loses a Tick of HP when they are damaged by a Physical- or Special-Category attack. The creature has Stunted while Splinter is active.",
          "slowed": "The afflicted creature’s Movement Scores are reduced by 50%, rounding down (minimum 1).",
          "hindered": "The afflicted creature’s Skill DCs are reduced by -10. Hindered applied from different sources have their own Stacks.",
          "stunted": "When the afflicted creature recovers HP, that amount is reduced by 2 Ticks (to a minimum of 0 HP healed).",
          "confused": "At the end of the afflicted creature's Activations, it has a 50% chance of using Fumble.",
          "hyper-mode": "While afflicted with Hyper Mode, the afflicted creature gains +20% to all of its Movement Scores, while dealing and taking 15% more damage. As well, the user’s Shadow-Type attacks gain [Crit 1], or have their [Crit X] value increase by +1. At the start of the afflicted creature’s Activations, it has:<ul><li>a 40% chance to act normally on that Activation.</li><li>a 25% chance to be Choice-Locked 1 to Shadow-Type attacks.</li><li>a 15% chance of ending its Activation and using Fumble.</li><li>a 15% chance of using Backlash.</li><li>a 5% chance to be cured of Hyper Mode.</li></ul>",
          "weary": "While a creature is Weary, its default ACC and EVA stages are based on its Weary value, X. Specifically, the default ACC and EVA stages are set to the negative sum of all X and all integers between 0 and X (Weary 1 sets the defaults to -1, 2 to -3, and 3 to -6). Weary is automatically increased by 1 when a creature Faints. When a creature has 4 or more Weary, it is unable to battle until they reduce their Weary. Weary cannot wear off on its own - a creature must deliberately Rest or consume Items such as Apples to remove Stacks of Weary.",
          "blinded": "The afflicted creature is unable to see, ocularly. The creature has their \"seeing-based\" vision options disabled (standard vision, Darkvision, X-Ray Vision, etc.) and can only perceive using their other senses (as listed in their Traits). If they do not have a way to see, or have someone guiding them, they are unable to target other creatures with Attacks or Actions.",
          "stuck": "While afflicted with Stuck, creatures may not leave the combat area. If the afflicted creature is an owned Pokemon, it cannot willingly switch out (or be switched out by another party). When a creature with the [Trainer] or [Ace] trait would gain the Stuck affliction; they instead gain Slowed X, rather than Stuck X.",
          "bound": "The afflicted creature cannot willingly use any Movement. Stacks of Bound do not decrease at the end of a creature's Activation, instead the effect that applied Bound will provide a way of removing the Bound Condition.",
          "disabled": "One of the afflicted creature’s attacks cannot be used, under any circumstances. The move in question is determined by the source of the disabled effect, usually being “the last attack the target used.” If this would prevent them from using any attack, they may Struggle instead.",
          "nullified": "One of the afflicted creature’s abilities is negated, and cannot be activated or benefited from. The ability in question is determined by the source of the nullification, usually determined randomly.",
          "suppressed": "The afflicted creature spends 50% more PP on all actions that use PP.",
          "lifted": "the afflicted creature is held aloft, unable to act normally. The creature cannot use <Movement> other than [Teleport] while Lifted and is otherwise considered Stuck and Raised for the duration. A Lifted creature also suffers -6 EVA stages.",
          "raised": "While a creature is Raised, it is immune to attacks and effects with the [Earthbound] trait.",
          "harden": "While under the effect of Harden, the afflicted creature’s [Contact] attacks have +20 Power, and their [Dash] attacks gain [Crit 1] or have their [Crit X] increase by +1.",
          "sharpen": "While under the effect of Sharpen, the afflicted creature’s [Contact] attacks gain [Sharp], and their [Sharp] attacks gain [Crit 1] or have their [Crit X] increase by +1.",
          "destined": "when the afflicted creature deals damage with a Damaging Attack to the source of Destined, the afflicted creature is inflicted with the same amount of damage.",
          "disguised": "The user is not easily recognized by sight. Any creature that attempts to see through Disguised must make a contested Psychology or Spot skill check against the Disguised creature’s Disguise skill, and upon success ignores any effects that require Disguised to be active.",
          "braced": "while a creature is Braced, its default DEF and SPDEF stages are increased by +2 and its default ATK and SPATK stages are decreased by 1. Additionally, a Braced creature is immune to critical damage. A creature loses the Brace Affliction after it moves or makes an attack of its own accord.",
          "duel": "While a creature is afflicted with Duel, the creature and the source of the Affliction have [Crit 2] on attacks they use against one another, and take and deal 67% less damage from/to creatures other than themselves. Creatures afflicted with Duel and the source of the Duel are also Stuck. If either the source or afflicted creature Faint or are otherwise removed from battle, the Duel Affliction is removed.",
          "engulfed": "While a creature is afflicted with Engulfed, it is also considered to be Bound and Stuck. While Engulfed the afflicted creature cannot be targeted by Attacks, and it can only target the creature that has Engulfed it with Attacks, although these Attacks are resisted by two stages.",
          "curled": "while Curled, a creature cannot use Held Items and has +1 default DEF stage. Additionally, moves with the [Curl] Trait have their Power doubled while their user is Curled.",
          "chanted": "If an attack were to deal critical damage to a creature with Chanted, the attack instead deals damage as if it were not a Critical Hit.",
          "choice-locked": "While Choice-Locked, a creature may only use the last attack or action it used.",
          "grounded": "While Grounded, creatures become unable to use their [Flight] movement, nor can they be Lifted or Raised and have those effects removed.",
          "cursed": "While Cursed, an afflicted creature loses three ticks of HP at the end of each of their Activations.",
          "true-sight": "The afflicted creature ignores invisibility and illusions.",
          "shrink": "The afflicted creature’s Size Category is reduced by one.",
          "enlarge": "The afflicted creature’s Size Category is increased by one.",
          "marked": "While Marked, all creatures unallied to the afflicted creature and within 8m of it can only target the Marked creature with their attacks. Whenever the creature with Marked is hit by an Attack, reduce the Stack Value of its Marked by 1.",
          "unlucky": "While Unlucky, a creature cannot utilize its Luck.",
          "perish": "When a creature’s Perish count hits 0, the creature's HP is set to 0. Humans and ‘Ace’ creatures gain Weary 1 instead of losing HP when their Perish count is 0. The Perish affliction is removed if a creature is switched out or leaves combat.",
          "invisible": "The afflicted creature vanishes from sight, and cannot be detected by sight based vision or targeted by Attacks. In addition, the creature has +4 default EVA stages. Invisible ends when the creature uses an Attack, is hit by an Attack, by using a Free Action to end Invisible, or by the end conditions of the effect that granted Invisible. Any creature can perform an Intense Spot Check to ignore the effects of Invisible.",
          "transient": "The afflicted creature, while still visible, is able to traverse through any material, as if it wasn’t even there. It may use any of its Movements to move through the air or any substance (as if it were always on or in the appropriate substance), ignoring any and all blocking terrain. The creature also possesses +6 default EVA stages. Creatures that make attacks or actions while Transient deal 75% less damage. The creature loses 5 PP per activation while Transient, and gains a Stack of Weary if it is out of PP while Transient.",
          "fear": "The afflicted creature does 33% less damage to the source of the Fear affliction, and suffers -1 default ACC stage on attacks against them. Fear applied from different sources have their own Stacks.",
          "stockpile": "While a creature has Stockpile, the default stages for DEF and SPDEF are increased by +1 for each Stack of Stockpile it possesses. Stockpile can have up to 3 Stacks.",
          "leech": "The afflicted creature loses two Ticks of HP at the end of each of their Activations and the Source that applied Leech gains HP equal to the amount the afflicted creature lost.",
          "rebound": "Damage inflicted on the afflicted creature by Physical or Special-Category attacks deals ¼ of the inflicted damage on the attacking creature.",
          "ringed": "when a creature with Ringed concludes an Activation, they heal a Tick of HP, with additional effects from appropriate weathers/terrains as described by the effect that granted Ringed.",
          "enraged": "A creature may only use Physical- or Special-Category moves while it is Enraged.",
          "charmed": "The afflicted creature believes the source of Infatuation is a dear friend or romantic interest. Afflicted creatures have a 50% chance of being unable to target the source of their infatuation with an attack, and have -2 stages of EVA against attacks from the source of their infatuation.",
          "taunted": "The afflicted creature does 33% less damage to creatures other than the source of the Taunted affliction. The afflicted creature cannot use Status-category attacks for the duration of Taunted.",
          "grapple": "The afflicted creature possesses -1 default ACC and EVA and may only take Actions with the [Grapple] trait. Creatures that are not in control of a Grapple are also Bound. A creature in control of the Grapple can take a Free Action on their turn to end their participation in Grapple. The creature in control of the Grapple is treated as having the non-in-control creature(s) as being Mounted on itself.<br>If an afflicted creature is the only participant of a Grapple, they lose this affliction.",
          "resolved": "An afflicted creature creature gains +1 default DEF and SPDEF stages.",
          "boosted": "An afflicted creature gains +1 default ATK and SPATK stages.",
          "rapid": "A creature afflicted with Rapid may perform Complex Actions as Simple Actions OR [Exhaust] Actions are performed as though they lack the Trait OR [Set Up] Actions set up and resolve on the same activation, spending 50% more PP on all Actions (minimum +2). The creature has its Initiative delayed by 60% after its Activation and loses -1 EVA stages for 3 Activations.",
          "strong": "While afflicted with Strong, the Power of the creature's Attacks are increased by +20% and has its Initiative delayed by 20% after its Activation.",
          "agile": "While afflicted with Agile, Power of the creature's Attacks are decreased by -20% and has its Initiative advanced by 20% after its Activation.",
          "precise": "While afflicted with Precise, the creature has +1 default ACC and has its Initiative delayed by 20% after its Activation.",
          "evasive": "While afflicted with Evasive, the creature has +1 default ACC and the Power of its Attacks are decreased by -20%.",
          "gambit": "While afflicted with Gambit, the creature has +2 default CRIT and -1 default ACC."
        }
      }
    },
    "EffectSheet": {
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "details": {
          "label": "Details"
        },
        "changes": {
          "label": "Changes"
        }
      },
      "ChangeEditor": {
        "General": {
          "Primitive": "Primitive",
          "Brackets": "Brackets",
          "Value": "Value",
          "Range": "Range"
        },
        "Controls": {
          "Edit": "Edit as JSON",
          "Remove": "Delete Change",
          "Close": "Close Editor",
          "Apply": "Apply Changes",
          "Add": "Create Change"
        },
        "Errors": {
          "UnableToSaveDueToValidationFailure": "Unable to save changes due to validation failure(s). Please check the changes and resolve the issues.",
          "ChangeSyntax": "Syntax error in rule element definition: {message}"
        }
      }
    },
    "ActorSystem": {
      "FIELDS": {
        "traits": {
          "label": "Traits",
          "hint": "The traits of the actor."
        },
        "advancement": {
          "label": "Advancement",
          "hint": "The advancement of the actor.",
          "advancementPoints": {
            "available": {
              "label": "Available Advancement Point(s)",
              "hint": "The number of advancement points available to the actor."
            }
          }
        },
        "experience": {
          "label": "Experience",
          "hint": "The experience of the actor."
        },
        "advancement.experience": {
          "label": "Experience",
          "hint": "The experience of the actor."
        },
        "attributes": {
          "label": "Attributes",
          "hint": "The attributes of the actor."
        },
        "skills": {
          "label": "Skills",
          "hint": "The skills of the actor.",
          "options": "Skill List Options",
          "toggleHidden": "Toggle Hidden Skills",
          "editSkills": "Open Skills Editor",
          "luckRoll": "Roll 'End of Day' Luck Check"
        }
      }
    },
    "Clocks": {
      "Global": {
        "Add": "Add Clock",
        "Delete": {
          "Title": "Delete Clock",
          "Message": "Are you sure you want to delete clock: {label}?",
          "Confirm": "Delete",
          "Cancel": "Cancel"
        },
        "Editor": {
          "TitleEdit": "Edit Clock: {label}",
          "TitleAdd": "Create Clock"
        }
      }
    },
    "MoveSystem": {
      "FIELDS": {
        "grade": {
          "label": "Grade",
          "hint": "The grade of the move."
        }
      }
    },
    "ActorSheet": {
      "StatsFormTitle": "Stats Manager",
      "Species": "Species Editor",
      "Inspector": "Open Data Inspector",
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "actions": {
          "label": "Actions",
          "combat": {
            "label": "Combat Actions"
          },
          "downtime": {
            "label": "Downtime Actions"
          },
          "exploration": {
            "label": "Exploration Actions"
          },
          "other": {
            "label": "Generic Actions"
          }
        },
        "inventory": {
          "label": "Inventory"
        },
        "skills": {
          "label": "Skills"
        },
        "clocks": {
          "label": "Crafting & Clocks"
        },
        "perks": {
          "label": "Perks & Abilities"
        },
        "biography": {
          "label": "Biography"
        },
        "effects": {
          "label": "Effects"
        }
      },
      "CreateItem": "Create Item",
      "KnownAttacks": {
        "hint": "Drag & Drop moves onto the actor / known attack sheet to add them as available options.<br><br>Drag & Drop from the Known Attack's sheet onto the Actor's Attack Slots to assign moves to the slots!"
      },
      "AvailableAbilities": {
        "hint": "Drag & Drop abilities onto the actor / available ability sheet to add them as available options.<br><br>Drag & Drop from the Available Abilities's sheet onto the Actor's Ability Slots to assign abilities to the slots!<br><br>You gain an Ability Slot at level 20, 50 and 80, whenever you gain an ability from your Species it must be slotted into a slot of the same tier or higher (f.e., you cannot put a Master ability in any but the last slot, but you can put a Basic ability in slot 3 (advanced) or 4 (master))<br><br>Meanwhile, any abilities learned through other sources can only ever be fitted in the 2nd or 3rd slots (basic & advanced)"
      },
      "Buttons": {
        "perkWeb": "Open Perk Web"
      },
      "Components": {
        "actor": "Open Actor",
        "toggle-hidden-skills": "Toggle Hidden Skills",
        "EffectComponent": {
          "title": "{actor}'s Effects"
        },
        "SkillsComponent": {
          "title": "{actor}'s Skills"
        },
        "FavouriteSkillsComponent": {
          "title": "{actor}'s Favourite Skills"
        },
        "AbilitiesComponent": {
          "title": "{actor}'s Abilities"
        },
        "PerksComponent": {
          "title": "{actor}'s Perks"
        },
        "MovementComponent": {
          "title": "{actor}'s Movement"
        },
        "Effects": {
          "title": "{actor}'s Effects",
          "tooltip": "Popout Effects"
        },
        "Skills": {
          "title": "{actor}'s Skills",
          "tooltip": "Popout Skills"
        },
        "Abilities": {
          "tooltip": "Popout Abilities"
        },
        "Perks": {
          "tooltip": "Popout Perks"
        },
        "Movement": {
          "title": "{actor}'s Movement",
          "tooltip": "Popout Movement"
        }
      },
      "Inventory": {
        "CreateItem": "Create Item",
        "EditItem": "Edit Item",
        "DeleteItem": "Delete Item"
      },
      "Unspent": "{num} Unspent"
    },
    "ActorSidebar": {
      "Party": {
        "Label": "{name}'s Party"
      }
    },
    "Folder": {
      "Sheet": {
        "Owner": {
          "Label": "Owner",
          "Hint": "Drag actor here to transform this folder into a Party Folder",
          "Remove": "Remove Owner"
        },
        "Team": {
          "Label": "Team Members",
          "Hint": "Drag actor here to transform this folder into a Team Folder"
        }
      }
    },
    "Settings": {
      "DevMode": {
        "Name": "Developer Mode",
        "Hint": "Enable developer mode, this will allow you to commit changes to the Github repository."
      },
      "PlayerFolderCreatePermission": {
        "Name": "Player Folder Creation",
        "Hint": "Allow the ability for players to create folders from the Party Sheet."
      },
      "Traits": {
        "Name": "Traits Settings",
        "Label": "Open Menu",
        "Hint": "Manage Traits available in the System",
        "Title": "Traits Settings",
        "systemTraits": {
          "Label": "System Traits",
          "Hint": "These traits are defined by the system itself and can therefore not be deleted.<br>You can however override the properties by declaring a User Trait with the same name.<br><br>Please keep in mind that any attached automation to traits will not adhere to overriden core traits."
        },
        "userTraits": {
          "Label": "User Traits",
          "Hint": "Custom traits defined by the Game Master.<br><br>If a trait with the same name as a system trait is defined here, it will override the system trait."
        },
        "moduleTraits": {
          "Label": "Module Traits",
          "Hint": "Traits added through a module, they cannot be edited by Game Masters."
        }
      },
      "Skills": {
        "Name": "Skills Settings",
        "Label": "Open Menu",
        "Hint": "Manage Skills available in the System",
        "Title": "Skills Settings",
        "systemSkills": {
          "Label": "System Skills",
          "Hint": "These skills are defined by the system itself and can therefore not be deleted.<br>Although they can be hidden by default."
        },
        "userSkills": {
          "Label": "User Skills",
          "Hint": "Custom skills defined by the Game Master."
        },
        "moduleSkills": {
          "Label": "Module Skills",
          "Hint": "Skills added through a module, they cannot be edited by Game Masters."
        },
        "description": "Optional description that displays on hover of a Skill",
        "deleteSkill": {
          "Title": "Delete Skill: {name}",
          "Content": "Are you sure you want to delete the skill: {name}?"
        }
      },
      "WorldSchemaVersion": {
        "Name": "World Schema Version",
        "Hint": "The version of the world schema. Don't change this unless you know what you're doing."
      }
    },
    "SkillsEditor": {
      "ResetSkills": {
        "title": "Reset Skills for {name}",
        "content": "Are you sure you want to reset the skills for {name}?<br>This will remove all RV investment completely and cannot be undone."
      },
      "ChangeResources": {
        "title": "Change Resources for {name}",
        "content": "<header style='color: var(--hint-text-color);'><h3 style='color: var(--hint-text-color); margin-bottom: 0; text-align: center; border-bottom: unset;'>Editing Resources</h3><p>this should only be done with explicit GM Permission!</p></header><content><div class='form-group'><label style='flex-basis: 30%;'>Current Value: {value}</label><div class='form-fields'><input style='text-align: center;' type='number' value='0' step='1'/></div></div></content>",
        "submit": "Change Resources",
        "warn": "Resource total for {name} cannot drop below 1."
      },
      "ChangeLuck": {
        "title": "Change Luck for {name}",
        "content": "<header style='color: var(--hint-text-color);'><h3 style='color: var(--hint-text-color); margin-bottom: 0; text-align: center; border-bottom: unset;'>Editing Luck</h3><p>this should only be done with explicit GM Permission!</p></header><content><div class='form-group'><label style='flex-basis: 30%;'>Current Value: {value}</label><div class='form-fields'><input style='text-align: center;' type='number' value='0' step='1'/></div></div></content>",
        "submit": "Change Luck",
        "warn": "Luck total for {name} cannot drop below 0."
      },
      "RollLuck": {
        "title": "Reroll Luck for {name}",
        "content": "Are you sure you want to reroll the luck for {name}?<br>This should only be done with <b>explicit permission</b> from the GM!",
        "roll": "{name}'s Luck Roll!",
        "reroll": "{name} just <b style='color: #aa0200;' data-tooltip-direction='UP' data-tooltip='Rerolling your luck may only be done with explicit permission from the GM!'>Rerolled</b> their Luck!!",
        "result": "The new score of {result} has been applied to their Luck Skill."
      }
    },
    "Attributes": {
      "hp": {
        "Label": "Hit Points",
        "Hint": "The number of Hit Points (HP) the actor has."
      },
      "atk": {
        "Label": "Attack",
        "Hint": "The Attack (ATK) of the actor.",
        "Stage": {
          "Label": "ATK Stages",
          "Hint": "The ATK stages of the actor."
        }
      },
      "def": {
        "Label": "Defense",
        "Hint": "The Defense (DEF) of the actor.",
        "Stage": {
          "Label": "DEF Stages",
          "Hint": "The DEF stages of the actor."
        }
      },
      "spa": {
        "Label": "Special Attack",
        "Hint": "The Special Attack (SPATK) bonus of the actor.",
        "Stage": {
          "Label": "SPATK Stages",
          "Hint": "The SPATK Stages of the actor."
        }
      },
      "spd": {
        "Label": "Special Defense",
        "Hint": "The Special Defense (SPDEF) bonus of the actor.",
        "Stage": {
          "Label": "SPDEF Stages",
          "Hint": "The SPDEF Stages of the actor."
        }
      },
      "spe": {
        "Label": "Speed",
        "Hint": "The Speed (SPD) of the actor.",
        "Stage": {
          "Label": "SPD Stages",
          "Hint": "The SPD Stages of the actor."
        }
      },
      "accuracy": {
        "Label": "Accuracy",
        "Hint": "The Accuracy (ACC) of the actor.",
        "Stage": {
          "Label": "ACC Stages",
          "Hint": "The ACC stages of the actor."
        }
      },
      "evasion": {
        "Label": "Evasion",
        "Hint": "The Evasion (EVA) of the actor.",
        "Stage": {
          "Label": "EVA Stages",
          "Hint": "The EVA stages of the actor."
        }
      },
      "crit-rate": {
        "Label": "Critical Hit Rate",
        "Hint": "The Critical Hit Rate (CRIT) of the actor.",
        "Stage": {
          "Label": "Crit Stages",
          "Hint": "The CRIT Stages of the actor."
        }
      }
    },
    "Combat": {
      "Combatant": {
        "InitiativeNotZeroOrNull": "Initiative must be a number that is 0 or more."
      },
      "Round": {
        "Name": "Round"
      },
      "ContextMenu": {
        "ResetAV": "Reset to BaseAV",
        "ApplyDelayOrAdvancement": {
          "name": "Apply Delay/Advancement",
          "title": "Apply Delay/Advancement to {name}?",
          "content": "<div class='form-group'><label><b>Current</b>: {current}%</label><div class='form-fields'><input name='value' type='number' value='0' min='-100' max='100'/></div><p class='hint'>Max delay for this actor is {max}% </p><p class='hint'>Negative % is Delay, Positive % is Advancement</p></div>",
          "ok": "Apply Change"
        }
      }
    },
    "FIELDS": {
      "consumable": {
        "type": {
          "label": "Type",
          "hint": "The type of consumable.",
          "food": "Food",
          "restorative": "Restorative",
          "boosters": "Boosters",
          "ammo": "Ammo",
          "evolution-item": "Evolution Item",
          "pokeball": "Pokeball",
          "other": "Other"
        },
        "charges": {
          "value": {
            "label": "Charges",
            "hint": "The number of charges this consumable has."
          },
          "max": {
            "label": "Max Charges",
            "hint": "The maximum number of charges this consumable can have."
          }
        },
        "modifier": {
          "label": "Capture Rate Modifier",
          "hint": "The Capture Rate Modifier of this Pokeball."
        },
        "cost": {
          "label": "IP Cost",
          "hint": "The Inventory Point Cost for this Item."
        }
      },
      "gear": {
        "crafting": {
          "skill": {
            "label": "Crafting Skill",
            "hint": "The skill required to craft this gear."
          },
          "spans": {
            "label": "Crafting Spans",
            "hint": "The number of spans required to craft this gear."
          },
          "materials": {
            "label": "Crafting Materials",
            "hint": "The materials required to craft this gear."
          }
        },
        "equipped": {
          "carryType": {
            "label": "Carry Type",
            "hint": "The type of carry this gear is.",
            "stowed": "Stowed",
            "held": "Held",
            "worn": "Worn",
            "dropped": "Dropped"
          },
          "handsHeld": {
            "label": "Hands Held",
            "hint": "The number of hands this gear requires to hold."
          },
          "slot": {
            "label": "Carry Slot",
            "hint": "The type of slot this gear is carried in.",
            "accessory": "Accessory",
            "held": "Held",
            "worn": "Worn",
            "belt": "Belt",
            "backpack": "Backpack"
          }
        },
        "fling": {
          "power": {
            "label": "Power",
            "hint": "What power Fling has when this gear is flung."
          },
          "accuracy": {
            "label": "Accuracy",
            "hint": "The accuracy of Fling when this gear is flung."
          },
          "pokemonType": {
            "label": "Fling's Elemental Type",
            "hint": "The Elemental Type of Fling when this gear is flung."
          }
        },
        "grade": {
          "label": "Grade",
          "hint": "The grade of the gear."
        },
        "quantity": {
          "label": "Quantity",
          "hint": "The quantity of the gear."
        },
        "rarity": {
          "label": "Rarity",
          "hint": "The rarity of the gear.",
          "common": "Common",
          "uncommon": "Uncommon",
          "rare": "Rare",
          "unique": "Unique"
        }
      },
      "weapon": {
        "weaponType": {
          "label": "Weapon Type",
          "hint": "The type of weapon. (Temporary field)"
        },
        "weaponPp": {
          "label": "Weapon PP",
          "hint": "The PP of the weapon. (Temporary field)"
        },
        "weaponRange": {
          "label": "Weapon Range",
          "hint": "The range of the weapon. (Temporary field)"
        }
      },
      "actions": {
        "label": "Actions",
        "attack": {
          "label": "Attack Action",
          "accuracy": {
            "label": "Accuracy Localization Prefix",
            "hint": "The accuracy of the attack."
          }
        }
      },
      "slug": {
        "label": "Slug",
        "hint": "The slug is a unique identifier for this entity."
      },
      "description": {
        "label": "Effect Description",
        "hint": "The effect description of this document."
      },
      "collapsed": {
        "label": "Collapsed",
        "hint": "Whether this container is collapsed or not when rendered in an Actor's inventory."
      },
      "container": {
        "label": "Container",
        "hint": "The container item in which this item is stored"
      },
      "actionName": {
        "label": "Name",
        "hint": "The name of the Action."
      },
      "actionType": {
        "label": "Action Type",
        "hint": "The type of Action."
      },
      "actionTraits": {
        "label": "Traits",
        "hint": "The traits of the Action."
      },
      "target": {
        "label": "Target",
        "hint": "The type of targets this action can affect."
      },
      "distance": {
        "label": "Range Increment",
        "hint": "The RIP distance of the action."
      },
      "unit": {
        "label": "Unit",
        "hint": "The measurement unit of the Action."
      },
      "activationCost": {
        "label": "Action Cost",
        "hint": "The action cost to activate the Action."
      },
      "free": {
        "label": "Free Entry",
        "hint": "Free Entries do not take up Slots and are always available."
      },
      "trigger": {
        "label": "Trigger",
        "hint": "The trigger of the Action. (if any)"
      },
      "delay": {
        "label": "Delay",
        "hint": "The delay value of the Action. (if any)"
      },
      "priority": {
        "label": "Priority",
        "hint": "The priority value of the Action. (if any)"
      },
      "power": {
        "label": "Power",
        "hint": "The power of the Attack."
      },
      "accuracy": {
        "label": "Accuracy",
        "hint": "The accuracy of the Attack."
      },
      "pokemonType": {
        "label": "Elemental Type",
        "labelPlural": "Elemental Types",
        "labelShort": "Type",
        "hint": "The Elemental Type of the Entity.",
        "hintPlural": "The Elemental Types of this Entity."
      },
      "pokemonCategory": {
        "label": "Category",
        "hint": "The Category of the Attack."
      },
      "pokemonNumber": {
        "label": "Number",
        "hint": "The National Dex ID of the Pokemon."
      },
      "captureRate": {
        "label": "Capture Rate",
        "hint": "The Capture Rate of the Pokemon."
      },
      "diet": {
        "label": "Diet",
        "hint": "The Diet of the Pokemon."
      },
      "size": {
        "category": {
          "label": "Size Category",
          "hint": "The Size Category of the Creature."
        },
        "type": {
          "label": "Measurement Type",
          "hint": "The Measurement Type of the Creature."
        },
        "height": {
          "label": "Height",
          "hint": "The Height of the Creature in Meters."
        },
        "weight": {
          "label": "Weight",
          "hint": "The Weight of the Creature in Kilos."
        }
      },
      "genderRatio": {
        "label": "Gender Ratio",
        "hint": "Gender Ratio in 8ths chance of being Male, -1 if genderless."
      },
      "eggGroups": {
        "label": "Egg Groups",
        "hint": "The Egg Groups of the Pokemon."
      },
      "habitats": {
        "label": "Habitats",
        "hint": "The Habitats of the Pokemon."
      },
      "abilities": {
        "starting": {
          "label": "Starting Abilities",
          "hint": "The Abilities the Pokemon starts with."
        },
        "basic": {
          "label": "Basic Abilities",
          "hint": "The Basic Abilities the Pokemon can learn."
        },
        "advanced": {
          "label": "Advanced Abilities",
          "hint": "The Advanced Abilities the Pokemon can learn."
        },
        "master": {
          "label": "Master Abilities",
          "hint": "The Master Abilities the Pokemon can learn."
        }
      },
      "inventoryPoints": {
        "current": {
          "label": "Current",
          "hint": "The current inventory points of this actor, used for manual tracking of IP expenditure."
        },
        "max": {
          "label": "Max",
          "hint": "The maximum inventory points this actor can have, based on their resources skill."
        }
      },
      "clock": {
        "id": {
          "label": "Clock ID",
          "hint": "The unique identifier of the clock."
        },
        "label": {
          "label": "Clock Label",
          "hint": "The label of the clock."
        },
        "value": {
          "label": "Clock Value",
          "hint": "The current value of the clock."
        },
        "max": {
          "label": "Clock Max",
          "hint": "The maximum value of the clock."
        },
        "color": {
          "label": "Clock Color",
          "hint": "The color of the clock."
        },
        "private": {
          "label": "Private Clock",
          "hint": "Whether the clock is private."
        }
      },
      "prerequisites": {
        "label": "Prerequisites",
        "hint": "The prerequisites to pickup this Perk."
      },
      "apCost": {
        "label": "AP Cost",
        "hint": "The Advancement Point cost to purchase this Perk."
      },
      "design": {
        "arena": {
          "label": "Arena",
          "hint": "Physical / Mental / Social",
          "physical": "Physical",
          "mental": "Mental",
          "social": "Social"
        },
        "approach": {
          "label": "Approach",
          "hint": "Power / Finesse / Resilience",
          "power": "Power",
          "finesse": "Finesse",
          "resilience": "Resilience"
        },
        "archetype": {
          "label": "Archetype",
          "hint": "The Archetype to which this perk belongs"
        }
      },
      "node": {
        "i": {
          "label": "I",
          "hint": "I is the equivalent to X but in Hexagonal Grid Space"
        },
        "j": {
          "label": "J",
          "hint": "J is the equivalent to Y but in Hexagonal Grid Space"
        },
        "connected": {
          "label": "Connected",
          "hint": "List of all nodes (slugs) which are connected to this node"
        },
        "hidden": {
          "label": "Hidden",
          "hint": "Whether this node is hidden to players or not"
        },
        "config": {
          "alpha": {
            "label": "Alpha",
            "hint": "The alpha (transparency) value of the node."
          },
          "backgroundColor": {
            "label": "Background Color",
            "hint": "The background color of the node."
          },
          "borderColor": {
            "label": "Border Color",
            "hint": "The border color of the node."
          },
          "borderWidth": {
            "label": "Border Width",
            "hint": "The border width of the node."
          },
          "texture": {
            "label": "Texture",
            "hint": "The texture of the node (URL to img)."
          },
          "tint": {
            "label": "Tint",
            "hint": "The tint of the node."
          },
          "scale": {
            "label": "Scale",
            "hint": "The scale of the node. (Should be 1 for normal nodes, or 1.6 for base nodes)"
          }
        }
      },
      "stats": {
        "label": "Base Stats"
      },
      "movement": {
        "primary": {
          "label": "Primary Movement"
        },
        "secondary": {
          "label": "Secondary Movement"
        }
      },
      "powerPoints": {
        "label": "PP Cost",
        "hint": "The number of Power Points the Action uses up when activated.",
        "short": "PP",
        "value": {
          "label": "Current",
          "hint": "The number of Power Points the Move uses."
        },
        "max": {
          "label": "Max",
          "hint": "The maximum number of Power Points the Move can have."
        }
      },
      "hidden": {
        "label": "Hide from Action List",
        "hint": "Hide this passive action from the action list, useful for things like static stat buffs."
      },
      "health": {
        "label": "Health",
        "hint": "The health of the actor.",
        "short": "HP",
        "value": {
          "label": "Current",
          "hint": "The health value of the actor."
        },
        "max": {
          "label": "Max",
          "hint": "The maximum health value of the actor."
        }
      },
      "shield": {
        "short": "Shield",
        "value": {
          "label": "Current",
          "hint": "The shield value of the actor."
        },
        "max": {
          "label": "Max",
          "hint": "The maximum shield value of the actor."
        }
      },
      "nature": {
        "label": "Nature",
        "hint": "The nature of the actor."
      },
      "experience": {
        "label": "Experience",
        "hint": "The experience of the actor.",
        "short": "EXP",
        "current": {
          "label": "Current EXP",
          "hint": "The current experience value of the actor."
        },
        "next": {
          "label": "Next EXP Req.",
          "hint": "The experience value required to reach the next level."
        },
        "diff": {
          "label": "EXP to Next",
          "hint": "The experience value required to reach the next level."
        }
      },
      "level": {
        "label": "Level",
        "hint": "The level of the actor."
      }
    },
    "ItemSheet": {
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "details": {
          "label": "Details"
        },
        "attack": {
          "label": "Attack"
        },
        "actions": {
          "label": "Actions"
        },
        "effects": {
          "label": "Effects"
        }
      },
      "SendToChatLabel": "Send to Chat"
    },
    "SpeciesSheet": {
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "details": {
          "label": "Details"
        },
        "evolution": {
          "label": "Evolutions"
        },
        "moves": {
          "label": "Moves"
        }
      },
      "SendToChatLabel": "Send to Chat",
      "evolutions": {
        "label": "Evolutions",
        "missing": "No further evolutions, drop species here to add one",
        "methods": {
          "label": "Evolution Methods",
          "missing": "No method specified, please add one.",
          "type": {
            "label": "Type",
            "hint": "The type of this method (Minimum Level, Item Held, Move Known, Gender)",
            "level": {
              "label": "Level",
              "hint": "The minimum level the creature must be to evolve into this form"
            },
            "item": {
              "label": "Item",
              "hint": "The item the creature must be holding to evolve into this form (the item will be consumed)"
            },
            "move": {
              "label": "Move",
              "hint": "The move the creature must know to evolve into this form"
            },
            "gender": {
              "label": "Gender",
              "hint": "The Gender the creature must be to evolve into this form",
              "male": "Male",
              "female": "Female",
              "genderless": "Genderless"
            }
          },
          "value": {
            "label": "Value",
            "hint": "The value of the method, hover over individual fields for more specific details."
          },
          "operand": {
            "label": "And / Or",
            "hint": "All requirements marked as 'And' must be met, while only one one of the requirements marked as 'Or' needs to be.",
            "and": "And",
            "or": "Or"
          }
        },
        "copyPasteTree": {
          "copy": "Evolution tree from species '{name}' copied",
          "paste": {
            "title": "Paste Evolution Tree?",
            "content": "Are you sure you wish to overwrite the Evolution Tree for '{thisName}'?<br><br>The copied version's 1st Stage is: '{copyName}'?<br><br><i><b>This action cannot be undone.</b></i>",
            "success": "Evolution tree from species '{name}' pasted"
          }
        }
      },
      "moves": {
        "dropMoveError": "Only moves can be added to this list"
      }
    },
    "PartySheet": {
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "party": {
          "label": "Organize Party/Boxes"
        }
      }
    },
    "TeamSheet": {
      "Tabs": {
        "overview": {
          "label": "Overview"
        },
        "party": {
          "label": "Parties"
        }
      }
    },
    "TokenPanel": {
      "Tabs": {
        "attack-slots": {
          "label": "Attack Slots"
        },
        "attack-other": {
          "label": "Other Attacks"
        },
        "passives": {
          "label": "Passives"
        },
        "generic-actions": {
          "label": "Generic Actions"
        },
        "skills": {
          "label": "Skills"
        },
        "effects": {
          "label": "Effects"
        }
      }
    },
    "Status": {
      "AccuracyRoll": {
        "Label": "Accuracy Roll",
        "Hint": "The roll to determine if the attack hits."
      },
      "MoveAccuracy": {
        "Label": "Move Accuracy",
        "Hint": "The accuracy of the move."
      },
      "CritRoll": {
        "Label": "Critical Hit Roll",
        "Hint": "The roll to determine if the attack is a Critical Hit."
      },
      "CritDC": {
        "Label": "Critical Hit DC",
        "Hint": "The Critical Hit DC of this attack, calculated based on the attacker's CRIT stages."
      },
      "AdjustedStages": {
        "Label": "Adjusted Stages",
        "Hint": "The combined accuracy stages of the attacker, and evasion stages of the defender. (max 6, min -6)"
      },
      "CritStages": {
        "Label": "CRIT Stages",
        "Hint": "The CRIT Stages applied to this attack (min 0, max 4)"
      },
      "OtherModifiers": "Other Modifiers",
      "ChangeToCritical": "Make Crit",
      "ChangeToMiss": "Make Miss",
      "ChangeToHit": "Make Hit"
    },
    "Damage": {
      "ApplyDamage": "Apply Damage",
      "Apply": "Apply",
      "level": {
        "Label": "Level",
        "Hint": "The level of the attacker."
      },
      "power": {
        "Label": "Power",
        "Hint": "The power of the attack."
      },
      "attack": {
        "Label": "Attack",
        "Hint": "The appropriate attack bonus of the attacker."
      },
      "defense": {
        "Label": "Defense",
        "Hint": "The appropriate defense bonus of the defender."
      },
      "targets": {
        "Label": "Targets",
        "Hint": "1 if single target, otherwise 0.75."
      },
      "critical": {
        "Label": "Critical",
        "Hint": "1.5 if crit, 2 if crit and sniper ability, otherwise 1."
      },
      "random": {
        "Label": "Random",
        "Hint": "Random damage multiplier."
      },
      "stab": {
        "Label": "STAB",
        "Hint": "The same type attack bonus."
      },
      "type": {
        "Label": "Type",
        "Hint": "Effectiveness bonus or penalty."
      },
      "other": {
        "Label": "Other",
        "Hint": "Other damage modifiers."
      }
    },
    "Actions": {
      "attack": {
        "Label": "Attack Actions"
      },
      "CreateVariantLabel": "Create Variant",
      "VariantOfLabel": "Open Original",
      "DeleteVariantLabel": "Delete Variant",
      "OpenItemLabel": "Open Item"
    },
    "UI": {
      "DevMode": {
        "CommitToGithub": {
          "Label": "Commit to Github",
          "Hint": "Commit the current changes to the Github repository."
        },
        "Name": "Developer Mode",
        "Hint": "Enable developer mode."
      }
    },
    "Dialog": {
      "DeleteDocumentContent": "Are you sure you want to delete: {name}?",
      "DeleteDocumentTitle": "Delete {name}?"
    },
    "Skills": {
      "luck": {
        "label": "Luck",
        "hint": "Luck is representative of a \"cosmic karma\", one that guides a creature's favors and fortunes. Luck allows the manipulation of Skill Checks, and a few other aspects of the game. Luck is a resource that only Player Characters and Aces have, due to the \"plot importance\" these creatures tend to have, both in-game and out-of-game. At character creation, a Player determines their initial luck by rolling 3d6 and multiplying the result by 5.<br><br>For more information, see the Luck section of the Rules, under Skill Checks & Luck."
      },
      "accounting": {
        "label": "Accounting",
        "hint": "This skill is used to look over records, be they financial, inventory, or otherwise and look for discrepancies. Things that just don't add up. Serves a niche as an investigation skill, or potentially a professional skill for campaigns that way inclined."
      },
      "acrobatics": {
        "label": "Acrobatics",
        "hint": "The Acrobatics skill is responsible for jumping and vaulting, along with activities such as zip wiring and parachuting. It does not, however, cover trying to fly at speed but it can be utilized in place of Running for Threaded movement."
      },
      "appraise": {
        "label": "Appraise",
        "hint": "This skill is used to determine the relative value of an object. A successful Appraise role might lend an edge as part of a Negotiation, or yield information pertaining to the quality of a piece of gear a character might have."
      },
      "archaeology": {
        "label": "Archaeology",
        "hint": "This skill is used to study ancient things. This includes studying ruins, knowledge of past civilizations, and deciphering lost inscriptions."
      },
      "aura-sense": {
        "label": "Aura Sense",
        "hint": "The Aura Sense skill governs interactions with Aura, ranging from perceiving and analyzing aura to manipulating it and the process of Channeling."
      },
      "climb": {
        "label": "Climb",
        "hint": "This is a fairly straightforward skill. It governs the pace and aptitude for climbing, and it what creatures use to Rush while burrowing."
      },
      "computers": {
        "label": "Computers",
        "hint": "The all-around skill that governs the use of computers and the internet. GMs may find this skill warrants converting into a skill category for more tech-intensive campaigns."
      },
      "conversation": {
        "label": "Conversation",
        "hint": "This is a general-purpose social skill that covers interaction uses such as charming and persuading. Any socialization that doesn't cover lying, intimidation or deal-making. In the unusual event that this roll needs to be opposed, the other side should also use Conversation."
      },
      "disguise": {
        "label": "Disguise",
        "hint": "For when you need to pretend to be someone or something else. Opposed by Psychology or Spot, depending on which is more appropriate."
      },
      "electronics": {
        "label": "Electronics",
        "hint": "This skill is used to understand electronics and perform electrical repairs on devices. Some Pokemon may use the Electronics skill to manipulate or disrupt electrical devices."
      },
      "engineering": {
        "label": "Engineering",
        "hint": "This skill is used to understand complex engineering designs. If appropriate can be used in design and construction capacities, but more commonly it would be utilized by a character seeking to sabotage or damage a structure or vehicle."
      },
      "fast-talk": {
        "label": "Fast Talk",
        "hint": "The skill used to bamboozle, confound, and lie your way around obstacles. Obfuscate your intent with either masterful ad-lib deception, or by merely confusing your opponent."
      },
      "flying": {
        "label": "Flying",
        "hint": "The Flying skill is used to Rush for Flying Movement, governing a creature's capacity for self-induced flight."
      },
      "handiwork": {
        "label": "Handiwork",
        "hint": "The Handiwork skill covers various trades and crafts, mainly covering construction, woodworking, sewing, fletching, plumbing, smithing, and more! This ranges from broad knowledge of specific trades to specific capability in applying said knowledge, like in terms of Crafting."
      },
      "history": {
        "label": "History",
        "hint": "This skill is used to establish familiarity with historical events. It tends to be more applicable to more recent history, as the ancient falls within the purview of the Archaeology skill."
      },
      "husbandry": {
        "label": "Husbandry",
        "hint": "The function of this skill is to feed and care for others. This skill governs cooking, breeding and general care of both Pokemon and humans."
      },
      "intimidate": {
        "label": "Intimidate",
        "hint": "The Intimidate skill is what you need when you want to scare someone or bully your way into getting what you want. It may get you results, but creatures will likely remember you and it will not be fondly. This skill can be opposed with Intimidate or Leadership."
      },
      "leadership": {
        "label": "Leadership",
        "hint": "This skill is used to establish authority over others similar to Intimidate, however with respect rather than fear. It can be used to inspire and command, and interacts with Pack Mon perks. You may use the Leadership skill to bolster an ally that someone is attempting to intimidate."
      },
      "legal": {
        "label": "Legal",
        "hint": "This skill represents a character's understanding of the legal system and its processes, and can either utilize that knowledge to help stay out of trouble or to have the knowledge needed to manipulate procedures to their advantage."
      },
      "lift": {
        "label": "Lift",
        "hint": "This skill governs the raw physical ability to lift and carry and to perform feats of strength beyond what a creature could normally do comfortably."
      },
      "listen": {
        "label": "Listen",
        "hint": "This skill governs the ability to detect creatures or activity through hearing."
      },
      "locksmith": {
        "label": "Locksmith",
        "hint": "The art of picking locks. This can be used as a general breaking & entering skill, with computers governing hacking one's way into electronic systems. In suitably advanced settings, consider allowing Locksmith to work with electronic locks also."
      },
      "mechanics": {
        "label": "Mechanics",
        "hint": "This skill is to perform mechanical repairs and upgrades to machines or devices and working with simpler electrical components. These can range from repairing small gadgets, like flashlights, household appliances, traditional motor vehicles, factory machines, etc., but will likely not cover \"smart\" devices, like high-end smart phones, non-mechancal computers, or cyberpunk/sci-fi type \"bleeding edge\" devices and implements in more contemporary campaign settings."
      },
      "medicine": {
        "label": "Medicine",
        "hint": "This skill governs all medical training, whether that be diagnostics, first aid or surgery."
      },
      "natural-world": {
        "label": "Natural World",
        "hint": "The Natural World skill is used for a character to understand the fundamentals of nature, such as identifying trees and mosses and types of berries and mushrooms. Also covers non-artistic gardening pursuits."
      },
      "navigate": {
        "label": "Navigate",
        "hint": "This skill is used to find your way when traveling outside of your normal default habitat. This is as true for migratory Pokemon as it is for humans leaving their cities, but would not be required for a Pokemon staying in its forest, or the human navigating around the city in which they live."
      },
      "negotiation": {
        "label": "Negotiation",
        "hint": "This skill covers the art of the deal. If you want something and the other creature is willing to give you it, for a price, then this skill can be used to determine who gets the better end of the deal."
      },
      "psychology": {
        "label": "Psychology",
        "hint": "This skill is used to determine someone's mental or emotional state. This can either be from a perspective of reading their intentions, providing them with treatment (such as traumatized Shadow Pokemon), or seeing through someone's Disguise act or Fast Talking."
      },
      "read-lips": {
        "label": "Read Lips",
        "hint": "This skill is used when a character is able to see someone speaking but is unable to hear them for whatever reason, and wants to understand what they are saying. Potentially useful for any hearing-impaired characters."
      },
      "research": {
        "label": "Research",
        "hint": "This skill is used to hit the books at the library or similar. Specifically for finding out information that your character needs but does not already know by virtue of their other skills."
      },
      "resources": {
        "label": "Resources",
        "hint": "This skill cannot be raised using skill points after level 1. The Resources skill is used to determine your character's spending power, and can also serve as a measure of their status."
      },
      "ride": {
        "label": "Ride",
        "hint": "The Ride skill is used to stay mounted on another creature. For gentle transit, Ride checks generally should not be required, but once things get tense a Ride skill can be all that separates you from a mouthful of dirt. May also be used in riding competitions."
      },
      "running": {
        "label": "Running",
        "hint": "The Running skill is for when overland creatures gotta go fast. Use this skill to Rush using Overland Movement, or to participate in feats of speed during events such as a Pokeathlon."
      },
      "sleight-of-hand": {
        "label": "Sleight of Hand",
        "hint": "This skill covers feats of legerdemain and physical misdirection, such as card tricks and other non-magical illusions along with the likes of picking pockets."
      },
      "spot": {
        "label": "Spot",
        "hint": "As the name implies, this skill is utilized to spot things, usually something hard to see or outright hidden. That can be creatures within your field of view trying to use Stealth against you, or it can be used in an investigative context to look for hidden clues."
      },
      "stealth": {
        "label": "Stealth",
        "hint": "This skill covers efforts to conceal yourself that do not rely on disguise or social interaction. This is opposed by Listen where creatures do not have you in their field of view, or Spot if they do. Can also be utilized to blend into crowds and to tail unsuspecting marks."
      },
      "survival": {
        "label": "Survival",
        "hint": "This skill is used to find shelter and to seek out edible foods in the wilderness. It may be appropriate to use for field crafting of things like rafts and temporary bridges, especially if you do not have a full handyman's or mechanic's toolset to tackle normally."
      },
      "swim": {
        "label": "Swim",
        "hint": "The Swim skill covers all applications of the Acrobatics and Running skills but in the water, including using Rush. It also covers any checks that might be required in line with diving."
      },
      "teaching": {
        "label": "Teaching",
        "hint": "This skill is used to help instruct another creature in a skill or other knowledge you already possess. Used for more general Aid rolls and all varieties of Tutoring."
      },
      "track": {
        "label": "Track",
        "hint": "The Track skill is used to follow the trail that another creature has left in order to follow them to their home or other location. If the creature is actively trying to avoid being followed, this is opposed by Stealth. Also used for Fishing."
      },
      "arts": {
        "label": "Arts",
        "hint": "This is a collection of undefined skills for the most part, though some examples might exist such as Painting or Flower Arrangement. This skill is a measure of talent for creative pursuits and is left to the player to define the bounds of their art.",
        "painting": {
          "label": "Painting",
          "hint": "This skill is used to create works of art using paint. This can be used to create paintings, murals, or other works of art."
        },
        "sculpting": {
          "label": "Sculpting",
          "hint": "This skill is used to create works of art using clay or stone. This can be used to create sculptures, statues, or other works of art."
        },
        "acting": {
          "label": "Acting",
          "hint": "This skill is used to perform on stage or in front of a camera. This can be used to act in plays, movies, or other performances."
        },
        "dancing": {
          "label": "Dancing",
          "hint": "This skill is used to perform dance routines. This can be used to dance in shows, competitions, or other performances."
        },
        "singing": {
          "label": "Singing",
          "hint": "This skill is used to perform songs. This can be used to sing in concerts, competitions, or other performances."
        },
        "flower-arrangement": {
          "label": "Flower Arrangement",
          "hint": "This skill is used to create works of art using flowers. This can be used to create bouquets, wreaths, or other works of art."
        },
        "writing": {
          "label": "Writing",
          "hint": "This skill is used to create written works. This can be used to write books, articles, or other written works."
        }
      },
      "occult": {
        "label": "Occult",
        "hint": "The Occult skills are actually several skills under one group, purchased separately. These are Psychic, Ghost, Dragon, Fairy, Spiritual, Legendary, Paradox. The skills cover knowledge about the topics they’re named for. GMs may wish to add more Occult knowledge as appropriate for their campaign setting.",
        "psychic": {
          "label": "Psychic",
          "hint": "This skill is used to understand and use psychic powers, including using Rush while utilizing Teleport Movement."
        },
        "ghost": {
          "label": "Ghost",
          "hint": "This skill is used to understand and interact with ghostly entities."
        },
        "dragon": {
          "label": "Dragon",
          "hint": "This skill is used to understand and interact with dragon-like entities."
        },
        "fairy": {
          "label": "Fairy",
          "hint": "This skill is used to understand and interact with fairy-like entities."
        },
        "spiritual": {
          "label": "Spiritual",
          "hint": "This skill is used to understand and interact with spiritual entities."
        },
        "legendary": {
          "label": "Legendary",
          "hint": "This skill is used to understand and interact with legendary entities."
        },
        "paradox": {
          "label": "Paradox",
          "hint": "This skill is used to understand and interact with paradoxical entities."
        }
      },
      "performance": {
        "label": "Performance",
        "hint": "Performance comes in Cool, Clever, Cute, Beauty and Tough variations and these are the primary skills used for Pokemon Contests, but that doesn’t need to be their only applications. We encourage you to let your creativity thrive with these.",
        "cool": {
          "label": "Cool",
          "hint": "This skill is used to perform cool tricks or stunts. This can be used to impress an audience, intimidate an opponent, or show off in general."
        },
        "clever": {
          "label": "Clever",
          "hint": "This skill is used to perform clever tricks or stunts. This can be used to outsmart an opponent, solve a puzzle, or show off in general."
        },
        "cute": {
          "label": "Cute",
          "hint": "This skill is used to perform cute tricks or stunts. This can be used to charm an audience, distract an opponent, or show off in general."
        },
        "beauty": {
          "label": "Beauty",
          "hint": "This skill is used to perform beautiful tricks or stunts. This can be used to impress an audience, inspire an opponent, or show off in general."
        },
        "tough": {
          "label": "Tough",
          "hint": "This skill is used to perform tough tricks or stunts. This can be used to intimidate an audience, overpower an opponent, or show off in general."
        }
      },
      "pilot": {
        "label": "Pilot",
        "hint": "This group of skills, purchased separately, measure a character’s ability to pilot a vehicle. The example Piloting skills we have included here are Bike, Small Motor Vehicles, Cars, Utility Vehicles, Military Ground Vehicles, Walkers, Aircraft, Aerospace Vehicles, Exotic Vehicle (Specific), Watercraft. You may wish to add or remove from this list as appropriate for your campaign setting (such as carriages in a fantasy setting.)",
        "bike": {
          "label": "Bike",
          "hint": "This skill is used to pilot a bike."
        },
        "small-motor-vehicles": {
          "label": "Small Motor Vehicles",
          "hint": "This skill is used to pilot small motor vehicles."
        },
        "cars": {
          "label": "Cars",
          "hint": "This skill is used to pilot cars."
        },
        "utility-vehicles": {
          "label": "Utility Vehicles",
          "hint": "This skill is used to pilot utility vehicles."
        },
        "military-ground-vehicles": {
          "label": "Military Ground Vehicles",
          "hint": "This skill is used to pilot military ground vehicles."
        },
        "walkers": {
          "label": "Walkers",
          "hint": "This skill is used to pilot walkers."
        },
        "aircraft": {
          "label": "Aircraft",
          "hint": "This skill is used to pilot aircraft."
        },
        "aerospace-vehicles": {
          "label": "Aerospace Vehicles",
          "hint": "This skill is used to pilot aerospace vehicles."
        },
        "exotic-vehicle-specific": {
          "label": "Exotic Vehicle (Specific)",
          "hint": "This skill is used to pilot a specific exotic vehicle."
        },
        "watercraft": {
          "label": "Watercraft",
          "hint": "This skill is used to pilot watercraft."
        }
      },
      "science": {
        "label": "Science",
        "hint": "The Science group skill covers a number of fields, purchased separately. Examples include Astronomy, Biology, Botany, Chemistry, Cryptography, Forensics, Geology, Mathematics, Meteorology, Parapsychology, Pharmacy, Physics, Zoology. Pokémon-specific fields include Megalobiology, Terastology, Ultrology, Paradoxian Studies. The GM may add to or remove from this list as appropriate to their campaign. This skill represents specialized knowledge in a field and will generally rely upon either specific perks, or a situational application that the GM or Player must call for.",
        "astronomy": {
          "label": "Astronomy",
          "hint": "This skill is used to study the stars and planets."
        },
        "biology": {
          "label": "Biology",
          "hint": "This skill is used to study living organisms."
        },
        "botany": {
          "label": "Botany",
          "hint": "This skill is used to study plants."
        },
        "chemistry": {
          "label": "Chemistry",
          "hint": "This skill is used to study chemicals."
        },
        "cryptography": {
          "label": "Cryptography",
          "hint": "This skill is used to study codes and ciphers."
        },
        "forensics": {
          "label": "Forensics",
          "hint": "This skill is used to study evidence from crime scenes."
        },
        "geology": {
          "label": "Geology",
          "hint": "This skill is used to study rocks and minerals."
        },
        "mathematics": {
          "label": "Mathematics",
          "hint": "This skill is used to study numbers and equations."
        },
        "meteorology": {
          "label": "Meteorology",
          "hint": "This skill is used to study the weather."
        },
        "palaeontology": {
          "label": "Palaeontology",
          "hint": "This skill is used to study ancient organisms and fossils."
        },
        "parapsychology": {
          "label": "Parapsychology",
          "hint": "This skill is used to study psychic phenomena, and for using Rush while utilizing Teleport Movement."
        },
        "pharmacy": {
          "label": "Pharmacy",
          "hint": "This skill is used to study drugs and medicines."
        },
        "physics": {
          "label": "Physics",
          "hint": "This skill is used to study matter and energy."
        },
        "zoology": {
          "label": "Zoology",
          "hint": "This skill is used to study animals."
        },
        "eschatobiology": {
          "label": "Eschatobiology",
          "hint": "This skill is used to study the biology and mechanics governing Mega Evolution."
        },
        "megalobiology": {
          "label": "Megalobiology",
          "hint": "This skill is used to study the Dynamax Phenomenon."
        },
        "terastology": {
          "label": "Terastology",
          "hint": "This skill is used to study the Terastal Phenomenon."
        },
        "ultrology": {
          "label": "Ultrology",
          "hint": "This skill is used to study the biology of Ultra Beasts."
        },
        "paradoxian-studies": {
          "label": "Paradoxian Studies",
          "hint": "This skill is used to study the biology of Paradox Pokemon."
        }
      }
    },
    "PokemonGeneration": {
      "Progress": {
        "Prefix": "PTR2E | Pkmn Generator | ",
        "Step1": "Prompting User for Details...",
        "Step2": "Determining Basic info...",
        "Step3": "Creating Moves...",
        "Step4": "Creating Abilities...",
        "Step5": "Finding art...",
        "Complete": "Pokemon Generation Complete!"
      }
    },
    "Tours": {
      "welcome": {
        "title": "Welcome to the PTR2e Alpha Test!",
        "description": "This is a guided tour of the system to help you get started.",
        "steps": {
          "welcome": {
            "title": "Welcome to the Alpha!",
            "content": "Thank you for participating in the Closed Alpha Test of Pokemon Tabletop Reunited: Evolved!\nThis is a \"tour\" to help get you started!"
          },
          "alpha": {
            "title": "Alpha Test",
            "content": "As you're aware the system both in Foundry and the ruleset are in Alpha.\nThis means that not only are you likely to run into Foundry Bugs, but you'll likely find things that are unfinished, or not quite as balanced as we'd like in the regular rules too!\nPlease keep this in mind while testing and provide feedback where you can!"
          },
          "discord": {
            "title": "Discord",
            "content": "The Discord is the primary place for communication and support for the system.\nYou can find the Discord <a href=\"https://discord.gg/ptrfvtt\">here</a>.\nIf you're not already in the Discord, please join and have whomever invited you to the Alpha let us know so we can give you the Alpha Tester role!"
          },
          "feedback": {
            "title": "Reporting Bugs, providing Feedback and Suggestions!",
            "content": "If you ever run into a bug, or have feedback or suggestions, please let us know!\nThere are a couple ways you can do so:<ul><li>On the discord post in #2e-alpha-feedback</li><li>Use one of the following commands on the Discord Server:<ul><li><code>/create-issue 2e</code></li><li><code>/bug-report 2e</code></li><li><code>/feature-request 2e</code></li></ul></li><li>Directly report things over on the <a href=\"https://github.com/pokemon-tabletop-reunited/ptr2e/issues\">Github</a></li></ul>"
          },
          "rules": {
            "title": "Finding the Rules",
            "content": "Currently the rules are not yet available in Foundry, so for the foreseeable future you will have to grab them from the <a href=\"https://2e.ptr.wiki/rules\">PTR2e Wiki</a>.\nThis page requires you to be logged in and have the Alpha Tester role to view.\nIf you don't have access please reach out in #2e-alpha on the Discord after having created a Wiki Account."
          },
          "style": {
            "title": "Style Tip!",
            "content": "Foundry has added build in support for Light vs Dark mode, and we're making use of this! Please check out the core Foundry Settings to set your preferred mode!"
          },
          "next": {
            "title": "Next Steps",
            "content": "We've included a bunch of Tours for you to use to learn more about the Foundry side of things.\nIf you ever need to check them out again, you can find them in Tour Management in the Settings Tab of the Sidebar."
          }
        }
      },
      "folders": {
        "title": "Folders",
        "description": "Learn more about the PTR2e Unique; Team & Party Folders. There to upgrade your organisational needs!",
        "steps": {
          "welcome": {
            "title": "Welcome to the Folders Tour!",
            "content": "This tour will guide you through the Team and Party Folders, unique to PTR2e!\nLets get started with creating a New Folder!"
          },
          "createDialog": {
            "title": "Creating a New Folder",
            "content": "While creating a Folder you can set up either a Team or a Party by dragging any Actor to the appropriate field.\nTeams are a collection of Actors, for example all your PCs or perhaps all the NPCs in a specific location.\nParties meanwhile are for a Trainer or Expedition Leader and their Pokémon."
          },
          "createParty": {
            "title": "Creating a Party",
            "content": "Dragging in an Actor onto the 'Owner' field will create a Party Folder for that actor, as can be seen here for Tour-san!\nParty Folders automatically display all their associated Actors within them once they've been created\nThis includes the owner and their direct Party Members\nAny other related Actors can be added in any (regular) Sub Folder, for example a 'Box' Folder for all the Pokémon in a PC's Box."
          },
          "openPartySheet": {
            "title": "Opening a Party Sheet",
            "content": "You can open a Party Sheet by clicking the 'Open Party Sheet' icon on a Party Folder.\nThis will show you all the details of the Party."
          },
          "openedPartySheet": {
            "title": "Opened Party Sheet",
            "content": "Here you can see the Party Sheet for Tour-san, including all their Party Members.\nIn the Parties' Tab you can see all the Parties owned by the Owner, and manage them from here. (Coming Soon!)"
          },
          "addPartyMembers": {
            "title": "Adding Party Members",
            "content": "You can add Party Members to a Party Folder by dragging in any Actor on top of the folder or it's 'Party' section in the Sidebar's Actor Tab. This will automatically add them to the Party Folder."
          },
          "createTeam": {
            "title": "Creating a Team",
            "content": "Dragging in an Actor onto the 'Team Members' field will create a Team Folder including that Actor, as you can see here for Tour-san and their Voltorb!\nThis won't directly move these actors into this folder, allowing you to keep track of any related Actors, like all PCs or all the NPCs in a specific location, without moving them around."
          },
          "openTeamSheet": {
            "title": "Opening a Team Sheet",
            "content": "You can open a Team Sheet by clicking the 'Open Team Sheet' icon on a Team Folder.\nThis will show you all the details of the Team, including all the Team Members."
          },
          "openedTeamSheet": {
            "title": "Opened Team Sheet",
            "content": "Here you can see the Team Sheet of which Tour-san and their Voltorb are part of.\nIn the Team's Parties Tab you can see all the Parties owned by Team Members, and manage them from here."
          }
        }
      },
      "characterCreation": {
        "title": "Actor Sheet Walkthrough",
        "description": "A walkthrough of the Character Sheet, to help you get started with making your first character!",
        "steps": {
          "welcome": {
            "title": "Welcome to the Actor Sheet Walkthrough!",
            "content": "This tour will guide you through the Actor Sheet, where you can see all the details of your Characters and NPCs!\nLet's get started with the Character Overview!"
          },
          "overview": {
            "title": "Character Overview",
            "content": "On the overview tab you can see some basic details of your Character.\nAt the moment this tab comes pre-loaded with your favourite skill list, movement speeds, and stats.\nIn the future this page will be fully customizable, allowing you to add any information from any tab to this page as you wish!"
          },
          "favouriteSkills": {
            "title": "Favourite Skills",
            "content": "Any skills marked as Favourite will show up in the favourite list, for quick access and reference!\nFavourite skills also show in the Token Panel's 'Skills' Tab!"
          },
          "movement": {
            "title": "Movement",
            "content": "You can see your Character's Movement Speeds in the Movement Section.\nAt this point in time there is no automation for tracking speed, and so you will have to track this manually until it is added in a later build!"
          },
          "stats": {
            "title": "Stats",
            "content": "Over here you can see your stats radar, you can open up the editor by double clicking on the radar!"
          },
          "statsEditor": {
            "title": "Stats Editor",
            "content": "In the Stats Editor you can adjust your stats, and see how they affect your derived stats!\nHumanoids will be able to assign both their Base Stats and EVs, while Pokémon can only update their EVs."
          },
          "sidebar": {
            "title": "Sidebar",
            "content": "The Sidebar is available in every tab and shows you some basic details like your HP, PP, EXP and Combat Stages.\nYou can also access the Perk Web from here!"
          },
          "actions": {
            "title": "Actions",
            "content": "The Actions Tab is where you can find all the different Actions your Character can take.\nThis includes Attack Actions, Passives, Generic Actions, and more."
          },
          "attacks": {
            "title": "Attack Actions",
            "content": "Every Character can know an unlimited amount of Attacks! However, they may only have a maximum of 6 Attacks occuping their Attack Slots, which can be changed whenever you Camp through the 'Known Attacks' menu."
          },
          "knownAttacks": {
            "title": "Known Attacks",
            "content": "From here you can simply drag & drop the Attacks you want to use today into the right slot on the Actor Sheet, as well as manage which Attacks you know in general.\n'Free' Attacks, those that do not take up an Attack Slot, are not shown here."
          },
          "otherAttacks": {
            "title": "Other Attacks",
            "content": "Any Attack that doesn't take up an Attack Slot, show up here.\nThis currently also includes 'Move Variants', like the different types of Weather Ball, these will stay here until 'Move Variants' are fully implemented into the 'Roll Window'"
          },
          "genericActions": {
            "title": "Generic Actions",
            "content": "Besides the Combat Actions tab there are also the Downtime Actions and Generic Actions tab, some of these may be used in combat, but most are for out of combat use."
          },
          "inventory": {
            "title": "Inventory",
            "content": "The Inventory Tab is where you can see all the Items your Character is carrying.\nThis includes all the Items in their Backpack, as well as any Items they are Wearing or Holding.\nCurrently the inventory has an extremely basic implementation, and the appropriate sections will show up once you add items of their types to your sheet."
          },
          "inventoryPoints": {
            "title": "Inventory Points",
            "content": "You can see how many Inventory Points your Character has in the Inventory Points Section and track them!\nFor now, you will have to track these manually until we add automation for this in a later build!"
          },
          "skills": {
            "title": "Skills",
            "content": "The Skills Tab is where you can see all the Skills your Character knows.\nSkills can effectively be in 3 states, 'Favourited', 'Normal' and 'Hidden'.\nFavourite skills show at the top of the Skills list, as well as showing up in the 'Favourite Skills' component and Token Panel's 'Skills' tab.\nHidden Skills meanwhile aren't shown, you can use this to hide skills that aren't important to your settings, or that you doubt your character will ever use!\nYou can always unhide them using the 'Toggle Hidden Skills' button on the right-hand side."
          },
          "popoutSkills": {
            "title": "Popout Skills",
            "content": "A lot of components can be 'Popped Out', just like the Skills List!\nThis allows you to have multiple components that are on different tabs open at once, or even exclusively open a component in a new window and be able to close the Character Sheet!\nYou can do this by simply clicking the 'Popout' Icon in the top right corner of any component that supports this."
          },
          "editSkills": {
            "title": "Edit Skills",
            "content": "Whenever you have skill points to spend it'll be quite obvious by the glowing 'Open Skills Editor' button!\nClick it to open the Skills Editor and spend your points!"
          },
          "perks": {
            "title": "Perks",
            "content": "The Perks Tab is where you can see all the Perks your Character has, as well as any possible Abilities."
          },
          "traits": {
            "title": "Traits",
            "content": "Besides Perks & Abilities, you can also view any Traits your actor has here.\nYou can manually add more traits here simply by clicking on the bar and typing the required trait in.\nTraits are currently partially automated, for example any Traits from your Species will be added here. But any traits granted by Perks or other sources will have to be added manually for the foreseeable future."
          },
          "effects": {
            "title": "Effects",
            "content": "The Effects Tab is where you can see all the Effects your Character has.\nLike poor Tour-san here who is Fainted.\nAdding effects can be done either through Automation, through dragging in an Effect from the Foundry Sidebar or another Sheet, or through the right-click token-status menu.\nPlease note that currently the right-click token status menu shows *all* afflictions in the system, this will later be streamlined to only show those that are pertinent like Fainted, Paralyzed, etc."
          }
        }
      },
      "perkWeb": {
        "title": "Perk Web",
        "description": "The Perk Web is how you can see and purchase Perks for your Characters and NPCs! This tour will guide you on how to use it!",
        "steps": {}
      },
      "generatingPokemon": {
        "title": "Quick-Generating Pokémon",
        "description": "A Walkthrough on 'Dex Drag-In' a returning fan-favourite feature for quickly generating Pokémon!",
        "steps": {}
      }
    }
  }
}