{
    "COMBAT.ResetEncounter": "Reset Encounter",
    "TYPES.Actor.humanoid": "Humanoid",
    "TYPES.Actor.pokemon": "Pok√©mon",
    "TYPES.Item.ability": "Ability",
    "TYPES.Item.consumable": "Consumable",
    "TYPES.Item.container": "Container",
    "TYPES.Item.effect": "Effect",
    "TYPES.Item.equipment": "Equipment",
    "TYPES.Item.gear": "Gear",
    "TYPES.Item.move": "Move",
    "TYPES.Item.perk": "Perk",
    "TYPES.Item.species": "Species",
    "TYPES.Item.weapon": "Weapon",
    "TYPES.ActiveEffect.passive": "Passive Effect",
    "TYPES.ActiveEffect.affliction": "Affliction",
    "ITEM.AddButton": "Add",
    "ITEM.DeleteButton": "Delete",
    
    "PTR2E": {
        "Modifiers": {
            "power": "Attack Power",
            "accuracy": "Accuracy Stages",
            "evasion": "Evasion Stages",
            "critical": "Critical Hit",
            "attack": "Attack Stat",
            "defense": "Defense Stat",
            "specialAttack": "Special Attack Stat",
            "specialDefense": "Special Defense Stat",
            "speed": "Speed Stat",
            "rip": "Range Increment Penalty"
        },
        "Effect": {
            "FIELDS": {
                "ChangeType": {
                    "label": "Type",
                    "hint": "The type of change.",
                    "basic": "AE-Like",
                    "flat-modifier": "Flat Modifier",
                    "stage-modifier": "Stage Modifier",
                    "percentile-modifier": "Percentile Modifier",
                    "roll-option": "Roll Option",
                    "grant-item": "Grant Item",
                    "grant-effect": "Grant Effect",
                    "ephemeral-effect": "Ephemeral Effect"
                },
                "ChangeLabel": {
                    "label": "Label",
                    "hint": "The label of the change."
                },
                "ChangeMode": {
                    "label": "Mode",
                    "hint": "The mode of the change."
                },
                "ChangeKey": {
                    "label": "Path",
                    "hint": "The system path of the change."
                },
                "ChangeValue": {
                    "label": "Value",
                    "hint": "The value of the change."
                },
                "ChangeSelector": {
                    "label": "Selector",
                    "hint": "The selector of the change."
                },
                "ChangeDomain": {
                    "label": "Domain",
                    "hint": "The domain of the change."
                },
                "ChangeUuid": {
                    "label": "UUID",
                    "hint": "The UUID of the change.",
                    "invalid": {
                        "notAnItemUuid": "UUID must be a valid Item UUID.",
                        "itemNotFound": "Failed to find an Item with UUID \"{uuid}\"."
                    }
                },
                "ChangeReevaluateOnUpdate": {
                    "label": "Reevaluate on Update",
                    "hint": "Whether to reevaluate this change on update."
                },
                "ChangeAllowDuplicate": {
                    "label": "Allow Duplicate",
                    "hint": "Whether to allow duplicates of this item."
                },
                "ChangePredicate": {
                    "label": "Predicate",
                    "hint": "The predicate of the change."
                },
                "priority": {
                    "label": "Priority",
                    "hint": "Affliction's are applied in batches based on their priority, from lowest to highest.\nThe system keeps all healing affliction at priority 0, and all damaging afflictions at priority 30, and in-between those numbers special cases are handled.\n\nFor homebrew content we recommend using these same numbers if your affliction is meant to be applied in the same batch as the system afflictions."
                },
                "formula": {
                    "label": "Formula",
                    "hint": "The result of this formula will be multiplied by the afflicted target's Max HP.\nExample Input: \"1/16\" (this is 1 tick)"
                },
                "type": {
                    "label": "Type",
                    "hint": "Whether this affliction's formula should be applied as damage or healing."
                },
                "removeAfterCombat": {
                    "label": "Remove After Combat",
                    "hint": "Whether this effect should be removed after a combat encounter ends."
                },
                "removeOnRecall": {
                    "label": "Remove On Recall",
                    "hint": "Whether this effect should be removed when the actor is taken out of combat (without ending combat)."
                },
                "stacks": {
                    "label": "Stacks",
                    "hint": "The number of stacks this affliction currently has."
                },
                "duration": {
                    "turns": {
                        "label": "Affl. Duration (Activations)",
                        "hint": "The number of activations this affliction will last before it is automatically deleted.\nLeave blank for afflictions that should persist indefinitely."
                    },
                    "startTurn": {
                        "label": "Applied On Activation",
                        "hint": "The Nth activation of the actor this affliction applies to, when the affliction was first applied.\nNote: Generally should not be edited."
                    },
                    "remaining": {
                        "label": "Remaining Activations",
                        "hint": "The number of activations remaining before this affliction expires and is removed."
                    }
                },
                "tint": {
                    "label": "Icon Tint Color",
                    "hint": "The color tint to apply to the effect icon."
                },
                "description": {
                    "label": "Effect Description",
                    "hint": "Description of the effect."
                },
                "disabled": {
                    "label": "Effect Suspended?",
                    "hint": "Whether this effect is suspended and should not be applied."
                },
                "origin": {
                    "label": "Effect Origin",
                    "hint": "The origin of the effect if any."
                },
                "transfer": {
                    "label": "Transfer Effect?",
                    "hint": "Whether this effect should apply to the actor holding this item (checked), or the item itself (unchecked)."
                }
            },
            "Statuses": {
                "Labels": {
                    "fainted": "Fainted",
                    "burn": "Burn",
                    "poison": "Poison",
                    "blight": "Blight",
                    "paralysis": "Paralysis",
                    "drowsy": "Drowsy",
                    "nightmares": "Nightmares",
                    "frozen": "Frozen",
                    "splinter": "Splinter",
                    "weak": "Weak",
                    "dull": "Dull",
                    "frail": "Frail",
                    "distracted": "Distracted",
                    "slowed": "Slowed",
                    "blind": "Blinded",
                    "vulnerable": "Vulnerable",
                    "hindered": "Hindered",
                    "stunted": "Stunted",
                    "confused": "Confused",
                    "flinched": "Flinched",
                    "hyper-mode": "Hyper Mode",
                    "weary": "Weary",
                    "stuck": "Stuck",
                    "bound": "Bound",
                    "disabled": "Disabled",
                    "nullified": "Nullified",
                    "suppressed": "Suppressed",
                    "lifted": "Lifted",
                    "raised": "Raised",
                    "harden": "Harden",
                    "sharpen": "Sharpen",
                    "destined": "Destined",
                    "disguised": "Disguised",
                    "braced": "Braced",
                    "duel": "Duel",
                    "engulfed": "Engulfed",
                    "curled": "Curled",
                    "chanted": "Chanted",
                    "choice-locked": "Choice-Locked",
                    "grounded": "Grounded",
                    "cursed": "Cursed",
                    "true-sight": "True Sight",
                    "shrink": "Shrink",
                    "enlarge": "Enlarge",
                    "marked": "Marked",
                    "unlucky": "Unlucky",
                    "perish": "Perish",
                    "invisible": "Invisible",
                    "transient": "Transient",
                    "fear": "Fear",
                    "stockpile": "Stockpile",
                    "leech": "Leech",
                    "rebound": "Rebound",
                    "ringed": "Ringed",
                    "enraged": "Enraged",
                    "charmed": "Charmed",
                    "taunted": "Taunted",
                    "grapple": "Grapple",
                    "resolved": "Resolved",
                    "stormcast": "Stormcast",
                    "boosted": "Boosted",
                    "rapid": "Rapid",
                    "strong": "Strong",
                    "agile": "Agile",
                    "precise": "Precise",
                    "evasive": "Evasive"
                },
                "Descriptions": {
                    "fainted": "When a creature's HP reaches and remains at 0, it is afflicted with Fainted. A Fainted creature cannot use Actions, does not benefit from Abilities, and is cured of all [Major Condition], [Minor Condition], [Pseudo Condition], and [Stat Change] effects they possess. Fainted is cured when the afflicted creature's HP is greater than 0. The creature's Weary count increases by 1 whenever they are cured of Fainted.",
                    "burn": "The afflicted creature loses a Tick of HP at the end of each of their Activations. The creature has Weak while Burn is active. Fire-Type creatures cannot be Burned.",
                    "poison": "The afflicted creature loses a Tick of HP at the end of each of their Activations. The creature also has Dull while Poison is active.",
                    "blight": "At the end of the afflicted creature‚Äôs Activation, it loses X Stacks of Blight, where X is 2<sup style='font-size: x-small;'># of Activations passed with Blight</sup> and takes a Tick of HP per Stack lost. The creature also has Dull while Blight is active. When a creature receives Blight, it loses the Poison Condition, with Blight gaining 33% of its remaining Poison Stacks as extra Stacks on Blight. When afflicted with Poisoned X while Blighted, the creature gains +1 to its Blight Stacks.",
                    "paralysis": "The afflicted creature's Base SPD is reduced by 50%, and the creature may only perform 1 Simple Action on its Activations.",
                    "drowsy": "The Power of all of the afflicted creature's attacks is reduced by 33%, and the creature cannot utilize the [Priority X] or [Interrupt X] capabilities of their Actions. The creature also has Distracted while Drowsy is active.",
                    "nightmares": "This condition can only be applied to Drowsy creatures. The Power of all of the afflicted creature's attacks is reduced by 50%, and the creature cannot utilize the [Priority X] or [Interrupt X] capabilities of their actions. The creature loses a Tick of HP at the end of each of its Activations and is Distracted and Slowed while Nightmares is active. When a creature receives Nightmares, it loses the Drowsy Condition, and gains 33% of its remaining Drowsy Stacks onto Nightmares, and further Nightmares Stacks cannot be applied.",
                    "frozen": "The afflicted creature is unable to use actions (either during its Activations or as interrupts/reactions), but takes 33% less damage from all sources. The afflicted creature has Frail while Frozen is active, and has its Base SPD increased by 50%. Additional Frozen Stacks cannot be added while Frozen is on a creature.",
                    "splinter": "The afflicted creature loses a Tick of HP when they are damaged by a Physical- or Special-Category attack. The creature has Stunted while Splinter is active.",
                    "weak": "The afflicted creature‚Äôs default ATK stages are reduced by 1.",
                    "dull": "The afflicted creature‚Äôs default SPATK stages are reduced by 1.",
                    "frail": "The afflicted creature's default DEF stages are reduced by 1.",
                    "distracted": "The afflicted creature's default SPDEF stages are reduced by 1.",
                    "slowed": "The afflicted creature‚Äôs Movement is cut in half, rounding down (minimum 1), and their default SPD stages are reduced by 1.",
                    "blind": "The afflicted creature‚Äôs default ACC stages are reduced by 1.",
                    "vulnerable": "The afflicted creature‚Äôs default EVA stages are reduced by 1.",
                    "hindered": "The afflicted creature‚Äôs Skill DCs are reduced by -10.",
                    "stunted": "When the afflicted creature recovers HP, that amount is reduced by 2 Ticks (if the amount after this reduction becomes negative, the afflicted creature instead just doesn‚Äôt recover HP at all).",
                    "confused": "At the end of the afflicted creature's Activations, it has a 50% chance of using Fumble.",
                    "flinched": "The creature's Activation is Delayed by their Flinched Stack Value (max 5) x 20%. A creature loses all Stacks of Flinched after its next Activation.",
                    "hyper-mode": "While afflicted with Hyper Mode, the afflicted creature gains +20% to all of its Movement Scores, while dealing and taking 15% more damage. As well, the user‚Äôs Shadow-Type attacks gain [Crit 1], or have their [Crit X] value increase by +1. At the start of the afflicted creature‚Äôs Activations, it has:<ul><li>a 40% chance to act normally on that Activation.</li><li>a 25% chance to be Choice-Locked 1 to Shadow-Type attacks.</li><li>a 15% chance of ending its Activation and using Fumble.</li><li>a 15% chance of using Backlash.</li><li>a 5% chance to be cured of Hyper Mode.</li></ul>",
                    "weary": "While a creature is Weary, its default ACC and EVA stages are based on its Weary value, X. Specifically, the default ACC and EVA stages are set to the negative sum of all X and all integers between 0 and X (Weary 1 sets the defaults to -1, 2 to -3, and 3 to -6). Weary is automatically increased by 1 when a creature Faints. When a creature has 4 or more Weary, it is unable to battle until they reduce their Weary. Weary cannot wear off on its own - a creature must deliberately Rest or consume Items such as Apples to remove Stacks of Weary.",
                    "stuck":"While afflicted with Stuck, creatures may not leave the combat area. If the afflicted creature is an owned Pokemon, it cannot willingly switch out (or be switched out by another party). When a creature with the [Trainer] or [Ace] trait would gain the Stuck condition; they instead gain Slowed X, rather than Stuck X.",
                    "bound":"The afflicted creature cannot willingly use any <Movement>. Stacks of Bound do not decrease at the end of a creature's Activation, instead the effect that applied Bound will provide a way of removing the Bound Condition.",
                    "disabled":"One of the afflicted creature‚Äôs attacks cannot be used, under any circumstances. The move in question is determined by the source of the disabled effect, usually being ‚Äúthe last attack the target used.‚Äù If this would prevent them from using any attack, they may Struggle instead.",
                    "nullified":"One of the afflicted creature‚Äôs abilities is negated, and cannot be activated or benefited from. The ability in question is determined by the source of the nullification, usually determined randomly.",
                    "suppressed": "The afflicted creature spends 50% more PP on all actions that use PP.",
                    "lifted": "the afflicted creature is held aloft, unable to act normally. The creature cannot use <Movement> other than [Teleport] while Lifted and is otherwise considered Stuck for the duration. A Lifted creature also suffers -6 EVA stages.",
                    "raised": "While a creature is Raised, it is immune to attacks and effects with the [Earthbound] trait.",
                    "harden": "While under the effect of Harden, the afflicted creature‚Äôs [Contact] attacks have +20 Power, and their [Dash] attacks gain [Crit 1] or have their [Crit X] increase by +1.",
                    "sharpen": "While under the effect of Sharpen, the afflicted creature‚Äôs [Dash] attacks gain [Sharp], and their [Sharp] attacks gain [Crit 1] or have their [Crit X] increase by +1.",
                    "destined": "when the afflicted creature deals damage with a Damaging Attack to the source of Destined, the afflicted creature is inflicted with the same amount of damage.",
                    "disguised": "The user is not easily recognized by sight. Any creature that attempts to see through Disguised must make a contested Psychology or Spot Hidden skill check against the Disguised creature‚Äôs Disguise skill, and upon success ignores any effects that require Disguised to be active.",
                    "braced": "while a creature is Braced, its default DEF and SPDEF stages are increased by +2 and its default ATK and SP.ATK stages are decreased by 1. Additionally, a Braced creature is immune to critical damage. A creature loses the Brace condition after it moves or makes an attack of its own accord.",
                    "duel": "while a creature is afflicted by Duel, the creature and the source of the condition have [Crit 2] on attacks they use against one another, and take and deal 33% less damage from/to creatures other than themselves. Pok√©mon afflicted with Duel or Pokemon that inflict Duel cannot leave battle or be switched out, except from the effects of attacks or abilities. If either the source or afflicted creature Faint or are otherwise removed from battle, the Duel condition is removed.",
                    "engulfed": "While a creature is afflicted with Engulfed, it is also considered to be Bound and Stuck. While Engulfed the afflicted creature cannot be targeted by Attacks, and it can only target the creature that has Engulfed it with Attacks, although these Attacks are resisted by two stages.",
                    "curled": "while Curled, a creature cannot use Held Items and has +1 default DEF stage. Additionally, moves with the [Curl] Trait have their Power doubled while their user is Curled.",
                    "chanted": "If an attack were to deal critical damage to a creature with Chanted, the attack instead deals damage as if it were not a Critical Hit.",
                    "choice-locked": "while Choice-Locked, a creature may only use the last attack or action it used.",
                    "grounded": "While Grounded, creatures become unable to use their [Flying] movement, nor can they be Lifted or Raised. They are also subject to all active Terrain effects even if they had the [Hover] Trait.",
                    "cursed": "While Cursed, an afflicted creature loses three ticks of HP at the end of each of their Activations.",
                    "true-sight": "The afflicted creature ignores invisibility and illusions.",
                    "shrink": "The afflicted creature‚Äôs Size Category is reduced by one.",
                    "enlarge": "The afflicted creature‚Äôs Size Category is increased by one.",
                    "marked":"While Marked, all creatures unallied to the afflicted creature and within 8m of it can only target the Marked creature with their attacks. Whenever the creature with Marked is hit by an Attack, reduce the Stack Value of its Marked by 1.",
                    "unlucky":"While Unlucky, a creature cannot utilize its Luck.",
                    "perish":"When a creature‚Äôs Perish count hits 0, the creature's HP is set to 0. Humans and ‚ÄòAce‚Äô creatures gain Weary 1 instead of losing HP when their Perish count is 0. The Perish condition is removed if a creature is switched out or leaves combat.",
                    "invisible":"The afflicted creature vanishes from sight, and cannot be detected by sight based vision or targeted by Attacks. In addition, the creature has +4 default EVA stages. Invisible ends when the creature uses an Attack, is hit by an Attack, by using a Free Action to end Invisible, or by the end conditions of the effect that granted Invisible. Any creature can perform an Intense Spot Check to ignore the effects of Invisible.",
                    "transient":"The afflicted creature, while still visible, is able to traverse through any material, as if it wasn‚Äôt even there. It may use any of its Movements to move through the air or any substance (as if it were always on or in the appropriate substance), ignoring any and all blocking terrain. The creature also possesses +6 default EVA stages. Creatures that make attacks or actions while Transient deal 75% less damage. The creature loses 5 PP per activation while Transient, and gains a Stack of Weary if it is out of PP while Transient.",
                    "fear":"The afflicted creature suffers penalties based on how many Stacks of Fear they have. Fear applied from different sources have their own Stacks.<ul><li>1 - 2: They cannot willingly move towards the source of their Fear, and suffer -1 ACC stage when attacking the source of their Fear.</li><li>3+: During each Activation, they must move their full Movement away from the source of their Fear, and suffer -1 EVA stage against attacks made by the source of their Fear.</li></ul>",
                    "stockpile":"While a creature has Stockpile, the default stages for DEF and SPDEF are increased by +1 for each Stack of Stockpile it possesses. Stockpile can have up to 3 Stacks.",
                    "leech":"The afflicted creature loses two Ticks of HP at the end of each of their Activations and the Source that applied Leech gains HP equal to the amount the afflicted creature lost.",
                    "rebound":"damage inflicted on the afflicted creature by Physical or Special-Category attacks deals ¬º of the inflicted damage on the attacking creature.",
                    "ringed":"when a creature with Ringed concludes an Activation, they heal a Tick of HP, with additional effects from appropriate weathers/terrains as described by the effect that granted Ringed.",
                    "enraged": "A creature may only use Physical- or Special-Category moves while it is Enraged.",
                    "charmed":"The afflicted creature believes the source of Infatuation is a dear friend or romantic interest. Afflicted creatures have a 50% chance of being unable to target the source of their infatuation with an attack, and have -2 stages of EVA against attacks from the source of their infatuation.",
                    "taunted": "The afflicted creature does 33% less damage to creatures other than the source of the Taunted condition. The afflicted creature cannot use Status-category attacks for the duration of Taunted.",
                    "grapple": "The afflicted creature possesses -1 default ACC and EVA and may only take Actions with the [Grapple] trait. Creatures that are not in control of a Grapple are also Bound. A creature in control of the Grapple can take a Free Action on their turn to end their participation in Grapple. The creature in control of the Grapple is treated as having the non-in-control creature(s) as being Mounted on itself.<br>If an afflicted creature is the only participant of a Grapple, they lose this condition.",
                    "resolved": "An afflicted creature takes 25% less damage from all attacks.",
                    "stormcast": "An afflicted creature deals 20% more damage with attacks that it shares a Type with, and the Range of its [Wind] attacks increases by 50%.",
                    "boosted": "An afflicted creature gains +1 stage to ATK, DEF, SPATK, SPDEF, and SPD.",
                    "rapid": "While afflicted with Rapid, the creature may perform Complex Actions as Simple Actions OR [Exhaust] Actions are performed as though they lack the Trait OR [Set Up] Actions set up and resolve on the same activation. The creature has its Initiative delayed by 60% after its Activation and gains Vulnerable 1.",
                    "strong": "While afflicted with Strong, the Power of the creature's Attacks are increased by +20% and has its Initiative delayed by 20% after its Activation.",
                    "agile": "While afflicted with Agile, Power of the creature's Attacks are decreased by -20% and has its Initiative advanced by 20% after its Activation.",
                    "precise": "While afflicted with Precise, the creature has +1 default ACC and has its Initiative delayed by 20% after its Activation.",
                    "evasive": "While afflicted with Evasive, the creature has +1 default ACC and the Power of its Attacks are decreased by -20%."
                }
            }
        },
        "EffectSheet": {
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "details": {
                    "label": "Details"
                },
                "changes": {
                    "label": "Changes"
                }
            },
            "ChangeEditor": {
                "General": {
                    "Primitive": "Primitive",
                    "Brackets": "Brackets",
                    "Value": "Value",
                    "Range": "Range"
                },
                "Controls": {
                    "Edit": "Edit as JSON",
                    "Remove": "Delete Change",
                    "Close": "Close Editor",
                    "Apply": "Apply Changes",
                    "Add": "Create Change"
                },
                "Errors": {
                    "UnableToSaveDueToValidationFailure": "Unable to save changes due to validation failure(s). Please check the changes and resolve the issues.",
                    "ChangeSyntax": "Syntax error in rule element definition: {message}"
                }
            }
        },
        "ActorSystem": {
            "FIELDS": {
                "traits": {
                    "label": "Traits",
                    "hint": "The traits of the actor."
                },
                "advancement": {
                    "label": "Advancement",
                    "hint": "The advancement of the actor."
                },
                "experience": {
                    "label": "Experience",
                    "hint": "The experience of the actor."
                },
                "advancement.experience": {
                    "label": "Experience",
                    "hint": "The experience of the actor."
                },
                "attributes": {
                    "label": "Attributes",
                    "hint": "The attributes of the actor."
                },
                "skills": {
                    "label": "Skills",
                    "hint": "The skills of the actor.",
                    "options": "Skill List Options",
                    "toggleHidden": "Toggle Hidden Skills",
                    "editSkills": "Open Skills Editor",
                    "luckRoll": "Roll 'End of Day' Luck Check"
                }
            }
        },
        "Clocks": {
            "Global": {
                "Add": "Add Clock",
                "Delete": {
                    "Title": "Delete Clock",
                    "Message": "Are you sure you want to delete clock: {label}?",
                    "Confirm": "Delete",
                    "Cancel": "Cancel"
                },
                "Editor": {
                    "TitleEdit": "Edit Clock: {label}",
                    "TitleAdd": "Create Clock"
                }
            }
        },
        "MoveSystem": {
            "FIELDS": {
                "grade": {
                    "label": "Grade",
                    "hint": "The grade of the move."
                }
            } 
        },
        "ActorSheet": {
            "StatsFormTitle": "Stats Manager",
            "Species": "Species Editor",
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "actions": {
                    "label": "Actions",
                    "combat": {
                        "label": "Combat Actions"
                    },
                    "downtime": {
                        "label": "Downtime Actions"
                    },
                    "exploration": {
                        "label": "Exploration Actions"
                    },
                    "other": {
                        "label": "Generic Actions"
                    }
                },
                "inventory": {
                    "label": "Inventory"
                },
                "skills": {
                    "label": "Skills"
                },
                "clocks": {
                    "label": "Crafting & Clocks"
                },
                "perks": {
                    "label": "Perks & Abilities"
                },
                "biography": {
                    "label": "Biography"
                },
                "effects": {
                    "label": "Effects"
                }
            },
            "KnownAttacks": {
                "hint": "Drag & Drop moves onto the actor / known attack sheet to add them as available options.<br><br>Drag & Drop from the Known Attack's sheet onto the Actor's Attack Slots to assign moves to the slots!"
            },
            "Buttons": {
                "perkWeb": "Open Perk Web"
            },
            "Components": {
                "actor": "Open Actor",
                "toggle-hidden-skills": "Toggle Hidden Skills",
                "EffectComponent": {
                    "title": "{actor}'s Effects"
                },
                "SkillsComponent": {
                    "title": "{actor}'s Skills"
                },
                "FavouriteSkillsComponent": {
                    "title": "{actor}'s Favourite Skills"
                },
                "AbilitiesComponent": {
                    "title": "{actor}'s Abilities"
                },
                "PerksComponent": {
                    "title": "{actor}'s Perks"
                },
                "MovementComponent": {
                    "title": "{actor}'s Movement"
                },
                "Effects": {
                    "title": "{actor}'s Effects",
                    "tooltip": "Popout Effects"
                },
                "Skills": {
                    "title": "{actor}'s Skills",
                    "tooltip": "Popout Skills"
                },
                "Abilities": {
                    "tooltip": "Popout Abilities"
                },
                "Perks": {
                    "tooltip": "Popout Perks"
                },
                "Movement": {
                    "title": "{actor}'s Movement",
                    "tooltip": "Popout Movement"
                }
            },
            "Inventory": {
                "CreateItem": "Create Item",
                "EditItem": "Edit Item",
                "DeleteItem": "Delete Item"
            }
        },
        "ActorSidebar": {
            "Party": {
                "Label": "{name}'s Party"
            }
        },
        "Folder": {
            "Sheet": {
                "Owner": {
                    "Label": "Owner",
                    "Hint": "Drag actor here to transform this folder into a Party Folder",
                    "Remove": "Remove Owner"
                },
                "Team": {
                    "Label": "Team Members",
                    "Hint": "Drag actor here to transform this folder into a Team Folder"
                }
            }
        },
        "Settings": {
            "DevMode": {
                "Name":"Developer Mode",
                "Hint": "Enable developer mode, this will allow you to commit changes to the Github repository."
            },
            "Traits": {
                "Name": "Traits Settings",
                "Label": "Open Menu",
                "Hint": "Manage Traits available in the System",
                "Title": "Traits Settings",
                "systemTraits": {
                    "Label": "System Traits",
                    "Hint": "These traits are defined by the system itself and can therefore not be deleted.<br>You can however override the properties by declaring a User Trait with the same name.<br><br>Please keep in mind that any attached automation to traits will not adhere to overriden core traits."
                },
                "userTraits": {
                    "Label": "User Traits",
                    "Hint": "Custom traits defined by the Game Master.<br><br>If a trait with the same name as a system trait is defined here, it will override the system trait."
                },
                "moduleTraits": {
                    "Label": "Module Traits",
                    "Hint": "Traits added through a module, they cannot be edited by Game Masters."
                }
            },
            "Skills": {
                "Name": "Skills Settings",
                "Label": "Open Menu",
                "Hint": "Manage Skills available in the System",
                "Title": "Skills Settings",
                "systemSkills": {
                    "Label": "System Skills",
                    "Hint": "These skills are defined by the system itself and can therefore not be deleted.<br>Although they can be hidden by default."
                },
                "userSkills": {
                    "Label": "User Skills",
                    "Hint": "Custom skills defined by the Game Master."
                },
                "moduleSkills": {
                    "Label": "Module Skills",
                    "Hint": "Skills added through a module, they cannot be edited by Game Masters."
                },
                "description": "Optional description that displays on hover of a Skill",
                "deleteSkill": {
                    "Title": "Delete Skill: {name}",
                    "Content": "Are you sure you want to delete the skill: {name}?"
                }
            }
        },
        "SkillsEditor": {
            "ResetSkills": {
                "title": "Reset Skills for {name}",
                "content": "Are you sure you want to reset the skills for {name}?<br>This will remove all RV investment completely and cannot be undone."
            },
            "ChangeResources": {
                "title": "Change Resources for {name}",
                "content": "<content><div class='form-group'><label style='flex-basis: 30%;'>Current Value: {value}</label><div class='form-fields'><input style='text-align: center;' type='number' value='0' step='1'/></div></div></content>",
                "submit": "Change Resources",
                "warn": "Resource total for {name} cannot drop below 1."
            },
            "RollLuck": {
                "title": "Reroll Luck for {name}",
                "content": "Are you sure you want to reroll the luck for {name}?<br>This should only be done with <b>explicit permission</b> from the GM!",
                "roll": "{name}'s Luck Roll!",
                "reroll": "{name} just <b style='color: #aa0200;' data-tooltip-direction='UP' data-tooltip='Rerolling your luck may only be done with explicit permission from the GM!'>Rerolled</b> their Luck!!",
                "result": "The new score of {result} has been applied to their Luck Skill."
            }
        },
        "Attributes": {
            "hp": {
                "Label": "Hit Points",
                "Hint": "The number of hit points the actor has."
            },
            "atk": {
                "Label": "Attack",
                "Hint": "The attack bonus of the actor.",
                "Stage": {
                    "Label": "Atk Stages",
                    "Hint": "The attack stages of the actor."
                }
            },
            "def": {
                "Label": "Defense",
                "Hint": "The defense bonus of the actor.",
                "Stage": {
                    "Label": "Def Stages",
                    "Hint": "The defense stages of the actor."
                }
            },
            "spa": {
                "Label": "Special Attack",
                "Hint": "The special attack bonus of the actor.",
                "Stage": {
                    "Label": "SpAtk Stages",
                    "Hint": "The special attack stages of the actor."
                }
            },
            "spd": {
                "Label": "Special Defense",
                "Hint": "The special defense bonus of the actor.",
                "Stage": {
                    "Label": "SpDef Stages",
                    "Hint": "The special defense stages of the actor."
                }
            },
            "spe": {
                "Label": "Speed",
                "Hint": "The speed of the actor.",
                "Stage": {
                    "Label": "Spd Stages",
                    "Hint": "The speed stages of the actor."
                }
            },
            "accuracy": {
                "Label": "Accuracy",
                "Hint": "The accuracy of the actor.",
                "Stage": {
                    "Label": "Acc Stages",
                    "Hint": "The accuracy stages of the actor."
                }
            },
            "evasion": {
                "Label": "Evasion",
                "Hint": "The evasion of the actor.",
                "Stage": {
                    "Label": "Eva Stages",
                    "Hint": "The evasion stages of the actor."
                }
            },
            "crit-rate": {
                "Label": "Critical Hit Rate",
                "Hint": "The critical hit rate of the actor.",
                "Stage": {
                    "Label": "Crit Stages",
                    "Hint": "The critical hit rate stages of the actor."
                }
            }
        },
        "Combat": {
            "Combatant": {
                "InitiativeNotZeroOrNull": "Initiative must be a number that is 0 or more."
            },
            "Round": {
                "Name": "Round"
            },
            "ContextMenu": {
                "ResetAV": "Reset to BaseAV"
            }
        },
        "FIELDS": {
            "consumable": {
                "type": {
                    "label": "Type",
                    "hint": "The type of consumable.",
                    "food": "Food",
                    "restorative": "Restorative",
                    "boosters": "Boosters",
                    "ammo": "Ammo",
                    "evolution-item": "Evolution Item",
                    "pokeball": "Pokeball",
                    "other": "Other"
                },
                "charges": {
                    "value": {
                        "label": "Charges",
                        "hint": "The number of charges this consumable has."
                    },
                    "max": {
                        "label": "Max Charges",
                        "hint": "The maximum number of charges this consumable can have."
                    }
                }
            },
            "gear": {
                "cost": {
                    "label": "Cost",
                    "hint": "The cost of the gear."
                },
                "crafting": {
                    "skill": {
                        "label": "Crafting Skill",
                        "hint": "The skill required to craft this gear."
                    },
                    "time": {
                        "value": {
                            "label": "Crafting Time",
                            "hint": "The time it takes to craft this gear."
                        },
                        "unit": {
                            "label": "Crafting Time Unit",
                            "hint": "The unit of time it takes to craft this gear."
                        }
                    }
                },
                "equipped": {
                    "carryType": {
                        "label": "Carry Type",
                        "hint": "The type of carry this gear is.",
                        "stowed": "Stowed",
                        "held": "Held",
                        "worn": "Worn",
                        "dropped": "Dropped"
                    },
                    "handsHeld": {
                        "label": "Hands Held",
                        "hint": "The number of hands this gear requires to hold."
                    }
                },
                "grade": {
                    "label": "Grade",
                    "hint": "The grade of the gear."
                },
                "quantity": {
                    "label": "Quantity",
                    "hint": "The quantity of the gear."
                },
                "rarity": {
                    "label": "Rarity",
                    "hint": "The rarity of the gear.",
                    "common": "Common",
                    "uncommon": "Uncommon",
                    "rare": "Rare",
                    "unique": "Unique"
                }
            },
            "actions": {
                "label": "Actions",
                "attack": {
                    "label": "Attack Action",
                    "accuracy": {
                        "label": "Accuracy Localization Prefix",
                        "hint": "The accuracy of the attack."
                    }
                }
            },
            "slug": {
                "label": "Slug",
                "hint": "The slug is a unique identifier for this entity."
            },
            "description": {
                "label": "Effect Description",
                "hint": "The effect description of this document."
            },
            "collapsed": {
                "label": "Collapsed",
                "hint": "Whether this container is collapsed or not when rendered in an Actor's inventory."
            },
            "container": {
                "label": "Container",
                "hint": "The container item in which this item is stored"
            },
            "actionName": {
                "label": "Name",
                "hint": "The name of the Action."
            },
            "actionType": {
                "label": "Action Type",
                "hint": "The type of Action."
            },
            "actionTraits": {
                "label": "Traits",
                "hint": "The traits of the Action."
            },
            "target": {
                "label": "Target",
                "hint": "The type of targets this action can affect."
            },
            "distance": {
                "label": "Range Increment",
                "hint": "The <a class=\"content-link\" draggable=\"true\" data-link=\"\" data-uuid=\"JournalEntry.DSQM9mLokwFDNUeH.JournalEntryPage.46riMQ1pGoYmrwmA\" data-id=\"46riMQ1pGoYmrwmA\" data-type=\"JournalEntryPage\" data-tooltip=\"Text Page\"><i class=\"fas fa-file-lines\"></i>RIP</a> distance of the action."
            },
            "unit": {
                "label": "Unit",
                "hint": "The measurement unit of the Action."
            },
            "activationCost": {
                "label": "Action Cost",
                "hint": "The action cost to activate the Action."
            },
            "trigger": {
                "label": "Trigger",
                "hint": "The trigger of the Action. (if any)"
            },
            "delay": {
                "label": "Delay",
                "hint": "The delay value of the Action. (if any)"
            },
            "priority": {
                "label": "Priority",
                "hint": "The priority value of the Action. (if any)"
            },
            "power": {
                "label": "Power",
                "hint": "The power of the Attack."
            },
            "accuracy": {
                "label": "Accuracy",
                "hint": "The accuracy of the Attack."
            },
            "pokemonType": {
                "label": "Elemental Type",
                "labelPlural": "Elemental Types",
                "labelShort": "Type",
                "hint": "The Elemental Type of the Entity.",
                "hintPlural": "The Elemental Types of this Entity."
            },
            "pokemonCategory": {
                "label": "Category",
                "hint": "The Category of the Attack."
            },
            "pokemonNumber": {
                "label": "Number",
                "hint": "The National Dex ID of the Pokemon."
            },
            "captureRate": {
                "label": "Capture Rate",
                "hint": "The Capture Rate of the Pokemon."
            },
            "diet": {
                "label": "Diet",
                "hint": "The Diet of the Pokemon."
            },
            "size": {
                "category": {
                    "label": "Size Category",
                    "hint": "The Size Category of the Pokemon."
                },
                "type": {
                    "label": "Measurement Type",
                    "hint": "The Measurement Type of the Pokemon."
                },
                "height": {
                    "label": "Height",
                    "hint": "The Height of the Pokemon in Meters."
                },
                "weight": {
                    "label": "Weight",
                    "hint": "The Weight of the Pokemon in Kilos."
                }
            },
            "genderRatio": {
                "label": "Gender Ratio",
                "hint": "Gender Ratio in 8ths chance of being Male, -1 if genderless."
            },
            "eggGroups": {
                "label": "Egg Groups",
                "hint": "The Egg Groups of the Pokemon."
            },
            "habitats": {
                "label": "Habitats",
                "hint": "The Habitats of the Pokemon."
            },
            "abilities": {
                "starting": {
                    "label": "Starting Abilities",
                    "hint": "The Abilities the Pokemon starts with."
                },
                "basic": {
                    "label": "Basic Abilities",
                    "hint": "The Basic Abilities the Pokemon can learn."
                },
                "advanced": {
                    "label": "Advanced Abilities",
                    "hint": "The Advanced Abilities the Pokemon can learn."
                },
                "master": {
                    "label": "Master Abilities",
                    "hint": "The Master Abilities the Pokemon can learn."
                }
            },
            "clock": {
                "id": {
                    "label": "Clock ID",
                    "hint": "The unique identifier of the clock."
                },
                "label": {
                    "label": "Clock Label",
                    "hint": "The label of the clock."
                },
                "value": {
                    "label": "Clock Value",
                    "hint": "The current value of the clock."
                },
                "max": {
                    "label": "Clock Max",
                    "hint": "The maximum value of the clock."
                },
                "color": {
                    "label": "Clock Color",
                    "hint": "The color of the clock."
                },
                "private": {
                    "label": "Private Clock",
                    "hint": "Whether the clock is private."
                }
            },
            "prerequisites": {
                "label": "Prerequisites",
                "hint": "The prerequisites to pickup this Perk."
            },
            "apCost": {
                "label": "AP Cost",
                "hint": "The Advancement Point cost to purchase this Perk."
            },
            "design": {
                "arena": {
                    "label": "Arena",
                    "hint": "Physical / Mental / Social",
                    "physical": "Physical",
                    "mental": "Mental",
                    "social": "Social"
                },
                "approach": {
                    "label": "Approach",
                    "hint": "Power / Finesse / Resilience",
                    "power": "Power",
                    "finesse": "Finesse",
                    "resilience": "Resilience"
                },
                "archetype": {
                    "label": "Archetype",
                    "hint": "The Archetype to which this perk belongs"
                }
            },
            "node": {
                "i": {
                    "label": "I",
                    "hint": "I is the equivalent to X but in Hexagonal Grid Space"
                },
                "j": {
                    "label": "J",
                    "hint": "J is the equivalent to Y but in Hexagonal Grid Space"
                },
                "connected": {
                    "label": "Connected",
                    "hint": "List of all nodes (slugs) which are connected to this node"
                },
                "hidden": {
                    "label": "Hidden",
                    "hint": "Whether this node is hidden to players or not"
                },
                "config": {
                    "alpha": {
                        "label": "Alpha",
                        "hint": "The alpha (transparency) value of the node."
                    },
                    "backgroundColor": {
                        "label": "Background Color",
                        "hint": "The background color of the node."
                    },
                    "borderColor": {
                        "label": "Border Color",
                        "hint": "The border color of the node."
                    },
                    "borderWidth": {
                        "label": "Border Width",
                        "hint": "The border width of the node."
                    },
                    "texture": {
                        "label": "Texture",
                        "hint": "The texture of the node (URL to img)."
                    },
                    "tint": {
                        "label": "Tint",
                        "hint": "The tint of the node."
                    },
                    "scale": {
                        "label": "Scale",
                        "hint": "The scale of the node. (Should be 1 for normal nodes, or 1.6 for base nodes)"
                    }
                }
            },
            "stats": {
                "label": "Base Stats"
            },
            "movement": {
                "primary": {
                    "label": "Primary Movement"
                },
                "secondary": {
                    "label": "Secondary Movement"
                }
            },
            "powerPoints": {
                "label": "PP Cost",
                "hint": "The number of Power Points the Action uses up when activated.",
                "short": "PP",
                "value": {
                    "label": "Current",
                    "hint": "The number of Power Points the Move uses."
                },
                "max": {
                    "label": "Max",
                    "hint": "The maximum number of Power Points the Move can have."
                }
            },
            "health": {
                "label": "Health",
                "hint": "The health of the actor.",
                "short": "HP",
                "value": {
                    "label": "Current",
                    "hint": "The health value of the actor."
                },
                "max": {
                    "label": "Max",
                    "hint": "The maximum health value of the actor."
                }
            },
            "experience": {
                "label": "Experience",
                "hint": "The experience of the actor.",
                "short": "EXP",
                "current": {
                    "label": "Current EXP",
                    "hint": "The current experience value of the actor."
                },
                "next": {
                    "label": "Next EXP Req.",
                    "hint": "The experience value required to reach the next level."
                },
                "diff": {
                    "label": "EXP to Next",
                    "hint": "The experience value required to reach the next level."
                }
            },
            "level": {
                "label": "Level",
                "hint": "The level of the actor."
            }
        },
        "ItemSheet": {
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "details": {
                    "label": "Details"
                },
                "attack": {
                    "label": "Attack"
                },
                "actions": {
                    "label": "Actions"
                },
                "effects": {
                    "label": "Effects"
                }
            },
            "SendToChatLabel": "Send to Chat"
        },
        "SpeciesSheet": {
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "details": {
                    "label": "Details"
                },
                "evolution": {
                    "label": "Evolutions"
                },
                "moves": {
                    "label": "Moves"
                }
            },
            "SendToChatLabel": "Send to Chat",
            "evolutions": {
                "label": "Evolutions",
                "missing": "No further evolutions, drop species here to add one",
                "methods": {
                    "label": "Evolution Methods",
                    "missing": "No method specified, please add one.",
                    "type": {
                        "label": "Type",
                        "hint": "The type of this method (Minimum Level, Item Held, Move Known, Gender)",
                        "level": {
                            "label": "Level",
                            "hint": "The minimum level the creature must be to evolve into this form"
                        },
                        "item": {
                            "label": "Item",
                            "hint": "The item the creature must be holding to evolve into this form (the item will be consumed)"
                        },
                        "move": {
                            "label": "Move",
                            "hint": "The move the creature must know to evolve into this form"
                        },
                        "gender": {
                            "label": "Gender",
                            "hint": "The Gender the creature must be to evolve into this form",
                            "male": "Male",
                            "female": "Female",
                            "genderless": "Genderless"
                        }
                    },
                    "value": {
                        "label": "Value",
                        "hint": "The value of the method, hover over individual fields for more specific details."
                    },
                    "operand": {
                        "label": "And / Or",
                        "hint": "All requirements marked as 'And' must be met, while only one one of the requirements marked as 'Or' needs to be.",
                        "and": "And",
                        "or": "Or"
                    }
                },
                "copyPasteTree": {
                    "copy": "Evolution tree from species '{name}' copied",
                    "paste": {
                        "title": "Paste Evolution Tree?",
                        "content": "Are you sure you wish to overwrite the Evolution Tree for '{thisName}'?<br><br>The copied version's 1st Stage is: '{copyName}'?<br><br><i><b>This action cannot be undone.</b></i>",
                        "success": "Evolution tree from species '{name}' pasted"
                    }
                }
            },
            "moves": {
                "dropMoveError": "Only moves can be added to this list"
            }
        },
        "PartySheet": {
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "party": {
                    "label": "Party"
                }
            }
        },
        "TeamSheet": {
            "Tabs": {
                "overview": {
                    "label": "Overview"
                },
                "party": {
                    "label": "Parties"
                }
            }
        },
        "TokenPanel": {
            "Tabs": {
                "attack-slots": {
                    "label": "Attack Slots"
                },
                "attack-other": {
                    "label": "Other Attacks"
                },
                "passives": {
                    "label": "Passives"
                },
                "generic-actions": {
                    "label": "Generic Actions"
                },
                "skills": {
                    "label": "Skills"
                },
                "effects": {
                    "label": "Effects"
                }
            }
        },
        "Status": {
            "AccuracyRoll": {
                "Label": "Accuracy Roll",
                "Hint": "The roll to determine if the attack hits."
            },
            "MoveAccuracy": {
                "Label": "Move Accuracy",
                "Hint": "The accuracy of the move."
            },
            "CritRoll": {
                "Label": "Crit Roll",
                "Hint": "The roll to determine if the attack crits."
            },
            "CritDC": {
                "Label": "Crit DC",
                "Hint": "The crit DC of this attack, calculated based on the attacker's crit stages."
            },
            "AdjustedStages": {
                "Label": "Adjusted Stages",
                "Hint": "The combined accuracy stages of the attacker, and evasion stages of the defender. (max 6, min -6)"
            },
            "CritStages": {
                "Label": "Crit Stages",
                "Hint": "The Crit Stages applied to this attack (min 0, max 3)"
            },
            "OtherModifiers": "Other Modifiers",
            "ChangeToCritical": "Make Crit",
            "ChangeToMiss": "Make Miss",
            "ChangeToHit": "Make Hit"
        },
        "Damage": {
            "ApplyDamage": "Apply Damage",
            "Apply": "Apply",
            "level": {
                "Label": "Level",
                "Hint": "The level of the attacker."
            },
            "power": {
                "Label": "Power",
                "Hint": "The power of the attack."
            },
            "attack": {
                "Label": "Attack",
                "Hint": "The appropriate attack bonus of the attacker."
            },
            "defense": {
                "Label": "Defense",
                "Hint": "The appropriate defense bonus of the defender."
            },
            "targets": {
                "Label": "Targets",
                "Hint": "1 if single target, otherwise 0.75."
            },
            "critical": {
                "Label": "Critical",
                "Hint": "1.5 if crit, 2 if crit and sniper ability, otherwise 1."
            },
            "random": {
                "Label": "Random",
                "Hint": "Random damage multiplier."
            },
            "stab": {
                "Label": "STAB",
                "Hint": "The same type attack bonus."
            },
            "type": {
                "Label": "Type",
                "Hint": "Effectiveness bonus or penalty."
            },
            "other": {
                "Label": "Other",
                "Hint": "Other damage modifiers."
            }
        },
        "Actions": {
            "attack": {
                "Label": "Attack Actions"
            }
        },
        "UI": {
            "DevMode": {
                "CommitToGithub": {
                    "Label": "Commit to Github",
                    "Hint": "Commit the current changes to the Github repository."
                },
                "Name": "Developer Mode",
                "Hint": "Enable developer mode."
            }
        },
        "Dialog": {
            "DeleteDocumentContent": "Are you sure you want to delete: {name}?",
            "DeleteDocumentTitle": "Delete {name}?"
        },
        "Skills": {
            "luck": {
                "label": "Luck",
                "hint": "Luck is your anime protagonist style plot armor. It gives the ability to manipulate a skill check, and a few other aspects of the game. Luck is a resource that only Player Characters and Aces have. At character creation, a player determines their initial luck by rolling 3d6 and multiplying the result by 5.<br><br>For more information, see the Luck section of the rulebook."
            },
            "accounting": {
                "label": "Accounting",
                "hint": "This skill is used to look over records, be they financial, inventory, or otherwise and look for discrepancies. Things that just don't add up. Serves a niche as an investigation skill, or potentially a professional skill for campaigns that way inclined."
            },
            "acrobatics": {
                "label": "Acrobatics",
                "hint": "The Acrobatics skill is responsible for jumping and vaulting, along with activities such as zip wiring and parachuting. It does not, however, cover trying to fly at speed but it can be utilized in place of Running for Threaded movement."
            },
            "appraise": {
                "label": "Appraise",
                "hint": "This skill is used to determine the relative value of an object. A successful Appraise role might lend an edge as part of a Negotiation, or yield information pertaining to the quality of a piece of gear a character might have."
            },
            "archaeology": {
                "label": "Archaeology",
                "hint": "This skill is used to study ancient things. This includes studying ruins, knowledge of past civilizations, and deciphering lost inscriptions."
            },
            "aura-sense": {
                "label": "Aura Sense",
                "hint": "The Aura Sense skill governs interactions with Aura, ranging from perceiving and analyzing aura to manipulating it and the process of Channeling."
            },
            "climb": {
                "label": "Climb",
                "hint": "This is a fairly straightforward skill. It governs the pace and aptitude for climbing."
            },
            "computers": {
                "label": "Computers",
                "hint": "The all-around skill that governs the use of computers and the internet. GMs may find this skill warrants converting into a skill category for more tech-intensive campaigns."
            },
            "conversation": {
                "label": "Conversation",
                "hint": "This is a general-purpose social skill that covers interaction uses such as charming and persuading. Any socialization that doesn't cover lying, intimidation or deal-making. In the unusual event that this roll needs to be opposed, the other side should also use Conversation."
            },
            "disguise": {
                "label": "Disguise",
                "hint": "For when you need to pretend to be someone or something else. Opposed by Psychology or Spot, depending on which is more appropriate."
            },
            "electronics": {
                "label": "Electronics",
                "hint": "This skill is used to understand electronics and perform electrical repairs on devices. Some Pokemon may use the Electronics skill to manipulate or disrupt electrical devices."
            },
            "engineering": {
                "label": "Engineering",
                "hint": "This skill is used to understand complex engineering designs. If appropriate can be used in design and construction capacities, but more commonly it would be utilized by a character seeking to sabotage or damage a structure or vehicle."
            },
            "fast-talk": {
                "label": "Fast Talk",
                "hint": "The skill used to bamboozle, confound, and lie your way around obstacles. Obfuscate your intent with either masterful ad-lib deception, or by merely confusing your opponent."
            },
            "handiwork": {
                "label": "Handiwork",
                "hint": "The Handiwork skill covers various trades and crafts, mainly covering construction, woodworking, sewing, fletching, plumbing, and more! This ranges from broad knowledge of specific trades to specific capability in applying said knowledge, like in terms of Crafting."
            },
            "history": {
                "label": "History",
                "hint": "This skill is used to establish familiarity with historical events. It tends to be more applicable to more recent history, as the ancient falls within the purview of the Archaeology skill."
            },
            "husbandry": {
                "label": "Husbandry",
                "hint": "The function of this skill is to feed and care for others. This skill governs cooking, breeding and general care of both Pokemon and humans."
            },
            "intimidate": {
                "label": "Intimidate",
                "hint": "The Intimidate skill is what you need when you want to scare someone or bully your way into getting what you want. It may get you results, but creatures will likely remember you and it will not be fondly. This skill can be opposed with Intimidate or Leadership."
            },
            "leadership": {
                "label": "Leadership",
                "hint": "This skill is used to establish authority over others similar to Intimidate, however with respect rather than fear. It can be used to inspire and command, and interacts with Pack Mon perks. You may use the Leadership skill to bolster an ally that someone is attempting to intimidate."
            },
            "legal": {
                "label": "Legal",
                "hint": "This skill represents a character's understanding of the legal system and its processes, and can either utilize that knowledge to help stay out of trouble or to have the knowledge needed to manipulate procedures to their advantage."
            },
            "lift": {
                "label": "Lift",
                "hint": "This skill governs the raw physical ability to lift and carry and to perform feats of strength beyond what a creature could normally do comfortably."
            },
            "listen": {
                "label": "Listen",
                "hint": "This skill governs the ability to detect creatures or activity through hearing."
            },
            "locksmith": {
                "label": "Locksmith",
                "hint": "The art of picking locks. This can be used as a general breaking & entering skill, with computers governing hacking one's way into electronic systems. In suitably advanced settings, consider allowing Locksmith to work with electronic locks also."
            },
            "mechanics": {
                "label": "Mechanics",
                "hint": "The purpose of the Mechanics skill is to perform mechanical repairs and upgrades to machines or devices, working with non-electrical components."
            },
            "medicine": {
                "label": "Medicine",
                "hint": "This skill governs all medical training, whether that be diagnostics, first aid or surgery."
            },
            "natural-world": {
                "label": "Natural World",
                "hint": "The Natural World skill is used for a character to understand the fundamentals of nature, such as identifying trees and mosses and types of berries and mushrooms. Also covers non-artistic gardening pursuits."
            },
            "navigate": {
                "label": "Navigate",
                "hint": "This skill is used to find your way when traveling outside of your normal default habitat. This is as true for migratory Pokemon as it is for humans leaving their cities, but would not be required for a Pokemon staying in its forest, or the human navigating around the city in which they live."
            },
            "negotiation": {
                "label": "Negotiation",
                "hint": "This skill covers the art of the deal. If you want something and the other creature is willing to give you it, for a price, then this skill can be used to determine who gets the better end of the deal."
            },
            "psychology": {
                "label": "Psychology",
                "hint": "This skill is used to determine someone's mental or emotional state. This can either be from a perspective of reading their intentions, providing them with treatment (such as traumatized Shadow Pokemon), or seeing through someone's Disguise act or Fast Talking."
            },
            "read-lips": {
                "label": "Read Lips",
                "hint": "This skill is used when a character is able to see someone speaking but is unable to hear them for whatever reason, and wants to understand what they are saying. Potentially useful for any hearing-impaired characters."
            },
            "research": {
                "label": "Research",
                "hint": "This skill is used to hit the books at the library or similar. Specifically for finding out information that your character needs but does not already know by virtue of their other skills."
            },
            "resources": {
                "label": "Resources",
                "hint": "This skill cannot be raised using skill points after level 1. The Resources skill is used to determine your character's spending power, and can also serve as a measure of their status."
            },
            "ride": {
                "label": "Ride",
                "hint": "The Ride skill is used to stay mounted on another creature. For gentle transit, Ride checks generally should not be required, but once things get tense a Ride skill can be all that separates you from a mouthful of dirt. May also be used in riding competitions."
            },
            "running": {
                "label": "Running",
                "hint": "The Running skill is for when overland or flying creatures gotta go fast. Use this skill to gain additional movement allowance after you've consumed all of yours in combat, or to participate in feats of speed during events such as a Pokeathlon"
            },
            "sleight-of-hand": {
                "label": "Sleight of Hand",
                "hint": "This skill covers feats of legerdemain and physical misdirection, such as card tricks and other non-magical illusions along with the likes of picking pockets."
            },
            "spot": {
                "label": "Spot",
                "hint": "As the name implies, this skill is utilized to spot things, usually something hard to see or outright hidden. That can be creatures within your field of view trying to use Stealth against you, or it can be used in an investigative context to look for hidden clues."
            },
            "stealth": {
                "label": "Stealth",
                "hint": "This skill covers efforts to conceal yourself that do not rely on disguise or social interaction. This is opposed by Listen where creatures do not have you in their field of view, or Spot if they do. Can also be utilized to blend into crowds and to tail unsuspecting marks."
            },
            "survival": {
                "label": "Survival",
                "hint": "This skill is used to find shelter and to seek out edible foods in the wilderness. It may be appropriate to use for field crafting of things like Rafts and temporary bridges."
            },
            "swim": {
                "label": "Swim",
                "hint": "The Swim skill covers all applications of the Acrobatics and Running skills but in the water. It also covers any checks that might be required in line with diving."
            },
            "teaching": {
                "label": "Teaching",
                "hint": "The teaching skills is used to help instruct another in a skill with which you already possess. You may roll a Teaching check for any skill you have at rank 25 or higher. The target gains +10 per Degree of Success to their next check in the relevant skill."
            },
            "track": {
                "label": "Track",
                "hint": "The Track skill is used to follow the trail that another creature has left in order to follow them to their home or other location. If the creature is actively trying to avoid being followed, this is opposed by Stealth. Also used for Fishing."
            },
            "arts": {
                "label": "Arts",
                "hint": "This is a collection of undefined skills for the most part, though some examples might exist such as Painting or Flower Arrangement. This skill is a measure of talent for creative pursuits and is left to the player to define the bounds of their art.",
                "painting": {
                    "label": "Painting",
                    "hint": "This skill is used to create works of art using paint. This can be used to create paintings, murals, or other works of art."
                },
                "sculpting": {
                    "label": "Sculpting",
                    "hint": "This skill is used to create works of art using clay or stone. This can be used to create sculptures, statues, or other works of art."
                },
                "acting": {
                    "label": "Acting",
                    "hint": "This skill is used to perform on stage or in front of a camera. This can be used to act in plays, movies, or other performances."
                },
                "dancing": {
                    "label": "Dancing",
                    "hint": "This skill is used to perform dance routines. This can be used to dance in shows, competitions, or other performances."
                },
                "singing": {
                    "label": "Singing",
                    "hint": "This skill is used to perform songs. This can be used to sing in concerts, competitions, or other performances."
                },
                "flower-arrangement": {
                    "label": "Flower Arrangement",
                    "hint": "This skill is used to create works of art using flowers. This can be used to create bouquets, wreaths, or other works of art."
                },
                "writing": {
                    "label": "Writing",
                    "hint": "This skill is used to create written works. This can be used to write books, articles, or other written works."
                }
            },
            "occult": {
                "label": "Occult",
                "hint": "The Occult skills are actually several skills under one group, purchased separately. These are Psychic, Ghost, Dragon, Fairy, Spiritual, Legendary, Paradox. The skills cover knowledge about the topics they‚Äôre named for. GMs may wish to add more Occult knowledge as appropriate for their campaign setting.",
                "psychic": {
                    "label": "Psychic",
                    "hint": "This skill is used to understand and use psychic powers."
                },
                "ghost": {
                    "label": "Ghost",
                    "hint": "This skill is used to understand and interact with ghostly entities."
                },
                "dragon": {
                    "label": "Dragon",
                    "hint": "This skill is used to understand and interact with dragon-like entities."
                },
                "fairy": {
                    "label": "Fairy",
                    "hint": "This skill is used to understand and interact with fairy-like entities."
                },
                "spiritual": {
                    "label": "Spiritual",
                    "hint": "This skill is used to understand and interact with spiritual entities."
                },
                "legendary": {
                    "label": "Legendary",
                    "hint": "This skill is used to understand and interact with legendary entities."
                },
                "paradox": {
                    "label": "Paradox",
                    "hint": "This skill is used to understand and interact with paradoxical entities."
                }
            },
            "performance": {
                "label": "Performance",
                "hint": "Performance comes in Cool, Clever, Cute, Beauty and Tough variations and these are the primary skills used for Pokemon Contests, but that doesn‚Äôt need to be their only applications. We encourage you to let your creativity thrive with these.",
                "cool": {
                    "label": "Cool",
                    "hint": "This skill is used to perform cool tricks or stunts. This can be used to impress an audience, intimidate an opponent, or show off in general."
                },
                "clever": {
                    "label": "Clever",
                    "hint": "This skill is used to perform clever tricks or stunts. This can be used to outsmart an opponent, solve a puzzle, or show off in general."
                },
                "cute": {
                    "label": "Cute",
                    "hint": "This skill is used to perform cute tricks or stunts. This can be used to charm an audience, distract an opponent, or show off in general."
                },
                "beauty": {
                    "label": "Beauty",
                    "hint": "This skill is used to perform beautiful tricks or stunts. This can be used to impress an audience, inspire an opponent, or show off in general."
                },
                "tough": {
                    "label": "Tough",
                    "hint": "This skill is used to perform tough tricks or stunts. This can be used to intimidate an audience, overpower an opponent, or show off in general."
                }
            },
            "pilot": {
                "label": "Pilot",
                "hint": "This group of skills, purchased separately, measure a character‚Äôs ability to pilot a vehicle. The example Piloting skills we have included here are Bike, Small Motor Vehicles, Cars, Utility Vehicles, Military Ground Vehicles, Walkers, Aircraft, Aerospace Vehicles, Exotic Vehicle (Specific), Watercraft. You may wish to add or remove from this list as appropriate for your campaign setting (such as carriages in a fantasy setting.)",
                "bike": {
                    "label": "Bike",
                    "hint": "This skill is used to pilot a bike."
                },
                "small-motor-vehicles": {
                    "label": "Small Motor Vehicles",
                    "hint": "This skill is used to pilot small motor vehicles."
                },
                "cars": {
                    "label": "Cars",
                    "hint": "This skill is used to pilot cars."
                },
                "utility-vehicles": {
                    "label": "Utility Vehicles",
                    "hint": "This skill is used to pilot utility vehicles."
                },
                "military-ground-vehicles": {
                    "label": "Military Ground Vehicles",
                    "hint": "This skill is used to pilot military ground vehicles."
                },
                "walkers": {
                    "label": "Walkers",
                    "hint": "This skill is used to pilot walkers."
                },
                "aircraft": {
                    "label": "Aircraft",
                    "hint": "This skill is used to pilot aircraft."
                },
                "aerospace-vehicles": {
                    "label": "Aerospace Vehicles",
                    "hint": "This skill is used to pilot aerospace vehicles."
                },
                "exotic-vehicle-specific": {
                    "label": "Exotic Vehicle (Specific)",
                    "hint": "This skill is used to pilot a specific exotic vehicle."
                },
                "watercraft": {
                    "label": "Watercraft",
                    "hint": "This skill is used to pilot watercraft."
                }
            },
            "science": {
                "label": "Science",
                "hint": "The Science group skill covers a number of fields, purchased separately. Examples include Astronomy, Biology, Botany, Chemistry, Cryptography, Forensics, Geology, Mathematics, Meteorology, Parapsychology, Pharmacy, Physics, Zoology. Pok√©mon-specific fields include Meganobiology, Terastology, Ultrology, Paradoxian Studies. The GM may add to or remove from this list as appropriate to their campaign. This skill represents specialized knowledge in a field and will generally rely upon either specific perks, or a situational application that the GM or Player must call for.",
                "astronomy": {
                    "label": "Astronomy",
                    "hint": "This skill is used to study the stars and planets."
                },
                "biology": {
                    "label": "Biology",
                    "hint": "This skill is used to study living organisms."
                },
                "botany": {
                    "label": "Botany",
                    "hint": "This skill is used to study plants."
                },
                "chemistry": {
                    "label": "Chemistry",
                    "hint": "This skill is used to study chemicals."
                },
                "cryptography": {
                    "label": "Cryptography",
                    "hint": "This skill is used to study codes and ciphers."
                },
                "forensics": {
                    "label": "Forensics",
                    "hint": "This skill is used to study evidence from crime scenes."
                },
                "geology": {
                    "label": "Geology",
                    "hint": "This skill is used to study rocks and minerals."
                },
                "mathematics": {
                    "label": "Mathematics",
                    "hint": "This skill is used to study numbers and equations."
                },
                "meteorology": {
                    "label": "Meteorology",
                    "hint": "This skill is used to study the weather."
                },
                "parapsychology": {
                    "label": "Parapsychology",
                    "hint": "This skill is used to study psychic phenomena."
                },
                "pharmacy": {
                    "label": "Pharmacy",
                    "hint": "This skill is used to study drugs and medicines."
                },
                "physics": {
                    "label": "Physics",
                    "hint": "This skill is used to study matter and energy."
                },
                "zoology": {
                    "label": "Zoology",
                    "hint": "This skill is used to study animals."
                },
                "meganobiology": {
                    "label": "Meganobiology",
                    "hint": "This skill is used to study the biology of Mega Evolutions."
                },
                "terastology": {
                    "label": "Terastology",
                    "hint": "This skill is used to study the biology of Gigantamax forms."
                },
                "ultrology": {
                    "label": "Ultrology",
                    "hint": "This skill is used to study the biology of Ultra Beasts."
                },
                "paradoxian-studies": {
                    "label": "Paradoxian Studies",
                    "hint": "This skill is used to study the biology of Paradox Pokemon."
                }
            }
        }
    }
}
