{"version":3,"file":"ptr2e.mjs","sources":["../src/module/actor/base.ts","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.js","../node_modules/chart.js/auto/auto.js","../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","../src/module/actor/sheets/stats-chart.mjs","../src/util/handlebars.ts","../src/util/misc.ts","../node_modules/@yaireo/tagify/dist/tagify.min.js","../src/util/tag.ts","../src/util/templates.ts","../src/module/actor/sheet.ts","../src/module/item/base/document.ts","../src/module/item/base/system.ts","../src/module/item/gear/system.ts","../src/scripts/config/hex.ts","../src/module/canvas/perk-tree/perk-tree-icon.mjs","../src/module/canvas/perk-tree/perk-tree-node.mjs","../src/module/item/perk/system.ts","../src/module/action.ts","../src/module/actor/system.ts","../src/module/combat/document.ts","../src/module/combat/combatant.ts","../src/module/combat/tracker.ts","../src/module/item/base/sheet.ts","../src/module/item/perk/sheet.ts","../src/module/apps/sidebar-perks/perks-directory.ts","../src/scripts/config/index.ts","../src/module/canvas/perk-tree/perk-tree-hud.mjs","../src/module/canvas/perk-tree/perk-tree.mjs","../src/scripts/game-ptr2e.ts","../src/scripts/hooks/init.ts","../src/scripts/hooks/index.ts","../src/ptr2e.ts"],"sourcesContent":["import { TokenDocumentPTR2e } from \"@module/canvas/token/document.ts\";\r\nimport { ActorSystemPTR2e } from \"@actor\";\r\n\r\nclass ActorPTR2e<TParent extends TokenDocumentPTR2e | null = TokenDocumentPTR2e | null> extends Actor<TParent> {\r\n\r\n    get traits() {\r\n        return this.system.traits;\r\n    }\r\n\r\n    get attributes() {\r\n        return this.system.attributes;\r\n    }\r\n\r\n    /** \r\n     * Step 1 - Copies data from source object to instance attributes\r\n     * */\r\n    override _initialize() {\r\n        return super._initialize();\r\n    }\r\n\r\n    /** \r\n     * Step 2 - Prepare data for use by the instance. This method is called automatically by DataModel#_initialize workflow\r\n     * The work done by this method should be idempotent. There are situations in which prepareData may be called more than once.\r\n     * */\r\n    override prepareData() {\r\n        this.health = {\r\n            percent: Math.floor(Math.random() * 100) \r\n        }\r\n\r\n        return super.prepareData();\r\n    }\r\n\r\n    /**\r\n     * Step 3 - Prepare data related to this Document itself, before any embedded Documents or derived data is computed.\r\n     * */\r\n    override prepareBaseData() {\r\n        return super.prepareBaseData();\r\n    }\r\n\r\n    /** \r\n     * Step 4 - Prepare all embedded Document instances which exist within this primary Document.\r\n     * */\r\n    override prepareEmbeddedDocuments() {\r\n        return super.prepareEmbeddedDocuments();\r\n    }\r\n\r\n    /** \r\n     * Step 5 - Apply transformations or derivations to the values of the source data object.\r\n     * Compute data fields whose values are not stored to the database.\r\n     * */\r\n    override prepareDerivedData() {\r\n        return super.prepareDerivedData();\r\n    }\r\n\r\n    /**\r\n     * Toggle the perk tree for this actor\r\n     * @param {boolean} active \r\n     */\r\n    async togglePerkTree(active: boolean) {\r\n        if((game.ptr.tree.actor === this) && (active !== true)) return game.ptr.tree.close();\r\n        else if(active !== false) return game.ptr.tree.open(this);\r\n    }\r\n\r\n}\r\n\r\ninterface ActorPTR2e<TParent extends TokenDocumentPTR2e | null = TokenDocumentPTR2e | null> extends Actor<TParent> {\r\n    system: ActorSystemPTR2e\r\n    health: {\r\n        percent: number\r\n    }\r\n    synthetics: ActorSynthetics\r\n}\r\n\r\nexport { ActorPTR2e }","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","import { Chart } from \"chart.js/auto\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nexport class StatsChart {\r\n    constructor(sheet, options = {}, { id, cssclass } = { cssclass: \"stats-chart\" }) {\r\n        this.sheet = sheet;\r\n        this._options = options;\r\n        this.id = id;\r\n        this.cssclass = cssclass;\r\n        this.initialized = false;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.sheet.element.find(`canvas.${this.cssclass}${this.id ? `#${this.id}` : \"\"}`);\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return {\r\n            hover: {\r\n                mode: null\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'bottom',\r\n                    labels: {\r\n                        color: \"#fff\"\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: false\r\n                },\r\n                datalabels: {\r\n                    formatter: function (value, context) {\r\n                        return context.chart.data.labels[context.value];\r\n                    },\r\n                    anchor: 'end',\r\n                    clamp: false,\r\n                    align: 'end',\r\n                    offset: 0,\r\n                    color: 'white'\r\n                }\r\n            },\r\n            elements: {\r\n                point: {\r\n                    hoverRadius: 0,\r\n                    hitRadius: 0\r\n                },\r\n                line: {\r\n                    borderWidth: 0,\r\n                    tension: 0.05\r\n                }\r\n            },\r\n            scales: {\r\n                r: {\r\n                    grid: {\r\n                        color: '#ffffff70'\r\n                    },\r\n                    ticks: {\r\n                        display: false\r\n                    },\r\n                    pointLabels: {\r\n                        color: '#fff'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    get data() {\r\n        // Sample data\r\n        return {\r\n            labels: [\"HP\", \"ATK\", \"DEF\", \"SPD\", \"SP.DEF\", \"SP.ATK\"],\r\n            datasets: [\r\n                {\r\n                    label: \"EVs\",\r\n                    data: [20, 60, 25, 60, 15, 55],\r\n                    fill: true,\r\n                    backgroundColor: '#88c5fe40',\r\n                    datalabels: {\r\n                        display: false\r\n                    },\r\n                    pointStyle: false\r\n                },\r\n                {\r\n                    label: \"Stats\",\r\n                    data: [12, 30, 22, 30, 6, 25],\r\n                    fill: true,\r\n                    backgroundColor: '#88c5febc',\r\n                    pointStyle: false\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    get options() {\r\n        return foundry.utils.mergeObject(this.constructor.defaultOptions, this._options, { inplace: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.initialized) return this._rerender();\r\n\r\n        if (this.canvas.length === 0) return console.error(\"No canvas found for stats chart\");\r\n\r\n        this.chart = new Chart(this.canvas, {\r\n            plugins: [ChartDataLabels],\r\n            type: \"radar\",\r\n            options: this.options,\r\n            data: this.data\r\n        });\r\n        this.initialized = true;\r\n        return this;\r\n    }\r\n\r\n    _rerender(updateOnly = false) {\r\n        if (!this.initialized) return this.render();\r\n        if (updateOnly) {\r\n            this.chart.update();\r\n            return this;\r\n        }\r\n        this.chart.destroy();\r\n        this.initialized = false;\r\n        return this.render();\r\n    }\r\n}","export function registerHandlebarsHelpers() {\r\n    _registerBasicHelpers();\r\n    _registerPTRHelpers();\r\n}\r\n\r\nfunction _registerPTRHelpers() {\r\n    Handlebars.registerHelper(\"keywords\", function (keywords) {\r\n        return keywords.map((k: string) => `<span class=\"keyword\" >&lt;${k}&gt;</span>`).join(\"\");\r\n    });\r\n\r\n    Handlebars.registerHelper(\"calcHeight\", function (percent) {\r\n        return Math.round((100 - percent) / 100 * 48);\r\n    });\r\n}\r\n\r\nfunction _registerBasicHelpers() {\r\n    Handlebars.registerHelper(\"concat\", function () {\r\n        var outStr = '';\r\n        for (var arg in arguments) {\r\n            if (typeof arguments[arg] != 'object') {\r\n                outStr += arguments[arg];\r\n            }\r\n        }\r\n        return outStr;\r\n    });\r\n\r\n    Handlebars.registerHelper('switch', function (value, options) {\r\n        // @ts-ignore\r\n        this.switch_value = value;\r\n        // @ts-ignore\r\n        return options.fn(this);\r\n    });\r\n\r\n    Handlebars.registerHelper('case', function (value, options) {\r\n        // @ts-ignore\r\n        if (value == this.switch_value) {\r\n            // @ts-ignore\r\n            return options.fn(this);\r\n        }\r\n    });\r\n\r\n    Handlebars.registerHelper(\"toLowerCase\", function (str) {\r\n        return str.toLowerCase ? str.toLowerCase() : str;\r\n    });\r\n\r\n    Handlebars.registerHelper(\"capitalizeFirst\", (e) => { return \"string\" != typeof e ? e : e.charAt(0).toUpperCase() + e.slice(1) });\r\n\r\n    const capitalize = function (input: string) {\r\n        var i, j, str, lowers, uppers;\r\n        str = input.replace(/([^\\W_]+[^\\s-]*) */g, function (txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n\r\n        // Certain minor words should be left lowercase unless \r\n        // they are the first or last words in the string\r\n        lowers = ['A', 'An', 'The', 'And', 'But', 'Or', 'For', 'Nor', 'As', 'At',\r\n            'By', 'For', 'From', 'In', 'Into', 'Near', 'Of', 'On', 'Onto', 'To', 'With'];\r\n        for (i = 0, j = lowers.length; i < j; i++)\r\n            str = str.replace(new RegExp('\\\\s' + lowers[i] + '\\\\s', 'g'),\r\n                function (txt) {\r\n                    return txt.toLowerCase();\r\n                });\r\n\r\n        // Certain words such as initialisms or acronyms should be left uppercase\r\n        uppers = ['Id', 'Tv'];\r\n        for (i = 0, j = uppers.length; i < j; i++)\r\n            str = str.replace(new RegExp('\\\\b' + uppers[i] + '\\\\b', 'g'),\r\n                uppers[i].toUpperCase());\r\n\r\n        return str;\r\n    }\r\n\r\n    Handlebars.registerHelper(\"capitalize\", capitalize);\r\n\r\n    Handlebars.registerHelper(\"formatLocalize\", (key, value) => ({\r\n        \"hash\": {\r\n            [key]: value\r\n        }\r\n    }));\r\n\r\n    Handlebars.registerHelper(\"formatSlug\", (slug) => {\r\n        return capitalize(slug).replaceAll('-', ' ');\r\n    });\r\n\r\n    Handlebars.registerHelper(\"isdefined\", function (value) {\r\n        return value !== undefined;\r\n    });\r\n\r\n    Handlebars.registerHelper(\"is\", function (a, b) { return a == b });\r\n    Handlebars.registerHelper(\"bigger\", function (a, b) { return a > b });\r\n    Handlebars.registerHelper(\"biggerOrEqual\", function (a, b) { return a >= b });\r\n    Handlebars.registerHelper(\"and\", function (a, b) { return a && b });\r\n    Handlebars.registerHelper(\"or\", function (a, b) { return a || b });\r\n    Handlebars.registerHelper(\"not\", function (a, b = false) { return a != b });\r\n    Handlebars.registerHelper(\"divide\", (value1, value2) => Number(value1) / Number(value2));\r\n    Handlebars.registerHelper(\"multiply\", (value1, value2) => Number(value1) * Number(value2));\r\n    Handlebars.registerHelper(\"floor\", (value) => Math.floor(Number(value)));\r\n\r\n    Handlebars.registerHelper(\"minMaxDiceCheck\", function (roll, faces) {\r\n        return roll == 1 ? \"min\" : roll == faces ? \"max\" : \"\";\r\n    });\r\n\r\n    Handlebars.registerHelper(\"isGm\", function () {\r\n        return game.user.isGM;\r\n    })\r\n\r\n    Handlebars.registerHelper('contains', function (needle, haystack) {\r\n        needle = Handlebars.escapeExpression(needle);\r\n        haystack = Handlebars.escapeExpression(haystack);\r\n        return (haystack.indexOf(needle) > -1) ? true : false;\r\n    });\r\n\r\n    Handlebars.registerHelper('ifContains', function (needle, haystack, options) {\r\n        needle = Handlebars.escapeExpression(needle);\r\n        haystack = Handlebars.escapeExpression(haystack); // @ts-ignore\r\n        return (haystack.indexOf(needle) > -1) ? options.fn(this) : options.inverse(this);\r\n    });\r\n\r\n    Handlebars.registerHelper(\"inc\", function (num) { return Number(num) + 1 })\r\n\r\n    Handlebars.registerHelper(\"newline\", function (a) { return a.replace(\"\\\\n\", \"\\n\") });\r\n\r\n    Handlebars.registerHelper(\"lpad\", function (str, len, char) {\r\n        str = str.toString();\r\n        while (str.length < len) str = char + str;\r\n        return str;\r\n    });\r\n\r\n    Handlebars.registerHelper('padDecimal', function (value, decimals) {\r\n        const stringValue = String(value);\r\n        const decimalIndex = stringValue.indexOf('.');\r\n        if (decimalIndex === -1) {\r\n            // No decimal point found, add the specified number of decimal places\r\n            return `${stringValue}.${'0'.repeat(decimals)}`;\r\n        } else {\r\n            // Decimal point found, pad the decimal places up to the specified number\r\n            const numDecimals = stringValue.length - decimalIndex - 1;\r\n            if (numDecimals < decimals) {\r\n                return `${stringValue}${'0'.repeat(decimals - numDecimals)}`;\r\n            } else {\r\n                return stringValue;\r\n            }\r\n        }\r\n    });\r\n\r\n    Handlebars.registerHelper(\"diceResult\", function (roll, term) {\r\n        const result = roll.terms.find((t: { faces: any; }) => t.faces == term);\r\n        if (result) return result.total ?? result.results[0].result;\r\n    });\r\n\r\n    Handlebars.registerHelper(\"split\", function (str, separator) {\r\n        return str.split(separator).map((s: string) => s.trim());\r\n    });\r\n\r\n    Handlebars.registerHelper(\"isNumber\", function (value) {\r\n        return isNaN(Number(value)) == false;\r\n    });\r\n\r\n    Handlebars.registerHelper(\"ld\", function (key, value) {\r\n        return { hash: { [key]: value } };\r\n    })\r\n\r\n    Handlebars.registerHelper(\"json\", function (context) { return JSON.stringify(context); });\r\n}","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`;\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`;\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, \"gu\");\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`;\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`;\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`;\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`;\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, \"gu\");\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu;\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, \"gu\");\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel }: {camel: string | null} = { camel: null }): string {\r\n    if (typeof text !== \"string\") {\r\n        console.warn(\"Non-string argument passed to `sluggify`\");\r\n        return \"\";\r\n    }\r\n\r\n    // A hyphen by its lonesome would be wiped: return it as-is\r\n    if (text === \"-\") return text;\r\n\r\n    if (camel === null)\r\n        return text\r\n            .replace(lowerCaseThenUpperCaseRE, \"$1-$2\")\r\n            .toLowerCase()\r\n            .replace(/['’]/g, \"\")\r\n            .replace(nonWordCharacterRE, \" \")\r\n            .trim()\r\n            .replace(/[-\\s]+/g, \"-\");\r\n\r\n    if (camel === \"bactrian\") {\r\n        const dromedary = sluggify(text, { camel: \"dromedary\" });\r\n        return dromedary.charAt(0).toUpperCase() + dromedary.slice(1);\r\n    }\r\n\r\n    if (camel === \"dromedary\")\r\n        return text\r\n            .replace(nonWordCharacterHyphenOrSpaceRE, \"\")\r\n            .replace(/[-_]+/g, \" \")\r\n            .replace(upperOrWordBoundariedLowerRE, (part, index) =>\r\n                index === 0 ? part.toLowerCase() : part.toUpperCase()\r\n            )\r\n            .replace(/\\s+/g, \"\");\r\n\r\n    throw new Error(`I'm pretty sure that's not a real camel: ${camel}`);\r\n}\r\n\r\n// export async function findItemInCompendium({ type, name, compendium }) {\r\n//     if (!type || !name) return undefined;\r\n//     const pack = (() => {\r\n//         if (game.packs.get(compendium)) return game.packs.get(compendium);\r\n//         switch (type) {\r\n//             case \"move\": return game.packs.get(\"ptu.moves\");\r\n//             case \"ability\": return game.packs.get(\"ptu.abilities\");\r\n//             case \"capability\": return game.packs.get(\"ptu.capabilities\");\r\n//             case \"species\": return game.packs.get(\"ptu.species\");\r\n//             case \"item\": return game.packs.get(\"ptu.items\");\r\n//             case \"edge\": return game.packs.get(\"ptu.edges\");\r\n//             case \"feat\": return game.packs.get(\"ptu.feats\");\r\n//             case \"effect\": return game.packs.get(\"ptu.effects\");\r\n//             default: throw new Error(`Unknown type: ${type}`);\r\n//         }\r\n//     })();\r\n\r\n//     const find = (items) => {\r\n//         return items?.find((item) => item.slug === sluggify(name) || item.name === name);\r\n//     }\r\n\r\n//     const indexed = find(pack.contents);\r\n//     if (indexed) return indexed;\r\n//     return find(await pack.getDocuments());\r\n\r\n// }\r\n\r\n// export async function querySpeciesCompendium(filterQuery) {\r\n//     const pack = game.packs.get(\"ptu.species\");\r\n//     const species = await pack.getDocuments();\r\n//     return species.filter(filterQuery);\r\n// }\r\n\r\nexport function isObject(obj: any) {\r\n    return obj !== null && typeof obj === \"object\";\r\n}\r\n\r\nexport function isItemUUID(uuid: any) {\r\n    if (typeof uuid !== \"string\") return false;\r\n    if (/^(?:Actor\\.[a-zA-Z0-9]{16}\\.)?Item\\.[a-zA-Z0-9]{16}$/.test(uuid)) {\r\n        return true;\r\n    }\r\n\r\n    const [type, scope, packId, id] = uuid.split(\".\");\r\n    if (type !== \"Compendium\") return false;\r\n    if (!(scope && packId && id)) throw Error(`Unable to parse UUID: ${uuid}`);\r\n\r\n    const pack = game.packs.get(`${scope}.${packId}`);\r\n    return pack?.documentName === \"Item\";\r\n}\r\n\r\nexport function isTokenUUID(uuid: any) {\r\n    return typeof uuid === \"string\" && /^Scene\\.[A-Za-z0-9]{16}\\.Token\\.[A-Za-z0-9]{16}$/.test(uuid);\r\n}\r\n\r\nexport function sortStringRecord(record: Record<string, string>) {\r\n    return Object.fromEntries(\r\n        Object.entries(record)\r\n            .map((entry) => {\r\n                entry[1] = game.i18n.localize(entry[1]);\r\n                return entry;\r\n            })\r\n            .sort((a, b) => a[1].localeCompare(b[1], game.i18n.lang))\r\n    );\r\n}\r\n\r\n// /**\r\n//  * @param uuid The UUID of the item to get and first search param\r\n//  * @param name The name of the item to get and second search param, type required to succeed\r\n//  * @param type The type of the item required for name search\r\n//  * @param item Original item to derrive search params from\r\n//  */\r\n// export async function getItemFromCompendium({ uuid, name, type, item }) {\r\n//     let found = null;\r\n//     if (uuid) {\r\n//         found = await fromUuid(uuid);\r\n//     }\r\n//     if (!found && name && type) {\r\n//         found = await findItemInCompendium({ name, type });\r\n//     }\r\n//     if (!found && item) {\r\n//         found = await getItemFromCompendium({ uuid: item.flags?.core?.sourceId, name: item.name, type: item.type });\r\n//     }\r\n//     return found;\r\n// }","/**\n * Tagify (v 4.16.4) - tags input component\n * By undefined\n * https://github.com/yairEO/tagify\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n * \r\n * THE SOFTWARE IS NOT PERMISSIBLE TO BE SOLD.\n */\n\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).Tagify=e()}(this,(function(){\"use strict\";function t(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,s)}return i}function e(e){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?t(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}const s=(t,e,i,s)=>(t=\"\"+t,e=\"\"+e,s&&(t=t.trim(),e=e.trim()),i?t==e:t.toLowerCase()==e.toLowerCase()),a=(t,e)=>t&&Array.isArray(t)&&t.map((t=>n(t,e)));function n(t,e){var i,s={};for(i in t)e.indexOf(i)<0&&(s[i]=t[i]);return s}function o(t){var e=document.createElement(\"div\");return t.replace(/\\&#?[0-9a-z]+;/gi,(function(t){return e.innerHTML=t,e.innerText}))}function r(t){return(new DOMParser).parseFromString(t.trim(),\"text/html\").body.firstElementChild}function l(t,e){for(e=e||\"previous\";t=t[e+\"Sibling\"];)if(3==t.nodeType)return t}function d(t){return\"string\"==typeof t?t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/`|'/g,\"&#039;\"):t}function h(t){var e=Object.prototype.toString.call(t).split(\" \")[1].slice(0,-1);return t===Object(t)&&\"Array\"!=e&&\"Function\"!=e&&\"RegExp\"!=e&&\"HTMLUnknownElement\"!=e}function g(t,e,i){function s(t,e){for(var i in e)if(e.hasOwnProperty(i)){if(h(e[i])){h(t[i])?s(t[i],e[i]):t[i]=Object.assign({},e[i]);continue}if(Array.isArray(e[i])){t[i]=Object.assign([],e[i]);continue}t[i]=e[i]}}return t instanceof Object||(t={}),s(t,e),i&&s(t,i),t}function p(){const t=[],e={};for(let i of arguments)for(let s of i)h(s)?e[s.value]||(t.push(s),e[s.value]=1):t.includes(s)||t.push(s);return t}function c(t){return String.prototype.normalize?\"string\"==typeof t?t.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\"):void 0:t}var u=()=>/(?=.*chrome)(?=.*android)/i.test(navigator.userAgent);function m(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(t=>(t^crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)))}function v(t){return t&&t.classList&&t.classList.contains(this.settings.classNames.tag)}var f={delimiters:\",\",pattern:null,tagTextProp:\"value\",maxTags:1/0,callbacks:{},addTagOnBlur:!0,onChangeAfterBlur:!0,duplicates:!1,whitelist:[],blacklist:[],enforceWhitelist:!1,userInput:!0,keepInvalidTags:!1,createInvalidTags:!0,mixTagsAllowedAfter:/,|\\.|\\:|\\s/,mixTagsInterpolator:[\"[[\",\"]]\"],backspace:!0,skipInvalid:!1,pasteAsTags:!0,editTags:{clicks:2,keepInvalid:!0},transformTag:()=>{},trim:!0,a11y:{focusableTags:!1},mixMode:{insertAfterTag:\" \"},autoComplete:{enabled:!0,rightKey:!1},classNames:{namespace:\"tagify\",mixMode:\"tagify--mix\",selectMode:\"tagify--select\",input:\"tagify__input\",focus:\"tagify--focus\",tagNoAnimation:\"tagify--noAnim\",tagInvalid:\"tagify--invalid\",tagNotAllowed:\"tagify--notAllowed\",scopeLoading:\"tagify--loading\",hasMaxTags:\"tagify--hasMaxTags\",hasNoTags:\"tagify--noTags\",empty:\"tagify--empty\",inputInvalid:\"tagify__input--invalid\",dropdown:\"tagify__dropdown\",dropdownWrapper:\"tagify__dropdown__wrapper\",dropdownHeader:\"tagify__dropdown__header\",dropdownFooter:\"tagify__dropdown__footer\",dropdownItem:\"tagify__dropdown__item\",dropdownItemActive:\"tagify__dropdown__item--active\",dropdownItemHidden:\"tagify__dropdown__item--hidden\",dropdownInital:\"tagify__dropdown--initial\",tag:\"tagify__tag\",tagText:\"tagify__tag-text\",tagX:\"tagify__tag__removeBtn\",tagLoading:\"tagify__tag--loading\",tagEditing:\"tagify__tag--editable\",tagFlash:\"tagify__tag--flash\",tagHide:\"tagify__tag--hide\"},dropdown:{classname:\"\",enabled:2,maxItems:10,searchKeys:[\"value\",\"searchBy\"],fuzzySearch:!0,caseSensitive:!1,accentedSearch:!0,includeSelectedTags:!1,highlightFirst:!1,closeOnSelect:!0,clearOnSelect:!0,position:\"all\",appendTarget:null},hooks:{beforeRemoveTag:()=>Promise.resolve(),beforePaste:()=>Promise.resolve(),suggestionClick:()=>Promise.resolve()}};function T(){this.dropdown={};for(let t in this._dropdown)this.dropdown[t]=\"function\"==typeof this._dropdown[t]?this._dropdown[t].bind(this):this._dropdown[t];this.dropdown.refs()}var w={refs(){this.DOM.dropdown=this.parseTemplate(\"dropdown\",[this.settings]),this.DOM.dropdown.content=this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-wrapper']\")},getHeaderRef(){return this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-header']\")},getFooterRef(){return this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-footer']\")},getAllSuggestionsRefs(){return[...this.DOM.dropdown.content.querySelectorAll(this.settings.classNames.dropdownItemSelector)]},show(t){var e,i,a,n=this.settings,o=\"mix\"==n.mode&&!n.enforceWhitelist,r=!n.whitelist||!n.whitelist.length,l=\"manual\"==n.dropdown.position;if(t=void 0===t?this.state.inputText:t,!(r&&!o&&!n.templates.dropdownItemNoMatch||!1===n.dropdown.enable||this.state.isLoading||this.settings.readonly)){if(clearTimeout(this.dropdownHide__bindEventsTimeout),this.suggestedListItems=this.dropdown.filterListItems(t),t&&!this.suggestedListItems.length&&(this.trigger(\"dropdown:noMatch\",t),n.templates.dropdownItemNoMatch&&(a=n.templates.dropdownItemNoMatch.call(this,{value:t}))),!a){if(this.suggestedListItems.length)t&&o&&!this.state.editing.scope&&!s(this.suggestedListItems[0].value,t)&&this.suggestedListItems.unshift({value:t});else{if(!t||!o||this.state.editing.scope)return this.input.autocomplete.suggest.call(this),void this.dropdown.hide();this.suggestedListItems=[{value:t}]}i=\"\"+(h(e=this.suggestedListItems[0])?e.value:e),n.autoComplete&&i&&0==i.indexOf(t)&&this.input.autocomplete.suggest.call(this,e)}this.dropdown.fill(a),n.dropdown.highlightFirst&&this.dropdown.highlightOption(this.DOM.dropdown.content.querySelector(n.classNames.dropdownItemSelector)),this.state.dropdown.visible||setTimeout(this.dropdown.events.binding.bind(this)),this.state.dropdown.visible=t||!0,this.state.dropdown.query=t,this.setStateSelection(),l||setTimeout((()=>{this.dropdown.position(),this.dropdown.render()})),setTimeout((()=>{this.trigger(\"dropdown:show\",this.DOM.dropdown)}))}},hide(t){var e=this.DOM,i=e.scope,s=e.dropdown,a=\"manual\"==this.settings.dropdown.position&&!t;if(s&&document.body.contains(s)&&!a)return window.removeEventListener(\"resize\",this.dropdown.position),this.dropdown.events.binding.call(this,!1),i.setAttribute(\"aria-expanded\",!1),s.parentNode.removeChild(s),setTimeout((()=>{this.state.dropdown.visible=!1}),100),this.state.dropdown.query=this.state.ddItemData=this.state.ddItemElm=this.state.selection=null,this.state.tag&&this.state.tag.value.length&&(this.state.flaggedTags[this.state.tag.baseOffset]=this.state.tag),this.trigger(\"dropdown:hide\",s),this},toggle(t){this.dropdown[this.state.dropdown.visible&&!t?\"hide\":\"show\"]()},render(){var t,e,i,s=(t=this.DOM.dropdown,(i=t.cloneNode(!0)).style.cssText=\"position:fixed; top:-9999px; opacity:0\",document.body.appendChild(i),e=i.clientHeight,i.parentNode.removeChild(i),e),a=this.settings;return\"number\"==typeof a.dropdown.enabled&&a.dropdown.enabled>=0?(this.DOM.scope.setAttribute(\"aria-expanded\",!0),document.body.contains(this.DOM.dropdown)||(this.DOM.dropdown.classList.add(a.classNames.dropdownInital),this.dropdown.position(s),a.dropdown.appendTarget.appendChild(this.DOM.dropdown),setTimeout((()=>this.DOM.dropdown.classList.remove(a.classNames.dropdownInital)))),this):this},fill(t){t=\"string\"==typeof t?t:this.dropdown.createListHTML(t||this.suggestedListItems);var e,i=this.settings.templates.dropdownContent.call(this,t);this.DOM.dropdown.content.innerHTML=(e=i)?e.replace(/\\>[\\r\\n ]+\\</g,\"><\").replace(/(<.*?>)|\\s+/g,((t,e)=>e||\" \")):\"\"},fillHeaderFooter(){this.settings.templates;var t=this.dropdown.filterListItems(this.state.dropdown.query),e=this.parseTemplate(\"dropdownHeader\",[t]),i=this.parseTemplate(\"dropdownFooter\",[t]),s=this.dropdown.getHeaderRef(),a=this.dropdown.getFooterRef();e&&s?.parentNode.replaceChild(e,s),i&&a?.parentNode.replaceChild(i,a)},refilter(t){t=t||this.state.dropdown.query||\"\",this.suggestedListItems=this.dropdown.filterListItems(t),this.dropdown.fill(),this.suggestedListItems.length||this.dropdown.hide(),this.trigger(\"dropdown:updated\",this.DOM.dropdown)},position(t){var e=this.settings.dropdown;if(\"manual\"!=e.position){var i,s,a,n,o,r,l=this.DOM.dropdown,d=e.placeAbove,h=e.appendTarget===document.body,g=h?window.pageYOffset:e.appendTarget.scrollTop,p=document.fullscreenElement||document.webkitFullscreenElement||document.documentElement,c=p.clientHeight,u=Math.max(p.clientWidth||0,window.innerWidth||0)>480?e.position:\"all\",m=this.DOM[\"input\"==u?\"input\":\"scope\"];if(t=t||l.clientHeight,this.state.dropdown.visible){if(\"text\"==u?(a=(i=this.getCaretGlobalPosition()).bottom,s=i.top,n=i.left,o=\"auto\"):(r=function(t){for(var e=0,i=0;t&&t!=p;)e+=t.offsetLeft||0,i+=t.offsetTop||0,t=t.parentNode;return{left:e,top:i}}(e.appendTarget),s=(i=m.getBoundingClientRect()).top-r.top,a=i.bottom-1-r.top,n=i.left-r.left,o=i.width+\"px\"),!h){let t=function(){for(var t=0,i=e.appendTarget.parentNode;i;)t+=i.scrollTop||0,i=i.parentNode;return t}();s+=t,a+=t}s=Math.floor(s),a=Math.ceil(a),d=void 0===d?c-i.bottom<t:d,l.style.cssText=\"left:\"+(n+window.pageXOffset)+\"px; width:\"+o+\";\"+(d?\"top: \"+(s+g)+\"px\":\"top: \"+(a+g)+\"px\"),l.setAttribute(\"placement\",d?\"top\":\"bottom\"),l.setAttribute(\"position\",u)}}},events:{binding(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];var e=this.dropdown.events.callbacks,i=this.listeners.dropdown=this.listeners.dropdown||{position:this.dropdown.position.bind(this,null),onKeyDown:e.onKeyDown.bind(this),onMouseOver:e.onMouseOver.bind(this),onMouseLeave:e.onMouseLeave.bind(this),onClick:e.onClick.bind(this),onScroll:e.onScroll.bind(this)},s=t?\"addEventListener\":\"removeEventListener\";\"manual\"!=this.settings.dropdown.position&&(document[s](\"scroll\",i.position,!0),window[s](\"resize\",i.position),window[s](\"keydown\",i.onKeyDown)),this.DOM.dropdown[s](\"mouseover\",i.onMouseOver),this.DOM.dropdown[s](\"mouseleave\",i.onMouseLeave),this.DOM.dropdown[s](\"mousedown\",i.onClick),this.DOM.dropdown.content[s](\"scroll\",i.onScroll)},callbacks:{onKeyDown(t){if(this.state.hasFocus&&!this.state.composing){var e=this.DOM.dropdown.querySelector(this.settings.classNames.dropdownItemActiveSelector),i=this.dropdown.getSuggestionDataByNode(e);switch(t.key){case\"ArrowDown\":case\"ArrowUp\":case\"Down\":case\"Up\":t.preventDefault();var s=this.dropdown.getAllSuggestionsRefs(),a=\"ArrowUp\"==t.key||\"Up\"==t.key;e&&(e=this.dropdown.getNextOrPrevOption(e,!a)),e&&e.matches(this.settings.classNames.dropdownItemSelector)||(e=s[a?s.length-1:0]),i=this.dropdown.getSuggestionDataByNode(e),this.dropdown.highlightOption(e,!0);break;case\"Escape\":case\"Esc\":this.dropdown.hide();break;case\"ArrowRight\":if(this.state.actions.ArrowLeft)return;case\"Tab\":if(\"mix\"!=this.settings.mode&&e&&!this.settings.autoComplete.rightKey&&!this.state.editing){t.preventDefault();var n=this.dropdown.getMappedValue(i);return this.input.autocomplete.set.call(this,n),!1}return!0;case\"Enter\":t.preventDefault(),this.settings.hooks.suggestionClick(t,{tagify:this,tagData:i,suggestionElm:e}).then((()=>{if(e)return this.dropdown.selectOption(e),e=this.dropdown.getNextOrPrevOption(e,!a),void this.dropdown.highlightOption(e);this.dropdown.hide(),\"mix\"!=this.settings.mode&&this.addTags(this.state.inputText.trim(),!0)})).catch((t=>t));break;case\"Backspace\":{if(\"mix\"==this.settings.mode||this.state.editing.scope)return;const t=this.input.raw.call(this);\"\"!=t&&8203!=t.charCodeAt(0)||(!0===this.settings.backspace?this.removeTags():\"edit\"==this.settings.backspace&&setTimeout(this.editTag.bind(this),0))}}}},onMouseOver(t){var e=t.target.closest(this.settings.classNames.dropdownItemSelector);e&&this.dropdown.highlightOption(e)},onMouseLeave(t){this.dropdown.highlightOption()},onClick(t){if(0==t.button&&t.target!=this.DOM.dropdown&&t.target!=this.DOM.dropdown.content){var e=t.target.closest(this.settings.classNames.dropdownItemSelector),i=this.dropdown.getSuggestionDataByNode(e);this.state.actions.selectOption=!0,setTimeout((()=>this.state.actions.selectOption=!1),50),this.settings.hooks.suggestionClick(t,{tagify:this,tagData:i,suggestionElm:e}).then((()=>{e?this.dropdown.selectOption(e,t):this.dropdown.hide()})).catch((t=>console.warn(t)))}},onScroll(t){var e=t.target,i=e.scrollTop/(e.scrollHeight-e.parentNode.clientHeight)*100;this.trigger(\"dropdown:scroll\",{percentage:Math.round(i)})}}},getSuggestionDataByNode(t){var e=t&&t.getAttribute(\"value\");return this.suggestedListItems.find((t=>t.value==e))||null},getNextOrPrevOption(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];var i=this.dropdown.getAllSuggestionsRefs(),s=i.findIndex((e=>e===t));return e?i[s+1]:i[s-1]},highlightOption(t,e){var i,s=this.settings.classNames.dropdownItemActive;if(this.state.ddItemElm&&(this.state.ddItemElm.classList.remove(s),this.state.ddItemElm.removeAttribute(\"aria-selected\")),!t)return this.state.ddItemData=null,this.state.ddItemElm=null,void this.input.autocomplete.suggest.call(this);i=this.dropdown.getSuggestionDataByNode(t),this.state.ddItemData=i,this.state.ddItemElm=t,t.classList.add(s),t.setAttribute(\"aria-selected\",!0),e&&(t.parentNode.scrollTop=t.clientHeight+t.offsetTop-t.parentNode.clientHeight),this.settings.autoComplete&&(this.input.autocomplete.suggest.call(this,i),this.dropdown.position())},selectOption(t,e){var i=this.settings.dropdown,s=i.clearOnSelect,a=i.closeOnSelect;if(!t)return this.addTags(this.state.inputText,!0),void(a&&this.dropdown.hide());e=e||{};var n=t.getAttribute(\"value\"),o=\"noMatch\"==n,r=this.suggestedListItems.find((t=>(t.value||t)==n));this.trigger(\"dropdown:select\",{data:r,elm:t,event:e}),n&&(r||o)?(this.state.editing?this.onEditTagDone(null,g({__isValid:!0},this.normalizeTags([r])[0])):this[\"mix\"==this.settings.mode?\"addMixTags\":\"addTags\"]([r||this.input.raw.call(this)],s),this.DOM.input.parentNode&&(setTimeout((()=>{this.DOM.input.focus(),this.toggleFocusClass(!0),this.setRangeAtStartEnd(!1)})),a&&setTimeout(this.dropdown.hide.bind(this)),t.addEventListener(\"transitionend\",(()=>{this.dropdown.fillHeaderFooter(),setTimeout((()=>t.remove()),100)}),{once:!0}),t.classList.add(this.settings.classNames.dropdownItemHidden))):a&&setTimeout(this.dropdown.hide.bind(this))},selectAll(t){this.suggestedListItems.length=0,this.dropdown.hide(),this.dropdown.filterListItems(\"\");var e=this.dropdown.filterListItems(\"\");return t||(e=this.state.dropdown.suggestions),this.addTags(e,!0),this},filterListItems(t,e){var i,s,a,n,o,r=this.settings,l=r.dropdown,d=(e=e||{},[]),g=[],p=r.whitelist,u=l.maxItems>=0?l.maxItems:1/0,m=l.searchKeys,v=0;if(!(t=\"select\"==r.mode&&this.value.length&&this.value[0][r.tagTextProp]==t?\"\":t)||!m.length)return d=l.includeSelectedTags?p:p.filter((t=>!this.isTagDuplicate(h(t)?t.value:t))),this.state.dropdown.suggestions=d,d.slice(0,u);function f(t,e){return e.toLowerCase().split(\" \").every((e=>t.includes(e.toLowerCase())))}for(o=l.caseSensitive?\"\"+t:(\"\"+t).toLowerCase();v<p.length;v++){let t,r;i=p[v]instanceof Object?p[v]:{value:p[v]};let u=!Object.keys(i).some((t=>m.includes(t)))?[\"value\"]:m;l.fuzzySearch&&!e.exact?(a=u.reduce(((t,e)=>t+\" \"+(i[e]||\"\")),\"\").toLowerCase().trim(),l.accentedSearch&&(a=c(a),o=c(o)),t=0==a.indexOf(o),r=a===o,s=f(a,o)):(t=!0,s=u.some((t=>{var s=\"\"+(i[t]||\"\");return l.accentedSearch&&(s=c(s),o=c(o)),l.caseSensitive||(s=s.toLowerCase()),r=s===o,e.exact?s===o:0==s.indexOf(o)}))),n=!l.includeSelectedTags&&this.isTagDuplicate(h(i)?i.value:i),s&&!n&&(r&&t?g.push(i):\"startsWith\"==l.sortby&&t?d.unshift(i):d.push(i))}return this.state.dropdown.suggestions=g.concat(d),\"function\"==typeof l.sortby?l.sortby(g.concat(d),o):g.concat(d).slice(0,u)},getMappedValue(t){var e=this.settings.dropdown.mapValueTo;return e?\"function\"==typeof e?e(t):t[e]||t.value:t.value},createListHTML(t){return g([],t).map(((t,i)=>{\"string\"!=typeof t&&\"number\"!=typeof t||(t={value:t});var s=this.dropdown.getMappedValue(t);return s=\"string\"==typeof s?d(s):s,this.settings.templates.dropdownItem.apply(this,[e(e({},t),{},{mappedValue:s}),this])})).join(\"\")}};const b=\"@yaireo/tagify/\";var y,x={empty:\"empty\",exceed:\"number of tags exceeded\",pattern:\"pattern mismatch\",duplicate:\"already exists\",notAllowed:\"not allowed\"},D={wrapper:(t,e)=>`<tags class=\"${e.classNames.namespace} ${e.mode?`${e.classNames[e.mode+\"Mode\"]}`:\"\"} ${t.className}\"\\n                    ${e.readonly?\"readonly\":\"\"}\\n                    ${e.disabled?\"disabled\":\"\"}\\n                    ${e.required?\"required\":\"\"}\\n                    ${\"select\"===e.mode?\"spellcheck='false'\":\"\"}\\n                    tabIndex=\"-1\">\\n            <span ${!e.readonly&&e.userInput?\"contenteditable\":\"\"} tabIndex=\"0\" data-placeholder=\"${e.placeholder||\"&#8203;\"}\" aria-placeholder=\"${e.placeholder||\"\"}\"\\n                class=\"${e.classNames.input}\"\\n                role=\"textbox\"\\n                aria-autocomplete=\"both\"\\n                aria-multiline=\"${\"mix\"==e.mode}\"></span>\\n                &#8203;\\n        </tags>`,tag(t,e){let i=e.settings;return`<tag title=\"${t.title||t.value}\"\\n                    contenteditable='false'\\n                    spellcheck='false'\\n                    tabIndex=\"${i.a11y.focusableTags?0:-1}\"\\n                    class=\"${i.classNames.tag} ${t.class||\"\"}\"\\n                    ${this.getAttributes(t)}>\\n            <x title='' class=\"${i.classNames.tagX}\" role='button' aria-label='remove tag'></x>\\n            <div>\\n                <span class=\"${i.classNames.tagText}\">${t[i.tagTextProp]||t.value}</span>\\n            </div>\\n        </tag>`},dropdown(t){var e=t.dropdown,i=\"manual\"==e.position,s=`${t.classNames.dropdown}`;return`<div class=\"${i?\"\":s} ${e.classname}\" role=\"listbox\" aria-labelledby=\"dropdown\">\\n                    <div data-selector='tagify-suggestions-wrapper' class=\"${t.classNames.dropdownWrapper}\"></div>\\n                </div>`},dropdownContent(t){var e=this.settings,i=this.state.dropdown.suggestions;return`\\n            ${e.templates.dropdownHeader.call(this,i)}\\n            ${t}\\n            ${e.templates.dropdownFooter.call(this,i)}\\n        `},dropdownItem(t){return`<div ${this.getAttributes(t)}\\n                    class='${this.settings.classNames.dropdownItem} ${t.class?t.class:\"\"}'\\n                    tabindex=\"0\"\\n                    role=\"option\">${t.mappedValue||t.value}</div>`},dropdownHeader(t){return`<header data-selector='tagify-suggestions-header' class=\"${this.settings.classNames.dropdownHeader}\"></header>`},dropdownFooter(t){var e=t.length-this.settings.dropdown.maxItems;return e>0?`<footer data-selector='tagify-suggestions-footer' class=\"${this.settings.classNames.dropdownFooter}\">\\n                ${e} more items. Refine your search.\\n            </footer>`:\"\"},dropdownItemNoMatch:null};var O={customBinding(){this.customEventsList.forEach((t=>{this.on(t,this.settings.callbacks[t])}))},binding(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];var e,i=this.events.callbacks,s=t?\"addEventListener\":\"removeEventListener\";if(!this.state.mainEvents||!t){for(var a in this.state.mainEvents=t,t&&!this.listeners.main&&(this.events.bindGlobal.call(this),this.settings.isJQueryPlugin&&jQuery(this.DOM.originalInput).on(\"tagify.removeAllTags\",this.removeAllTags.bind(this))),e=this.listeners.main=this.listeners.main||{focus:[\"input\",i.onFocusBlur.bind(this)],keydown:[\"input\",i.onKeydown.bind(this)],click:[\"scope\",i.onClickScope.bind(this)],dblclick:[\"scope\",i.onDoubleClickScope.bind(this)],paste:[\"input\",i.onPaste.bind(this)],drop:[\"input\",i.onDrop.bind(this)],compositionstart:[\"input\",i.onCompositionStart.bind(this)],compositionend:[\"input\",i.onCompositionEnd.bind(this)]})this.DOM[e[a][0]][s](a,e[a][1]);clearInterval(this.listeners.main.originalInputValueObserverInterval),this.listeners.main.originalInputValueObserverInterval=setInterval(i.observeOriginalInputValue.bind(this),500);var n=this.listeners.main.inputMutationObserver||new MutationObserver(i.onInputDOMChange.bind(this));n&&n.disconnect(),\"mix\"==this.settings.mode&&n.observe(this.DOM.input,{childList:!0})}},bindGlobal(t){var e,i=this.events.callbacks,s=t?\"removeEventListener\":\"addEventListener\";if(t||!this.listeners.global)for(e of(this.listeners.global=this.listeners&&this.listeners.global||[{type:this.isIE?\"keydown\":\"input\",target:this.DOM.input,cb:i[this.isIE?\"onInputIE\":\"onInput\"].bind(this)},{type:\"keydown\",target:window,cb:i.onWindowKeyDown.bind(this)},{type:\"blur\",target:this.DOM.input,cb:i.onFocusBlur.bind(this)}],this.listeners.global))e.target[s](e.type,e.cb)},unbindGlobal(){this.events.bindGlobal.call(this,!0)},callbacks:{onFocusBlur(t){var e=this.settings,i=t.target?this.trim(t.target.textContent):\"\",s=this.value?.[0]?.[e.tagTextProp],a=t.type,n=e.dropdown.enabled>=0,o={relatedTarget:t.relatedTarget},r=this.state.actions.selectOption&&(n||!e.dropdown.closeOnSelect),l=this.state.actions.addNew&&n,d=t.relatedTarget&&v.call(this,t.relatedTarget)&&this.DOM.scope.contains(t.relatedTarget);if(\"blur\"==a){if(t.relatedTarget===this.DOM.scope)return this.dropdown.hide(),void this.DOM.input.focus();this.postUpdate(),e.onChangeAfterBlur&&this.triggerChangeEvent()}if(!r&&!l)if(this.state.hasFocus=\"focus\"==a&&+new Date,this.toggleFocusClass(this.state.hasFocus),\"mix\"!=e.mode){if(\"focus\"==a)return this.trigger(\"focus\",o),void(0!==e.dropdown.enabled&&e.userInput||this.dropdown.show(this.value.length?\"\":void 0));\"blur\"==a&&(this.trigger(\"blur\",o),this.loading(!1),\"select\"==e.mode&&(d&&(this.removeTags(),i=\"\"),s===i&&(i=\"\")),i&&!this.state.actions.selectOption&&e.addTagOnBlur&&this.addTags(i,!0)),this.DOM.input.removeAttribute(\"style\"),this.dropdown.hide()}else\"focus\"==a?this.trigger(\"focus\",o):\"blur\"==t.type&&(this.trigger(\"blur\",o),this.loading(!1),this.dropdown.hide(),this.state.dropdown.visible=void 0,this.setStateSelection())},onCompositionStart(t){this.state.composing=!0},onCompositionEnd(t){this.state.composing=!1},onWindowKeyDown(t){var e,i=document.activeElement;if(v.call(this,i)&&this.DOM.scope.contains(document.activeElement))switch(e=i.nextElementSibling,t.key){case\"Backspace\":this.settings.readonly||(this.removeTags(i),(e||this.DOM.input).focus());break;case\"Enter\":setTimeout(this.editTag.bind(this),0,i)}},onKeydown(t){var e=this.settings;if(!this.state.composing&&e.userInput){\"select\"==e.mode&&e.enforceWhitelist&&this.value.length&&\"Tab\"!=t.key&&t.preventDefault();var i=this.trim(t.target.textContent);if(this.trigger(\"keydown\",{event:t}),\"mix\"==e.mode){switch(t.key){case\"Left\":case\"ArrowLeft\":this.state.actions.ArrowLeft=!0;break;case\"Delete\":case\"Backspace\":if(this.state.editing)return;var s,a,n,r=document.getSelection(),d=\"Delete\"==t.key&&r.anchorOffset==(r.anchorNode.length||0),h=r.anchorNode.previousSibling,g=1==r.anchorNode.nodeType||!r.anchorOffset&&h&&1==h.nodeType&&r.anchorNode.previousSibling,p=o(this.DOM.input.innerHTML),c=this.getTagElms();if(\"edit\"==e.backspace&&g)return s=1==r.anchorNode.nodeType?null:r.anchorNode.previousElementSibling,setTimeout(this.editTag.bind(this),0,s),void t.preventDefault();if(u()&&g)return n=l(g),g.hasAttribute(\"readonly\")||g.remove(),this.DOM.input.focus(),void setTimeout((()=>{this.placeCaretAfterNode(n),this.DOM.input.click()}));if(\"BR\"==r.anchorNode.nodeName)return;if((d||g)&&1==r.anchorNode.nodeType?a=0==r.anchorOffset?d?c[0]:null:c[Math.min(c.length,r.anchorOffset)-1]:d?a=r.anchorNode.nextElementSibling:g&&(a=g),3==r.anchorNode.nodeType&&!r.anchorNode.nodeValue&&r.anchorNode.previousElementSibling&&t.preventDefault(),(g||d)&&!e.backspace)return void t.preventDefault();if(\"Range\"!=r.type&&!r.anchorOffset&&r.anchorNode==this.DOM.input&&\"Delete\"!=t.key)return void t.preventDefault();if(\"Range\"!=r.type&&a&&a.hasAttribute(\"readonly\"))return void this.placeCaretAfterNode(l(a));clearTimeout(y),y=setTimeout((()=>{var t=document.getSelection(),e=o(this.DOM.input.innerHTML),i=!d&&t.anchorNode.previousSibling;if(e.length>=p.length&&i)if(v.call(this,i)&&!i.hasAttribute(\"readonly\")){if(this.removeTags(i),this.fixFirefoxLastTagNoCaret(),2==this.DOM.input.children.length&&\"BR\"==this.DOM.input.children[1].tagName)return this.DOM.input.innerHTML=\"\",this.value.length=0,!0}else i.remove();this.value=[].map.call(c,((t,e)=>{var i=this.tagData(t);if(t.parentNode||i.readonly)return i;this.trigger(\"remove\",{tag:t,index:e,data:i})})).filter((t=>t))}),20)}return!0}switch(t.key){case\"Backspace\":\"select\"==e.mode&&e.enforceWhitelist&&this.value.length?this.removeTags():this.state.dropdown.visible&&\"manual\"!=e.dropdown.position||\"\"!=t.target.textContent&&8203!=i.charCodeAt(0)||(!0===e.backspace?this.removeTags():\"edit\"==e.backspace&&setTimeout(this.editTag.bind(this),0));break;case\"Esc\":case\"Escape\":if(this.state.dropdown.visible)return;t.target.blur();break;case\"Down\":case\"ArrowDown\":this.state.dropdown.visible||this.dropdown.show();break;case\"ArrowRight\":{let t=this.state.inputSuggestion||this.state.ddItemData;if(t&&e.autoComplete.rightKey)return void this.addTags([t],!0);break}case\"Tab\":{let s=\"select\"==e.mode;if(!i||s)return!0;t.preventDefault()}case\"Enter\":if(this.state.dropdown.visible&&\"manual\"!=e.dropdown.position)return;t.preventDefault(),setTimeout((()=>{this.state.actions.selectOption||this.addTags(i,!0)}))}}},onInput(t){this.postUpdate();var e=this.settings;if(\"mix\"==e.mode)return this.events.callbacks.onMixTagsInput.call(this,t);var i=this.input.normalize.call(this),s=i.length>=e.dropdown.enabled,a={value:i,inputElm:this.DOM.input},n=this.validateTag({value:i});\"select\"==e.mode&&this.toggleScopeValidation(n),a.isValid=n,this.state.inputText!=i&&(this.input.set.call(this,i,!1),-1!=i.search(e.delimiters)?this.addTags(i)&&this.input.set.call(this):e.dropdown.enabled>=0&&this.dropdown[s?\"show\":\"hide\"](i),this.trigger(\"input\",a))},onMixTagsInput(t){var e,i,s,a,n,o,r,l,d=this.settings,h=this.value.length,p=this.getTagElms(),c=document.createDocumentFragment(),m=window.getSelection().getRangeAt(0),v=[].map.call(p,(t=>this.tagData(t).value));if(\"deleteContentBackward\"==t.inputType&&u()&&this.events.callbacks.onKeydown.call(this,{target:t.target,key:\"Backspace\"}),this.value.slice().forEach((t=>{t.readonly&&!v.includes(t.value)&&c.appendChild(this.createTagElem(t))})),c.childNodes.length&&(m.insertNode(c),this.setRangeAtStartEnd(!1,c.lastChild)),p.length!=h)return this.value=[].map.call(this.getTagElms(),(t=>this.tagData(t))),void this.update({withoutChangeEvent:!0});if(this.hasMaxTags())return!0;if(window.getSelection&&(o=window.getSelection()).rangeCount>0&&3==o.anchorNode.nodeType){if((m=o.getRangeAt(0).cloneRange()).collapse(!0),m.setStart(o.focusNode,0),s=(e=m.toString().slice(0,m.endOffset)).split(d.pattern).length-1,(i=e.match(d.pattern))&&(a=e.slice(e.lastIndexOf(i[i.length-1]))),a){if(this.state.actions.ArrowLeft=!1,this.state.tag={prefix:a.match(d.pattern)[0],value:a.replace(d.pattern,\"\")},this.state.tag.baseOffset=o.baseOffset-this.state.tag.value.length,l=this.state.tag.value.match(d.delimiters))return this.state.tag.value=this.state.tag.value.replace(d.delimiters,\"\"),this.state.tag.delimiters=l[0],this.addTags(this.state.tag.value,d.dropdown.clearOnSelect),void this.dropdown.hide();n=this.state.tag.value.length>=d.dropdown.enabled;try{r=(r=this.state.flaggedTags[this.state.tag.baseOffset]).prefix==this.state.tag.prefix&&r.value[0]==this.state.tag.value[0],this.state.flaggedTags[this.state.tag.baseOffset]&&!this.state.tag.value&&delete this.state.flaggedTags[this.state.tag.baseOffset]}catch(t){}(r||s<this.state.mixMode.matchedPatternCount)&&(n=!1)}else this.state.flaggedTags={};this.state.mixMode.matchedPatternCount=s}setTimeout((()=>{this.update({withoutChangeEvent:!0}),this.trigger(\"input\",g({},this.state.tag,{textContent:this.DOM.input.textContent})),this.state.tag&&this.dropdown[n?\"show\":\"hide\"](this.state.tag.value)}),10)},onInputIE(t){var e=this;setTimeout((function(){e.events.callbacks.onInput.call(e,t)}))},observeOriginalInputValue(){this.DOM.originalInput.parentNode||this.destroy(),this.DOM.originalInput.value!=this.DOM.originalInput.tagifyValue&&this.loadOriginalValues()},onClickScope(t){var e=this.settings,i=t.target.closest(\".\"+e.classNames.tag),s=+new Date-this.state.hasFocus;if(t.target!=this.DOM.scope){if(!t.target.classList.contains(e.classNames.tagX))return i?(this.trigger(\"click\",{tag:i,index:this.getNodeIndex(i),data:this.tagData(i),event:t}),void(1!==e.editTags&&1!==e.editTags.clicks||this.events.callbacks.onDoubleClickScope.call(this,t))):void(t.target==this.DOM.input&&(\"mix\"==e.mode&&this.fixFirefoxLastTagNoCaret(),s>500)?this.state.dropdown.visible?this.dropdown.hide():0===e.dropdown.enabled&&\"mix\"!=e.mode&&this.dropdown.show(this.value.length?\"\":void 0):\"select\"==e.mode&&!this.state.dropdown.visible&&this.dropdown.show());this.removeTags(t.target.parentNode)}else this.state.hasFocus||this.DOM.input.focus()},onPaste(t){t.preventDefault();var e,i,s=this.settings;if(\"select\"==s.mode&&s.enforceWhitelist||!s.userInput)return!1;s.readonly||(e=t.clipboardData||window.clipboardData,i=e.getData(\"Text\"),s.hooks.beforePaste(t,{tagify:this,pastedText:i,clipboardData:e}).then((e=>{void 0===e&&(e=i),e&&(this.injectAtCaret(e,window.getSelection().getRangeAt(0)),\"mix\"==this.settings.mode?this.events.callbacks.onMixTagsInput.call(this,t):this.settings.pasteAsTags?this.addTags(this.state.inputText+e,!0):this.state.inputText=e)})).catch((t=>t)))},onDrop(t){t.preventDefault()},onEditTagInput(t,e){var i=t.closest(\".\"+this.settings.classNames.tag),s=this.getNodeIndex(i),a=this.tagData(i),n=this.input.normalize.call(this,t),o={[this.settings.tagTextProp]:n,__tagId:a.__tagId},r=this.validateTag(o);this.editTagChangeDetected(g(a,o))||!0!==t.originalIsValid||(r=!0),i.classList.toggle(this.settings.classNames.tagInvalid,!0!==r),a.__isValid=r,i.title=!0===r?a.title||a.value:r,n.length>=this.settings.dropdown.enabled&&(this.state.editing&&(this.state.editing.value=n),this.dropdown.show(n)),this.trigger(\"edit:input\",{tag:i,index:s,data:g({},this.value[s],{newValue:n}),event:e})},onEditTagFocus(t){this.state.editing={scope:t,input:t.querySelector(\"[contenteditable]\")}},onEditTagBlur(t){if(this.state.hasFocus||this.toggleFocusClass(),this.DOM.scope.contains(t)){var e,i,s=this.settings,a=t.closest(\".\"+s.classNames.tag),n=this.input.normalize.call(this,t),o=this.tagData(a),r=o.__originalData,l=this.editTagChangeDetected(o),d=this.validateTag({[s.tagTextProp]:n,__tagId:o.__tagId});if(n)if(l){if(e=this.hasMaxTags(),i=g({},r,{[s.tagTextProp]:this.trim(n),__isValid:d}),s.transformTag.call(this,i,r),!0!==(d=(!e||!0===r.__isValid)&&this.validateTag(i))){if(this.trigger(\"invalid\",{data:i,tag:a,message:d}),s.editTags.keepInvalid)return;s.keepInvalidTags?i.__isValid=d:i=r}else s.keepInvalidTags&&(delete i.title,delete i[\"aria-invalid\"],delete i.class);this.onEditTagDone(a,i)}else this.onEditTagDone(a,r);else this.onEditTagDone(a)}},onEditTagkeydown(t,e){if(!this.state.composing)switch(this.trigger(\"edit:keydown\",{event:t}),t.key){case\"Esc\":case\"Escape\":e.parentNode.replaceChild(e.__tagifyTagData.__originalHTML,e),this.state.editing=!1;case\"Enter\":case\"Tab\":t.preventDefault(),t.target.blur()}},onDoubleClickScope(t){var e,i,s=t.target.closest(\".\"+this.settings.classNames.tag),a=this.tagData(s),n=this.settings;s&&n.userInput&&!1!==a.editable&&(e=s.classList.contains(this.settings.classNames.tagEditing),i=s.hasAttribute(\"readonly\"),\"select\"==n.mode||n.readonly||e||i||!this.settings.editTags||this.editTag(s),this.toggleFocusClass(!0),this.trigger(\"dblclick\",{tag:s,index:this.getNodeIndex(s),data:this.tagData(s)}))},onInputDOMChange(t){t.forEach((t=>{t.addedNodes.forEach((t=>{if(\"<div><br></div>\"==t.outerHTML)t.replaceWith(document.createElement(\"br\"));else if(1==t.nodeType&&t.querySelector(this.settings.classNames.tagSelector)){let e=document.createTextNode(\"\");3==t.childNodes[0].nodeType&&\"BR\"!=t.previousSibling.nodeName&&(e=document.createTextNode(\"\\n\")),t.replaceWith(e,...[...t.childNodes].slice(0,-1)),this.placeCaretAfterNode(e)}else if(v.call(this,t)&&(3!=t.previousSibling?.nodeType||t.previousSibling.textContent||t.previousSibling.remove(),t.previousSibling&&\"BR\"==t.previousSibling.nodeName)){t.previousSibling.replaceWith(\"\\n​\");let e=t.nextSibling,i=\"\";for(;e;)i+=e.textContent,e=e.nextSibling;i.trim()&&this.placeCaretAfterNode(t.previousSibling)}})),t.removedNodes.forEach((t=>{t&&\"BR\"==t.nodeName&&v.call(this,e)&&(this.removeTags(e),this.fixFirefoxLastTagNoCaret())}))}));var e=this.DOM.input.lastChild;e&&\"\"==e.nodeValue&&e.remove(),e&&\"BR\"==e.nodeName||this.DOM.input.appendChild(document.createElement(\"br\"))}}};function M(t,e){if(!t){console.warn(\"Tagify:\",\"input element not found\",t);const e=new Proxy(this,{get:()=>()=>e});return e}if(t.__tagify)return console.warn(\"Tagify: \",\"input element is already Tagified - Same instance is returned.\",t),t.__tagify;var i;g(this,function(t){var e=document.createTextNode(\"\");function i(t,i,s){s&&i.split(/\\s+/g).forEach((i=>e[t+\"EventListener\"].call(e,i,s)))}return{off(t,e){return i(\"remove\",t,e),this},on(t,e){return e&&\"function\"==typeof e&&i(\"add\",t,e),this},trigger(i,s,a){var n;if(a=a||{cloneData:!0},i)if(t.settings.isJQueryPlugin)\"remove\"==i&&(i=\"removeTag\"),jQuery(t.DOM.originalInput).triggerHandler(i,[s]);else{try{var o=\"object\"==typeof s?s:{value:s};if((o=a.cloneData?g({},o):o).tagify=this,s.event&&(o.event=this.cloneEvent(s.event)),s instanceof Object)for(var r in s)s[r]instanceof HTMLElement&&(o[r]=s[r]);n=new CustomEvent(i,{detail:o})}catch(t){console.warn(t)}e.dispatchEvent(n)}}}}(this)),this.isFirefox=\"undefined\"!=typeof InstallTrigger,this.isIE=window.document.documentMode,e=e||{},this.getPersistedData=(i=e.id,t=>{let e,s=\"/\"+t;if(1==localStorage.getItem(b+i+\"/v\",1))try{e=JSON.parse(localStorage[b+i+s])}catch(t){}return e}),this.setPersistedData=(t=>t?(localStorage.setItem(b+t+\"/v\",1),(e,i)=>{let s=\"/\"+i,a=JSON.stringify(e);e&&i&&(localStorage.setItem(b+t+s,a),dispatchEvent(new Event(\"storage\")))}):()=>{})(e.id),this.clearPersistedData=(t=>e=>{const i=b+\"/\"+t+\"/\";if(e)localStorage.removeItem(i+e);else for(let t in localStorage)t.includes(i)&&localStorage.removeItem(t)})(e.id),this.applySettings(t,e),this.state={inputText:\"\",editing:!1,composing:!1,actions:{},mixMode:{},dropdown:{},flaggedTags:{}},this.value=[],this.listeners={},this.DOM={},this.build(t),T.call(this),this.getCSSVars(),this.loadOriginalValues(),this.events.customBinding.call(this),this.events.binding.call(this),t.autofocus&&this.DOM.input.focus(),t.__tagify=this}return M.prototype={_dropdown:w,helpers:{sameStr:s,removeCollectionProp:a,omit:n,isObject:h,parseHTML:r,escapeHTML:d,extend:g,concatWithoutDups:p,getUID:m,isNodeTag:v},customEventsList:[\"change\",\"add\",\"remove\",\"invalid\",\"input\",\"click\",\"keydown\",\"focus\",\"blur\",\"edit:input\",\"edit:beforeUpdate\",\"edit:updated\",\"edit:start\",\"edit:keydown\",\"dropdown:show\",\"dropdown:hide\",\"dropdown:select\",\"dropdown:updated\",\"dropdown:noMatch\",\"dropdown:scroll\"],dataProps:[\"__isValid\",\"__removed\",\"__originalData\",\"__originalHTML\",\"__tagId\"],trim(t){return this.settings.trim&&t&&\"string\"==typeof t?t.trim():t},parseHTML:r,templates:D,parseTemplate(t,e){return t=this.settings.templates[t]||t,this.parseHTML(t.apply(this,e))},set whitelist(t){const e=t&&Array.isArray(t);this.settings.whitelist=e?t:[],this.setPersistedData(e?t:[],\"whitelist\")},get whitelist(){return this.settings.whitelist},generateClassSelectors(t){for(let e in t){let i=e;Object.defineProperty(t,i+\"Selector\",{get(){return\".\"+this[i].split(\" \")[0]}})}},applySettings(t,i){f.templates=this.templates;var s=this.settings=g({},f,i);if(s.disabled=t.hasAttribute(\"disabled\"),s.readonly=s.readonly||t.hasAttribute(\"readonly\"),s.placeholder=d(t.getAttribute(\"placeholder\")||s.placeholder||\"\"),s.required=t.hasAttribute(\"required\"),this.generateClassSelectors(s.classNames),void 0===s.dropdown.includeSelectedTags&&(s.dropdown.includeSelectedTags=s.duplicates),this.isIE&&(s.autoComplete=!1),[\"whitelist\",\"blacklist\"].forEach((e=>{var i=t.getAttribute(\"data-\"+e);i&&(i=i.split(s.delimiters))instanceof Array&&(s[e]=i)})),\"autoComplete\"in i&&!h(i.autoComplete)&&(s.autoComplete=f.autoComplete,s.autoComplete.enabled=i.autoComplete),\"mix\"==s.mode&&(s.autoComplete.rightKey=!0,s.delimiters=i.delimiters||null,s.tagTextProp&&!s.dropdown.searchKeys.includes(s.tagTextProp)&&s.dropdown.searchKeys.push(s.tagTextProp)),t.pattern)try{s.pattern=new RegExp(t.pattern)}catch(t){}if(s.delimiters){s._delimiters=s.delimiters;try{s.delimiters=new RegExp(this.settings.delimiters,\"g\")}catch(t){}}s.disabled&&(s.userInput=!1),this.TEXTS=e(e({},x),s.texts||{}),\"select\"!=s.mode&&s.userInput||(s.dropdown.enabled=0),s.dropdown.appendTarget=i.dropdown&&i.dropdown.appendTarget?i.dropdown.appendTarget:document.body;let a=this.getPersistedData(\"whitelist\");Array.isArray(a)&&(this.whitelist=Array.isArray(s.whitelist)?p(s.whitelist,a):a)},getAttributes(t){var e,i=this.getCustomAttributes(t),s=\"\";for(e in i)s+=\" \"+e+(void 0!==t[e]?`=\"${i[e]}\"`:\"\");return s},getCustomAttributes(t){if(!h(t))return\"\";var e,i={};for(e in t)\"__\"!=e.slice(0,2)&&\"class\"!=e&&t.hasOwnProperty(e)&&void 0!==t[e]&&(i[e]=d(t[e]));return i},setStateSelection(){var t=window.getSelection(),e={anchorOffset:t.anchorOffset,anchorNode:t.anchorNode,range:t.getRangeAt&&t.rangeCount&&t.getRangeAt(0)};return this.state.selection=e,e},getCaretGlobalPosition(){const t=document.getSelection();if(t.rangeCount){const e=t.getRangeAt(0),i=e.startContainer,s=e.startOffset;let a,n;if(s>0)return n=document.createRange(),n.setStart(i,s-1),n.setEnd(i,s),a=n.getBoundingClientRect(),{left:a.right,top:a.top,bottom:a.bottom};if(i.getBoundingClientRect)return i.getBoundingClientRect()}return{left:-9999,top:-9999}},getCSSVars(){var t=getComputedStyle(this.DOM.scope,null);var e;this.CSSVars={tagHideTransition:(t=>{let e=t.value;return\"s\"==t.unit?1e3*e:e})(function(t){if(!t)return{};var e=(t=t.trim().split(\" \")[0]).split(/\\d+/g).filter((t=>t)).pop().trim();return{value:+t.split(e).filter((t=>t))[0].trim(),unit:e}}((e=\"tag-hide-transition\",t.getPropertyValue(\"--\"+e))))}},build(t){var e=this.DOM;this.settings.mixMode.integrated?(e.originalInput=null,e.scope=t,e.input=t):(e.originalInput=t,e.originalInput_tabIndex=t.tabIndex,e.scope=this.parseTemplate(\"wrapper\",[t,this.settings]),e.input=e.scope.querySelector(this.settings.classNames.inputSelector),t.parentNode.insertBefore(e.scope,t),t.tabIndex=-1)},destroy(){this.events.unbindGlobal.call(this),this.DOM.scope.parentNode.removeChild(this.DOM.scope),this.DOM.originalInput.tabIndex=this.DOM.originalInput_tabIndex,delete this.DOM.originalInput.__tagify,this.dropdown.hide(!0),clearTimeout(this.dropdownHide__bindEventsTimeout),clearInterval(this.listeners.main.originalInputValueObserverInterval)},loadOriginalValues(t){var e,i=this.settings;if(this.state.blockChangeEvent=!0,void 0===t){const e=this.getPersistedData(\"value\");t=e&&!this.DOM.originalInput.value?e:i.mixMode.integrated?this.DOM.input.textContent:this.DOM.originalInput.value}if(this.removeAllTags(),t)if(\"mix\"==i.mode)this.parseMixTags(this.trim(t)),(e=this.DOM.input.lastChild)&&\"BR\"==e.tagName||this.DOM.input.insertAdjacentHTML(\"beforeend\",\"<br>\");else{try{JSON.parse(t)instanceof Array&&(t=JSON.parse(t))}catch(t){}this.addTags(t,!0).forEach((t=>t&&t.classList.add(i.classNames.tagNoAnimation)))}else this.postUpdate();this.state.lastOriginalValueReported=i.mixMode.integrated?\"\":this.DOM.originalInput.value,this.state.blockChangeEvent=!1},cloneEvent(t){var e={};for(var i in t)\"path\"!=i&&(e[i]=t[i]);return e},loading(t){return this.state.isLoading=t,this.DOM.scope.classList[t?\"add\":\"remove\"](this.settings.classNames.scopeLoading),this},tagLoading(t,e){return t&&t.classList[e?\"add\":\"remove\"](this.settings.classNames.tagLoading),this},toggleClass(t,e){\"string\"==typeof t&&this.DOM.scope.classList.toggle(t,e)},toggleScopeValidation(t){var e=!0===t||void 0===t;!this.settings.required&&t&&t===this.TEXTS.empty&&(e=!0),this.toggleClass(this.settings.classNames.tagInvalid,!e),this.DOM.scope.title=e?\"\":t},toggleFocusClass(t){this.toggleClass(this.settings.classNames.focus,!!t)},triggerChangeEvent:function(){if(!this.settings.mixMode.integrated){var t=this.DOM.originalInput,e=this.state.lastOriginalValueReported!==t.value,i=new CustomEvent(\"change\",{bubbles:!0});e&&(this.state.lastOriginalValueReported=t.value,i.simulated=!0,t._valueTracker&&t._valueTracker.setValue(Math.random()),t.dispatchEvent(i),this.trigger(\"change\",this.state.lastOriginalValueReported),t.value=this.state.lastOriginalValueReported)}},events:O,fixFirefoxLastTagNoCaret(){},placeCaretAfterNode(t){if(t&&t.parentNode){var e=t,i=window.getSelection(),s=i.getRangeAt(0);i.rangeCount&&(s.setStartAfter(e||t),s.collapse(!0),i.removeAllRanges(),i.addRange(s))}},insertAfterTag(t,e){if(e=e||this.settings.mixMode.insertAfterTag,t&&t.parentNode&&e)return e=\"string\"==typeof e?document.createTextNode(e):e,t.parentNode.insertBefore(e,t.nextSibling),e},editTagChangeDetected(t){var e=t.__originalData;for(var i in e)if(!this.dataProps.includes(i)&&t[i]!=e[i])return!0;return!1},getTagTextNode(t){return t.querySelector(this.settings.classNames.tagTextSelector)},setTagTextNode(t,e){this.getTagTextNode(t).innerHTML=d(e)},editTag(t,e){t=t||this.getLastTag(),e=e||{},this.dropdown.hide();var i=this.settings,s=this.getTagTextNode(t),a=this.getNodeIndex(t),n=this.tagData(t),o=this.events.callbacks,r=this,l=!0;if(s){if(!(n instanceof Object&&\"editable\"in n)||n.editable)return n=this.tagData(t,{__originalData:g({},n),__originalHTML:t.cloneNode(!0)}),this.tagData(n.__originalHTML,n.__originalData),s.setAttribute(\"contenteditable\",!0),t.classList.add(i.classNames.tagEditing),s.addEventListener(\"focus\",o.onEditTagFocus.bind(this,t)),s.addEventListener(\"blur\",(function(){setTimeout((()=>o.onEditTagBlur.call(r,r.getTagTextNode(t))))})),s.addEventListener(\"input\",o.onEditTagInput.bind(this,s)),s.addEventListener(\"keydown\",(e=>o.onEditTagkeydown.call(this,e,t))),s.addEventListener(\"compositionstart\",o.onCompositionStart.bind(this)),s.addEventListener(\"compositionend\",o.onCompositionEnd.bind(this)),e.skipValidation||(l=this.editTagToggleValidity(t)),s.originalIsValid=l,this.trigger(\"edit:start\",{tag:t,index:a,data:n,isValid:l}),s.focus(),this.setRangeAtStartEnd(!1,s),this}else console.warn(\"Cannot find element in Tag template: .\",i.classNames.tagTextSelector)},editTagToggleValidity(t,e){var i;if(e=e||this.tagData(t))return(i=!(\"__isValid\"in e)||!0===e.__isValid)||this.removeTagsFromValue(t),this.update(),t.classList.toggle(this.settings.classNames.tagNotAllowed,!i),e.__isValid;console.warn(\"tag has no data: \",t,e)},onEditTagDone(t,e){e=e||{};var i={tag:t=t||this.state.editing.scope,index:this.getNodeIndex(t),previousData:this.tagData(t),data:e};this.trigger(\"edit:beforeUpdate\",i,{cloneData:!1}),this.state.editing=!1,delete e.__originalData,delete e.__originalHTML,t&&e[this.settings.tagTextProp]?(t=this.replaceTag(t,e),this.editTagToggleValidity(t,e),this.settings.a11y.focusableTags?t.focus():this.placeCaretAfterNode(t)):t&&this.removeTags(t),this.trigger(\"edit:updated\",i),this.dropdown.hide(),this.settings.keepInvalidTags&&this.reCheckInvalidTags()},replaceTag(t,e){e&&e.value||(e=t.__tagifyTagData),e.__isValid&&1!=e.__isValid&&g(e,this.getInvalidTagAttrs(e,e.__isValid));var i=this.createTagElem(e);return t.parentNode.replaceChild(i,t),this.updateValueByDOMTags(),i},updateValueByDOMTags(){this.value.length=0,[].forEach.call(this.getTagElms(),(t=>{t.classList.contains(this.settings.classNames.tagNotAllowed.split(\" \")[0])||this.value.push(this.tagData(t))})),this.update()},setRangeAtStartEnd(t,e){t=\"number\"==typeof t?t:!!t,e=(e=e||this.DOM.input).lastChild||e;var i=document.getSelection();try{i.rangeCount>=1&&[\"Start\",\"End\"].forEach((s=>i.getRangeAt(0)[\"set\"+s](e,t||e.length)))}catch(t){}},injectAtCaret(t,e){return!(e=e||this.state.selection?.range)&&t?(this.appendMixTags(t),this):(\"string\"==typeof t&&(t=document.createTextNode(t)),e.deleteContents(),e.insertNode(t),this.setRangeAtStartEnd(!1,t),this.updateValueByDOMTags(),this.update(),this)},input:{set(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];var i=this.settings.dropdown.closeOnSelect;this.state.inputText=t,e&&(this.DOM.input.innerHTML=d(\"\"+t)),!t&&i&&this.dropdown.hide.bind(this),this.input.autocomplete.suggest.call(this),this.input.validate.call(this)},raw(){return this.DOM.input.textContent},validate(){var t=!this.state.inputText||!0===this.validateTag({value:this.state.inputText});return this.DOM.input.classList.toggle(this.settings.classNames.inputInvalid,!t),t},normalize(t){var e=t||this.DOM.input,i=[];e.childNodes.forEach((t=>3==t.nodeType&&i.push(t.nodeValue))),i=i.join(\"\\n\");try{i=i.replace(/(?:\\r\\n|\\r|\\n)/g,this.settings.delimiters.source.charAt(0))}catch(t){}return i=i.replace(/\\s/g,\" \"),this.trim(i)},autocomplete:{suggest(t){if(this.settings.autoComplete.enabled){\"string\"==typeof(t=t||{})&&(t={value:t});var e=t.value?\"\"+t.value:\"\",i=e.substr(0,this.state.inputText.length).toLowerCase(),s=e.substring(this.state.inputText.length);e&&this.state.inputText&&i==this.state.inputText.toLowerCase()?(this.DOM.input.setAttribute(\"data-suggest\",s),this.state.inputSuggestion=t):(this.DOM.input.removeAttribute(\"data-suggest\"),delete this.state.inputSuggestion)}},set(t){var e=this.DOM.input.getAttribute(\"data-suggest\"),i=t||(e?this.state.inputText+e:null);return!!i&&(\"mix\"==this.settings.mode?this.replaceTextWithNode(document.createTextNode(this.state.tag.prefix+i)):(this.input.set.call(this,i),this.setRangeAtStartEnd()),this.input.autocomplete.suggest.call(this),this.dropdown.hide(),!0)}}},getTagIdx(t){return this.value.findIndex((e=>e.__tagId==(t||{}).__tagId))},getNodeIndex(t){var e=0;if(t)for(;t=t.previousElementSibling;)e++;return e},getTagElms(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];var s=\".\"+[...this.settings.classNames.tag.split(\" \"),...e].join(\".\");return[].slice.call(this.DOM.scope.querySelectorAll(s))},getLastTag(){var t=this.DOM.scope.querySelectorAll(`${this.settings.classNames.tagSelector}:not(.${this.settings.classNames.tagHide}):not([readonly])`);return t[t.length-1]},tagData:(t,e,i)=>t?(e&&(t.__tagifyTagData=i?e:g({},t.__tagifyTagData||{},e)),t.__tagifyTagData):(console.warn(\"tag element doesn't exist\",t,e),e),isTagDuplicate(t,e,i){var a=0;if(\"select\"==this.settings.mode)return!1;for(let n of this.value){s(this.trim(\"\"+t),n.value,e)&&i!=n.__tagId&&a++}return a},getTagIndexByValue(t){var e=[];return this.getTagElms().forEach(((i,a)=>{s(this.trim(i.textContent),t,this.settings.dropdown.caseSensitive)&&e.push(a)})),e},getTagElmByValue(t){var e=this.getTagIndexByValue(t)[0];return this.getTagElms()[e]},flashTag(t){t&&(t.classList.add(this.settings.classNames.tagFlash),setTimeout((()=>{t.classList.remove(this.settings.classNames.tagFlash)}),100))},isTagBlacklisted(t){return t=this.trim(t.toLowerCase()),this.settings.blacklist.filter((e=>(\"\"+e).toLowerCase()==t)).length},isTagWhitelisted(t){return!!this.getWhitelistItem(t)},getWhitelistItem(t,e,i){e=e||\"value\";var a,n=this.settings;return(i=i||n.whitelist).some((i=>{var o=\"string\"==typeof i?i:i[e]||i.value;if(s(o,t,n.dropdown.caseSensitive,n.trim))return a=\"string\"==typeof i?{value:i}:i,!0})),a||\"value\"!=e||\"value\"==n.tagTextProp||(a=this.getWhitelistItem(t,n.tagTextProp,i)),a},validateTag(t){var e=this.settings,i=\"value\"in t?\"value\":e.tagTextProp,s=this.trim(t[i]+\"\");return(t[i]+\"\").trim()?e.pattern&&e.pattern instanceof RegExp&&!e.pattern.test(s)?this.TEXTS.pattern:!e.duplicates&&this.isTagDuplicate(s,e.dropdown.caseSensitive,t.__tagId)?this.TEXTS.duplicate:this.isTagBlacklisted(s)||e.enforceWhitelist&&!this.isTagWhitelisted(s)?this.TEXTS.notAllowed:!e.validate||e.validate(t):this.TEXTS.empty},getInvalidTagAttrs(t,e){return{\"aria-invalid\":!0,class:`${t.class||\"\"} ${this.settings.classNames.tagNotAllowed}`.trim(),title:e}},hasMaxTags(){return this.value.length>=this.settings.maxTags&&this.TEXTS.exceed},setReadonly(t,e){var i=this.settings;document.activeElement.blur(),i[e||\"readonly\"]=t,this.DOM.scope[(t?\"set\":\"remove\")+\"Attribute\"](e||\"readonly\",!0),this.setContentEditable(!t)},setContentEditable(t){this.settings.userInput&&(this.DOM.input.contentEditable=t,this.DOM.input.tabIndex=t?0:-1)},setDisabled(t){this.setReadonly(t,\"disabled\")},normalizeTags(t){var e=this.settings,i=e.whitelist,s=e.delimiters,a=e.mode,n=e.tagTextProp;e.enforceWhitelist;var o=[],r=!!i&&i[0]instanceof Object,l=Array.isArray(t),d=l&&t[0].value,h=t=>(t+\"\").split(s).filter((t=>t)).map((t=>({[n]:this.trim(t),value:this.trim(t)})));if(\"number\"==typeof t&&(t=t.toString()),\"string\"==typeof t){if(!t.trim())return[];t=h(t)}else l&&(t=[].concat(...t.map((t=>t.value?t:h(t)))));return r&&!d&&(t.forEach((t=>{var e=o.map((t=>t.value)),i=this.dropdown.filterListItems.call(this,t[n],{exact:!0});this.settings.duplicates||(i=i.filter((t=>!e.includes(t.value))));var s=i.length>1?this.getWhitelistItem(t[n],n,i):i[0];s&&s instanceof Object?o.push(s):\"mix\"!=a&&(null==t.value&&(t.value=t[n]),o.push(t))})),o.length&&(t=o)),t},parseMixTags(t){var e=this.settings,i=e.mixTagsInterpolator,s=e.duplicates,a=e.transformTag,n=e.enforceWhitelist,o=e.maxTags,r=e.tagTextProp,l=[];return t=t.split(i[0]).map(((t,e)=>{var d,h,g,p=t.split(i[1]),c=p[0],u=l.length==o;try{if(c==+c)throw Error;h=JSON.parse(c)}catch(t){h=this.normalizeTags(c)[0]||{value:c}}if(a.call(this,h),u||!(p.length>1)||n&&!this.isTagWhitelisted(h.value)||!s&&this.isTagDuplicate(h.value)){if(t)return e?i[0]+t:t}else h[d=h[r]?r:\"value\"]=this.trim(h[d]),g=this.createTagElem(h),l.push(h),g.classList.add(this.settings.classNames.tagNoAnimation),p[0]=g.outerHTML,this.value.push(h);return p.join(\"\")})).join(\"\"),this.DOM.input.innerHTML=t,this.DOM.input.appendChild(document.createTextNode(\"\")),this.DOM.input.normalize(),this.getTagElms().forEach(((t,e)=>this.tagData(t,l[e]))),this.update({withoutChangeEvent:!0}),t},replaceTextWithNode(t,e){if(this.state.tag||e){e=e||this.state.tag.prefix+this.state.tag.value;var i,s,a=this.state.selection||window.getSelection(),n=a.anchorNode,o=this.state.tag.delimiters?this.state.tag.delimiters.length:0;return n.splitText(a.anchorOffset-o),-1==(i=n.nodeValue.lastIndexOf(e))?!0:(s=n.splitText(i),t&&n.parentNode.replaceChild(t,s),!0)}},selectTag(t,e){var i=this.settings;if(!i.enforceWhitelist||this.isTagWhitelisted(e.value)){this.input.set.call(this,e[i.tagTextProp]||e.value,!0),this.state.actions.selectOption&&setTimeout(this.setRangeAtStartEnd.bind(this));var s=this.getLastTag();return s?this.replaceTag(s,e):this.appendTag(t),this.value[0]=e,this.update(),this.trigger(\"add\",{tag:t,data:e}),[t]}},addEmptyTag(t){var e=g({value:\"\"},t||{}),i=this.createTagElem(e);this.tagData(i,e),this.appendTag(i),this.editTag(i,{skipValidation:!0})},addTags(t,e,i){var s=[],a=this.settings,n=[],o=document.createDocumentFragment();if(i=i||a.skipInvalid,!t||0==t.length)return s;switch(t=this.normalizeTags(t),a.mode){case\"mix\":return this.addMixTags(t);case\"select\":e=!1,this.removeAllTags()}return this.DOM.input.removeAttribute(\"style\"),t.forEach((t=>{var e,r={},l=Object.assign({},t,{value:t.value+\"\"});if(t=Object.assign({},l),a.transformTag.call(this,t),t.__isValid=this.hasMaxTags()||this.validateTag(t),!0!==t.__isValid){if(i)return;if(g(r,this.getInvalidTagAttrs(t,t.__isValid),{__preInvalidData:l}),t.__isValid==this.TEXTS.duplicate&&this.flashTag(this.getTagElmByValue(t.value)),!a.createInvalidTags)return void n.push(t.value)}if(\"readonly\"in t&&(t.readonly?r[\"aria-readonly\"]=!0:delete t.readonly),e=this.createTagElem(t,r),s.push(e),\"select\"==a.mode)return this.selectTag(e,t);o.appendChild(e),t.__isValid&&!0===t.__isValid?(this.value.push(t),this.trigger(\"add\",{tag:e,index:this.value.length-1,data:t})):(this.trigger(\"invalid\",{data:t,index:this.value.length,tag:e,message:t.__isValid}),a.keepInvalidTags||setTimeout((()=>this.removeTags(e,!0)),1e3)),this.dropdown.position()})),this.appendTag(o),this.update(),t.length&&e&&(this.input.set.call(this,a.createInvalidTags?\"\":n.join(a._delimiters)),this.setRangeAtStartEnd()),a.dropdown.enabled&&this.dropdown.refilter(),s},addMixTags(t){if((t=this.normalizeTags(t))[0].prefix||this.state.tag)return this.prefixedTextToTag(t[0]);\"string\"==typeof t&&(t=[{value:t}]),this.state.selection;var e=document.createDocumentFragment();return t.forEach((t=>{var i=this.createTagElem(t);e.appendChild(i),this.insertAfterTag(i)})),this.appendMixTags(e),e},appendMixTags(t){var e=!!this.state.selection;e?this.injectAtCaret(t):(this.DOM.input.focus(),(e=this.setStateSelection()).range.setStart(this.DOM.input,e.range.endOffset),e.range.setEnd(this.DOM.input,e.range.endOffset),this.DOM.input.appendChild(t),this.updateValueByDOMTags(),this.update())},prefixedTextToTag(t){var e,i=this.settings,s=this.state.tag.delimiters;if(i.transformTag.call(this,t),t.prefix=t.prefix||this.state.tag?this.state.tag.prefix:(i.pattern.source||i.pattern)[0],e=this.createTagElem(t),this.replaceTextWithNode(e)||this.DOM.input.appendChild(e),setTimeout((()=>e.classList.add(this.settings.classNames.tagNoAnimation)),300),this.value.push(t),this.update(),!s){var a=this.insertAfterTag(e)||e;this.placeCaretAfterNode(a)}return this.state.tag=null,this.trigger(\"add\",g({},{tag:e},{data:t})),e},appendTag(t){var e=this.DOM,i=e.input;i===e.input?e.scope.insertBefore(t,i):e.scope.appendChild(t)},createTagElem(t,i){t.__tagId=m();var s,a=g({},t,e({value:d(t.value+\"\")},i));return function(t){for(var e,i=document.createNodeIterator(t,NodeFilter.SHOW_TEXT,null,!1);e=i.nextNode();)e.textContent.trim()||e.parentNode.removeChild(e)}(s=this.parseTemplate(\"tag\",[a,this])),this.tagData(s,t),s},reCheckInvalidTags(){var t=this.settings;this.getTagElms(t.classNames.tagNotAllowed).forEach(((e,i)=>{var s=this.tagData(e),a=this.hasMaxTags(),n=this.validateTag(s),o=!0===n&&!a;if(\"select\"==t.mode&&this.toggleScopeValidation(n),o)return s=s.__preInvalidData?s.__preInvalidData:{value:s.value},this.replaceTag(e,s);e.title=a||n}))},removeTags(t,e,i){var s,a=this.settings;if(t=t&&t instanceof HTMLElement?[t]:t instanceof Array?t:t?[t]:[this.getLastTag()],s=t.reduce(((t,e)=>{e&&\"string\"==typeof e&&(e=this.getTagElmByValue(e));var i=this.tagData(e);return e&&i&&!i.readonly&&t.push({node:e,idx:this.getTagIdx(i),data:this.tagData(e,{__removed:!0})}),t}),[]),i=\"number\"==typeof i?i:this.CSSVars.tagHideTransition,\"select\"==a.mode&&(i=0,this.input.set.call(this)),1==s.length&&\"select\"!=a.mode&&s[0].node.classList.contains(a.classNames.tagNotAllowed)&&(e=!0),s.length)return a.hooks.beforeRemoveTag(s,{tagify:this}).then((()=>{function t(t){t.node.parentNode&&(t.node.parentNode.removeChild(t.node),e?a.keepInvalidTags&&this.trigger(\"remove\",{tag:t.node,index:t.idx}):(this.trigger(\"remove\",{tag:t.node,index:t.idx,data:t.data}),this.dropdown.refilter(),this.dropdown.position(),this.DOM.input.normalize(),a.keepInvalidTags&&this.reCheckInvalidTags()))}i&&i>10&&1==s.length?function(e){e.node.style.width=parseFloat(window.getComputedStyle(e.node).width)+\"px\",document.body.clientTop,e.node.classList.add(a.classNames.tagHide),setTimeout(t.bind(this),i,e)}.call(this,s[0]):s.forEach(t.bind(this)),e||(this.removeTagsFromValue(s.map((t=>t.node))),this.update(),\"select\"==a.mode&&this.setContentEditable(!0))})).catch((t=>{}))},removeTagsFromDOM(){[].slice.call(this.getTagElms()).forEach((t=>t.parentNode.removeChild(t)))},removeTagsFromValue(t){(t=Array.isArray(t)?t:[t]).forEach((t=>{var e=this.tagData(t),i=this.getTagIdx(e);i>-1&&this.value.splice(i,1)}))},removeAllTags(t){t=t||{},this.value=[],\"mix\"==this.settings.mode?this.DOM.input.innerHTML=\"\":this.removeTagsFromDOM(),this.dropdown.refilter(),this.dropdown.position(),this.state.dropdown.visible&&setTimeout((()=>{this.DOM.input.focus()})),\"select\"==this.settings.mode&&(this.input.set.call(this),this.setContentEditable(!0)),this.update(t)},postUpdate(){var t=this.settings,e=t.classNames,i=\"mix\"==t.mode?t.mixMode.integrated?this.DOM.input.textContent:this.DOM.originalInput.value.trim():this.value.length+this.input.raw.call(this).length;this.toggleClass(e.hasMaxTags,this.value.length>=t.maxTags),this.toggleClass(e.hasNoTags,!this.value.length),this.toggleClass(e.empty,!i),\"select\"==t.mode&&this.toggleScopeValidation(this.value?.[0]?.__isValid)},setOriginalInputValue(t){var e=this.DOM.originalInput;this.settings.mixMode.integrated||(e.value=t,e.tagifyValue=e.value,this.setPersistedData(t,\"value\"))},update(t){var e=this.getInputValue();this.setOriginalInputValue(e),this.postUpdate(),this.settings.onChangeAfterBlur&&(t||{}).withoutChangeEvent||this.state.blockChangeEvent||this.triggerChangeEvent()},getInputValue(){var t=this.getCleanValue();return\"mix\"==this.settings.mode?this.getMixedTagsAsString(t):t.length?this.settings.originalInputValueFormat?this.settings.originalInputValueFormat(t):JSON.stringify(t):\"\"},getCleanValue(t){return a(t||this.value,this.dataProps)},getMixedTagsAsString(){var t=\"\",e=this,i=this.settings,s=i.originalInputValueFormat||JSON.stringify,a=i.mixTagsInterpolator;return function i(o){o.childNodes.forEach((o=>{if(1==o.nodeType){const r=e.tagData(o);if(\"BR\"==o.tagName&&(t+=\"\\r\\n\"),r&&v.call(e,o)){if(r.__removed)return;t+=a[0]+s(n(r,e.dataProps))+a[1]}else o.getAttribute(\"style\")||[\"B\",\"I\",\"U\"].includes(o.tagName)?t+=o.textContent:\"DIV\"!=o.tagName&&\"P\"!=o.tagName||(t+=\"\\r\\n\",i(o))}else t+=o.textContent}))}(this.DOM.input),t}},M.prototype.removeTag=M.prototype.removeTags,M}));\n","import Tagify from \"@yaireo/tagify\";\r\n\r\n/**\r\n * @param {HTMLInputElement} input \r\n * @param {Object} options\r\n * @param {Object} options.whitelist\r\n * @param {number} options.maxTags\r\n * @param {boolean} options.enforceWhitelist \r\n */\r\nfunction tagify(input: HTMLInputElement, { whitelist, maxTags, enforceWhitelist = true, traits = false }: { whitelist?: any, maxTags?: any, enforceWhitelist?: boolean, traits?: boolean } = {}) {\r\n    if (input?.hasAttribute(\"name\") && input.dataset.dtype !== \"JSON\") {\r\n        throw Error(\"Usable only on input elements with JSON data-dtype\");\r\n    } else if (!input) {\r\n        return null;\r\n    }\r\n\r\n    const whitelistTransformed = whitelist; //? transformWhitelist(whitelist) : [];\r\n    const maxItems = whitelist ? Object.keys(whitelistTransformed).length : undefined;\r\n\r\n    const tagify = new Tagify(input, {\r\n        enforceWhitelist: !!whitelist && enforceWhitelist,\r\n        keepInvalidTags: false,\r\n        skipInvalid: !!whitelist,\r\n        maxTags: maxTags ?? maxItems,\r\n        dropdown: {\r\n            enabled: 0,\r\n            maxItems,\r\n            searchKeys: [\"id\", \"value\"],\r\n        },\r\n        whitelist: whitelistTransformed,\r\n        templates: {\r\n            tag(tagData, { settings: _s }) {\r\n                return `<tag title=\"${(tagData.title || tagData.value)}\"\r\n                            contenteditable='false'\r\n                            spellcheck='false'\r\n                            tabIndex=\"${_s.a11y.focusableTags ? 0 : -1}\"\r\n                            class=\"${_s.classNames.tag} ${tagData.class || \"\"}\"\r\n                            ${this.getAttributes(tagData)}>\r\n                    <x title='' class=\"${_s.classNames.tagX}\" role='button' aria-label='remove tag'></x>\r\n                    <div>\r\n                        <span class=\"${_s.classNames.tagText}\">${traits ? '[' : ''}${tagData[_s.tagTextProp] || tagData.value}${traits ? ']' : ''}</span>\r\n                    </div>\r\n                </tag>`\r\n            }\r\n        }\r\n    });\r\n\r\n    // Add the name to the tags html as an indicator for refreshing\r\n    if (input.name) {\r\n        tagify.DOM.scope.dataset.name = input.name;\r\n    }\r\n\r\n    // Work around a tagify bug on Firefox\r\n    // https://github.com/yairEO/tagify/issues/1115\r\n    tagify.DOM.input.blur();\r\n\r\n    return tagify;\r\n}\r\n\r\nexport { tagify }","export function registerTemplates() {\r\n    const templates = {\r\n        \"stats-chart\": \"systems/ptr2e/templates/partials/actor/stats-chart.hbs\",\r\n        \"actor-movement\": \"systems/ptr2e/templates/partials/actor/movement.hbs\",\r\n        \"actor-gear\": \"systems/ptr2e/templates/partials/actor/gear.hbs\",\r\n        \"actor-abilities\": \"systems/ptr2e/templates/partials/actor/abilities.hbs\",\r\n        \"actor-skills\": \"systems/ptr2e/templates/partials/actor/skills.hbs\",\r\n        \"actor-actions\": \"systems/ptr2e/templates/partials/actor/actions.hbs\",\r\n    }\r\n\r\n    return loadTemplates(Object.values(templates)).then(() => {\r\n        for (const [key, value] of Object.entries(templates)) {\r\n            Handlebars.registerPartial(key, `{{> ${value}}}`);\r\n        }\r\n    });\r\n};","import { ActorPTR2e } from \"@actor\";\r\nimport { StatsChart } from \"@actor/sheets/stats-chart.mjs\";\r\nimport { tagify } from \"@utils\";\r\n\r\nclass ActorSheetPTR2e extends ActorSheet<ActorPTR2e> {\r\n\r\n    constructor(actor: ActorPTR2e, options: Partial<ActorSheetOptions>) {\r\n        super(actor, options);\r\n        this._statsChart = new StatsChart(this);\r\n        this.tab = ActorSheetPTR2e.defaultOptions.tabs[0].initial;\r\n    }\r\n\r\n    static override get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: ['ptr2e', 'sheet', 'actor'],\r\n            template: 'systems/ptr2e/templates/actor/actor-sheet.hbs',\r\n            width: 900,\r\n            height: 660,\r\n            tabs: [{\r\n                group: \"primary\",\r\n                navSelector: '.tabs',\r\n                contentSelector: '.sheet-body',\r\n                initial: 'summary',\r\n            }],\r\n            submitOnClose: true,\r\n            submitOnChange: true,\r\n            scrollY: [\".sheet-body\"]\r\n        });\r\n    }\r\n\r\n    override async close(options = {}): Promise<void> {\r\n        if (game.ptr.tree.actor === this.actor) { this.minimize(); return; }\r\n        return super.close(options);\r\n    }\r\n\r\n    override _onChangeTab(event: MouseEvent, tabs: Tabs, active: string): void {\r\n        this.tab = active;\r\n\r\n        return super._onChangeTab(event, tabs, active);\r\n    }\r\n\r\n    override getData() {\r\n        const data: Record<string, any> = super.getData();\r\n        data.party = game.actors.filter(a => a != this.actor); //TODO: change\r\n        data.activeTab = this.tab;\r\n        return data as ActorSheetData<ActorPTR2e>;\r\n    }\r\n\r\n    override activateListeners($html: JQuery<HTMLElement>) {\r\n        super.activateListeners($html);\r\n\r\n        this._statsChart.render();\r\n\r\n        for (const taggifyElement of $html.find(\".ptr-tagify\")) {\r\n            tagify(taggifyElement as HTMLInputElement, { traits: $(taggifyElement).hasClass(\"system-traits\") });\r\n        }\r\n\r\n        //const actor = this.actor;\r\n        // for (const tooltipElement of $html.find(\".ptr-trait\")) {\r\n        //     $(tooltipElement).tooltipster({\r\n        //         contentAsHTML: true,\r\n        //         interactive: true,\r\n        //         content: 'Loading...',\r\n        //         functionInit: function (origin, _content) {\r\n        //             const trait = actor.traits.find((t: { slug: string | undefined; }) => t.slug === tooltipElement.dataset.trait);\r\n        //             if (trait.description || trait.related.length > 0) {\r\n        //                 renderTemplate(\"systems/ptr2e/templates/partials/trait-tooltip.hbs\", { trait })\r\n        //                     .then(html =>\r\n        //                         origin.content(html)\r\n        //                     );\r\n        //             }\r\n        //         },\r\n        //         functionReady: function (_origin, content) {\r\n        //             // @ts-ignore\r\n        //             $(content.tooltip).find(\".keyword\").tooltipster({\r\n        //                 position: \"right\",\r\n        //                 contentAsHTML: true,\r\n        //                 content: 'This is where the creature-type keyword explanation would go and if you click it it will open the full view instead of the...',\r\n        //             })\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n        // @ts-ignore\r\n        $html.find(\".ptr-perk-tree\").on(\"click\", () => this.actor.togglePerkTree());\r\n    }\r\n}\r\n\r\ninterface ActorSheetPTR2e extends ActorSheet<ActorPTR2e> {\r\n    _statsChart: StatsChart\r\n    tab: string\r\n}\r\n\r\nexport { ActorSheetPTR2e }","import { sluggify } from \"@utils\";\r\nimport { ActorPTR2e } from \"@actor\";\r\nimport { ItemSystemPTR2e } from \"@item\";\r\nimport { ItemSheetPTR2e } from \"@item/base/sheet.ts\";\r\n\r\n/**\r\n * @extends {PTRItemData}\r\n */\r\nclass ItemPTR2e<TSystem extends ItemSystemPTR2e = ItemSystemPTR2e, TParent extends ActorPTR2e | null = ActorPTR2e | null> extends Item<TParent, TSystem> {\r\n    get slug() {\r\n        return this.system.slug || sluggify(this.name);\r\n    }\r\n}\r\n\r\ninterface ItemPTR2e<TSystem extends ItemSystemPTR2e = ItemSystemPTR2e, TParent extends ActorPTR2e | null = ActorPTR2e | null> extends Item<TParent, TSystem> {\r\n    constructor: typeof ItemPTR2e;\r\n\r\n    _sheet: ItemSheetPTR2e<this> | null;\r\n    get sheet(): ItemSheetPTR2e<this>;\r\n}\r\n\r\nexport { ItemPTR2e }","import { ActionPTR2e, ItemPTR2e } from \"@item\";\r\nimport { sluggify } from \"@utils\";\r\n\r\nclass ItemSystemPTR2e extends foundry.abstract.TypeDataModel {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return {\r\n            slug: new fields.StringField({ required: true }),\r\n            container: new fields.ForeignDocumentField(ItemPTR2e, { required: false, nullable: true }),\r\n            actions: new fields.ArrayField(new fields.EmbeddedDataField(ActionPTR2e)),\r\n            description: new fields.HTMLField({ required: false, nullable: true }),\r\n            traits: new fields.SetField(new fields.StringField()),\r\n        }\r\n    }\r\n\r\n    override prepareBaseData() {\r\n        this.slug ??= sluggify(this.name ?? \"\");\r\n    }\r\n\r\n    get name() {\r\n        return this.parent?.name;\r\n    }\r\n}\r\n\r\ninterface ItemSystemPTR2e extends foundry.abstract.TypeDataModel {\r\n    slug: string\r\n\r\n    actions: Record<string, ActionPTR2e>\r\n    container: ItemPTR2e | null\r\n    description: string\r\n    traits: Trait[]\r\n\r\n    parent: ItemPTR2e | null;\r\n}\r\n\r\nexport { ItemSystemPTR2e }","import { ItemSystemPTR2e, ItemPTR2e } from \"@item\";\r\nimport { TimeDuration, ItemGrade, IdentificationSource, ItemRarity, ItemCarryType } from \"@item/base/data.ts\";\r\n\r\nclass GearSystemPTR2e extends ItemSystemPTR2e {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return Object.assign(super.defineSchema(), {\r\n            cost: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            crafting: new fields.SchemaField({\r\n                skill: new fields.StringField({ required: true, initial: \"accounting\" }),\r\n                time: new fields.SchemaField({\r\n                    value: new fields.NumberField({ required: true, initial: 1, validate: (d) => d as number >= 0 }),\r\n                    unit: new fields.StringField({ required: true, initial: \"hours\", choices: [\"seconds\", \"minutes\", \"hours\", \"days\", \"weeks\", \"months\", \"years\"] })\r\n                })\r\n            }),\r\n            equipped: new fields.EmbeddedDataField(EquipmentData),\r\n            grade: new fields.StringField({\r\n                required: true,\r\n                initial: \"E\",\r\n                choices: [\"E\", \"E+\", \"D-\", \"D\", \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\", \"S-\", \"S\", \"S+\"]\r\n            }),\r\n            identification: new fields.SchemaField({\r\n                misidentified: new fields.ForeignDocumentField(ItemPTR2e, { required: false, nullable: true }),\r\n                status: new fields.StringField({ required: true, initial: \"identified\", choices: [\"identified\", \"unidentified\", \"misidentified\"] }),\r\n                unidentified: new fields.SchemaField({\r\n                    name: new fields.StringField({ required: true, initial: \"Unidentified Item\" }),\r\n                    img: new fields.FilePathField({ required: true, categories: [\"IMAGE\", \"MEDIA\", \"VIDEO\"], initial: \"systems/ptu/css/images/icons/item_icon.png\" }),\r\n                    description: new fields.HTMLField({ required: true, initial: \"<p>Unidentified Item</p>\" }),\r\n                })\r\n            }),\r\n            quantity: new fields.NumberField({ required: true, initial: 1, validate: (d) => d as number >= 0 }),\r\n            rarity: new fields.StringField({\r\n                required: true,\r\n                initial: \"common\",\r\n                choices: [\"common\", \"uncommon\", \"rare\", \"unique\"]\r\n            }),\r\n        })\r\n    }\r\n}\r\n\r\ninterface GearSystemPTR2e extends ItemSystemPTR2e {\r\n    cost: number,\r\n    crafting: {\r\n        skill: PTRSkill,\r\n        time: TimeDuration,\r\n    },\r\n    equipped: EquippedData,\r\n    grade: ItemGrade,\r\n    identification: IdentificationSource,\r\n    quantity: number,\r\n    rarity: ItemRarity,\r\n}\r\n\r\nclass EquipmentData extends foundry.abstract.DataModel {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return {\r\n            carryType: new fields.StringField({ required: true, initial: \"stowed\", choices: [\"stowed\", \"held\", \"worn\", \"dropped\"] }),\r\n            handsHeld: new fields.NumberField({ required: false, nullable: true, validate: (d) => d as number >= 0 }),\r\n        }\r\n    }\r\n}\r\n\r\ninterface EquippedData extends foundry.abstract.DataModel{\r\n    carryType: ItemCarryType,\r\n    handsHeld?: number,\r\n}\r\n\r\nexport { GearSystemPTR2e, EquipmentData }","export const FLAT_HEX_BORDERS = {\r\n    0.5: [[0, 0.5], [0.25, 0], [0.75, 0], [1, 0.5], [0.75, 1], [0.25, 1]],\r\n    1: [[0, 0.5], [0.25, 0], [0.75, 0], [1, 0.5], [0.75, 1], [0.25, 1]],\r\n    2: [\r\n        [3 / 7, .25], [4 / 7, 0], [6 / 7, 0], [1, .25], [6 / 7, .5], [1, .75], [6 / 7, 1], [4 / 7, 1], [3 / 7, .75], [1 / 7, .75],\r\n        [0, .5], [1 / 7, .25]\r\n    ],\r\n    3: [\r\n        [.4, 0], [.6, 0], [.7, 1 / 6], [.9, 1 / 6], [1, 1 / 3], [.9, .5], [1, 2 / 3], [.9, 5 / 6], [.7, 5 / 6], [.6, 1], [.4, 1],\r\n        [.3, 5 / 6], [.1, 5 / 6], [0, 2 / 3], [.1, .5], [0, 1 / 3], [.1, 1 / 6], [.3, 1 / 6]\r\n    ],\r\n    4: [\r\n        [6 / 13, 0], [7 / 13, 1 / 8], [9 / 13, 1 / 8], [10 / 13, .25], [12 / 13, .25], [1, 3 / 8], [12 / 13, .5], [1, 5 / 8], [12 / 13, .75],\r\n        [10 / 13, .75], [9 / 13, 7 / 8], [7 / 13, 7 / 8], [6 / 13, 1], [4 / 13, 1], [3 / 13, 7 / 8], [1 / 13, 7 / 8], [0, .75], [1 / 13, 5 / 8],\r\n        [0, .5], [1 / 13, 3 / 8], [0, .25], [1 / 13, 1 / 8], [3 / 13, 1 / 8], [4 / 13, 0]\r\n    ]\r\n};","export default class PTRPerkTreeIcon extends PIXI.Container {\r\n    constructor(config) {\r\n        super();\r\n\r\n        this.config = Object.assign({\r\n            alpha: 0.8,\r\n            backgroundColour: 0x000000,\r\n            size: 50,\r\n            tint: 0xFFFFFF\r\n        }, config);\r\n\r\n        // Icon Background\r\n        this.background = this.addChild(new PIXI.Graphics());\r\n\r\n        // Icon Sprite\r\n        this.icon = this.addChild(new PIXI.Sprite());\r\n        this.icon.anchor.set(0.5, 0.5);\r\n        this.icon.mask = this.addChild(new PIXI.Graphics());\r\n\r\n        // Border Color\r\n        this.border = this.addChild(new PIXI.Graphics());\r\n\r\n        // Number\r\n        this.number = this.addChild(new PreciseText(\"\", PreciseText.getTextStyle({ fontSize: 26 })));\r\n        this.number.anchor.set(0.5, 0.5);\r\n        \r\n    }\r\n\r\n    async draw(config = {}) {\r\n        const { backgroundColour, alpha, size, borderRadius, texture, tint, text } = Object.assign(this.config, config);\r\n\r\n        // Icon Shape\r\n        this.shape = this._getShape(size, borderRadius);\r\n        this.background.clear().beginFill(backgroundColour, alpha).drawShape(this.shape).endFill();\r\n\r\n        // Draw Icon\r\n        this.icon.texture = texture;\r\n        this.icon.width = this.icon.height = size;\r\n        this.icon.alpha = alpha ?? 1;\r\n        this.icon.tint = tint ?? 0x000000;\r\n\r\n        // Draw Icon Mask\r\n        this._drawMask();\r\n\r\n        // Draw Border\r\n        this._drawBorder();\r\n\r\n        // Draw Number\r\n        this.number.text = text ?? \"\";\r\n        this.number.visible = !!text;\r\n\r\n        // Interactive Hit Area\r\n        this.hitArea = new PIXI.Rectangle(size / -2, size / -2, size, size);\r\n    }\r\n\r\n    _getShape(size = this.config.size, borderRadius = this.borderRadius.size) {\r\n        return new PIXI.RoundedRectangle(size / -2, size / -2, size, size, borderRadius);\r\n    }\r\n\r\n    _drawMask() {\r\n        this.icon.mask.clear().beginFill(0xFFFFFF).drawShape(this.shape).endFill();\r\n    }\r\n\r\n    _drawBorder(borderColor = this.config.borderColor, borderWidth = this.config.borderWidth) {\r\n        this.border.clear().lineStyle({ width: borderWidth, color: borderColor, alignment: 1 }).drawShape(this.shape);\r\n    }\r\n}","import { FLAT_HEX_BORDERS } from \"../../../scripts/config/hex.ts\";\r\nimport PTRPerk from \"../../item/perk/system.ts\";\r\nimport PTRPerkTreeIcon from \"./perk-tree-icon.mjs\";\r\n\r\nclass PTRPerkTreeNode extends PTRPerkTreeIcon {\r\n    constructor(node, config) {\r\n        super(config)\r\n        this.node = node;\r\n        this.position.set(node.point.x, node.point.y)\r\n    }\r\n\r\n    get active() {\r\n        return game.ptr.tree.active === this;\r\n    }\r\n\r\n    get editMode() {\r\n        return game.ptr.tree.editNode === this;\r\n    }\r\n\r\n    async draw(config = {}) {\r\n        const textureSrc = config.texture ?? this.node.texture ?? \"\";\r\n        if (textureSrc) {\r\n            config.texture = getTexture(textureSrc);\r\n            config.texture ??= await loadTexture(textureSrc);\r\n        }\r\n\r\n        if (this.node.type === \"root\") {\r\n            config.size = 80;\r\n            config.borderRadius = 80;\r\n        }\r\n\r\n        // Temporary\r\n        config.alpha = 1;\r\n        config.borderColor = this.node.color;\r\n        config.borderWidth = 3;\r\n\r\n        // Draw Icon\r\n        await super.draw(config);\r\n\r\n        // Setup Interactivity\r\n        this._activateInteraction();\r\n    }\r\n\r\n    _getShape() {\r\n        const size = this.config.size;\r\n        const halfSize = size / 2;\r\n\r\n        // Hexagons are the bestagons\r\n        if (this.node.type === \"root\") {\r\n            const width = size;\r\n            const height = size * Math.sqrt(3) / 2;\r\n            const points = FLAT_HEX_BORDERS[1].reduce((arr, [ox, oy]) => {\r\n                arr.push((ox * width) - (width / 2));\r\n                arr.push((oy * height) - (height / 2));\r\n                return arr;\r\n            }, []);\r\n            return new PIXI.Polygon(points);\r\n        }\r\n\r\n        // Circle\r\n        return new PIXI.Circle(0, 0, halfSize);\r\n    }\r\n\r\n    _activateInteraction() {\r\n        this.removeAllListeners();\r\n        this.on(\"pointerover\", this.#onPointerOver.bind(this));\r\n        this.on(\"pointerout\", this.#onPointerOut.bind(this));\r\n        this.on(\"pointerdown\", this.#onClick.bind(this));\r\n        this.on(\"pointerup\", this.#onClickLeftEnd.bind(this));\r\n        this.on(\"globalpointermove\", this.#onPointerMove.bind(this));\r\n        this.eventMode = \"static\";\r\n        this.cursor = \"pointer\";\r\n    }\r\n\r\n    async _updatePosition({ x, y, visible } = this.position) {\r\n        if (this.originalPosition?.equals({ x, y })) return;\r\n\r\n        // Update Ray\r\n        const angle = Math.toDegrees(Math.atan2(y, x));\r\n        const distance = Math.sqrt(x ** 2 + y ** 2);\r\n\r\n        // Update position\r\n        const ray = Ray.fromAngle(0, 0, Math.toRadians(angle), distance);\r\n        this.node.point = ray.B;\r\n\r\n        // Save changes to perk\r\n        const data = { angle, distance };\r\n        if (visible !== undefined) data.visible = visible;\r\n        await this.node.perk.update({ \"system.node\": data });\r\n\r\n        // Redraw edges\r\n        game.ptr.tree.refresh({ nodeRefresh: true });\r\n    }\r\n\r\n    #onClick(event) {\r\n        event.stopPropagation();\r\n\r\n        // Right click\r\n        if (event.data.button === 2) return this.#onClickRight(event);\r\n        // Left click\r\n        if (event.data.button === 0) return this.#onClickLeft(event);\r\n    }\r\n\r\n    #onClickRight(event) {\r\n        if (!game.ptr.tree.editMode) return;\r\n        if (game.ptr.tree.editNode && game.ptr.tree.editNode !== this) return this.#handleConnectionEdit(event);\r\n\r\n        // Toggle connection edit mode\r\n        game.ptr.tree.toggleEditNode(this);\r\n\r\n        if (this.editMode) {\r\n            this.scale.set(1.2, 1.2);\r\n            this._drawBorder(0x00FF00);\r\n        }\r\n        else {\r\n            this.scale.set(1.0, 1.0);\r\n            this._drawBorder();\r\n        }\r\n    }\r\n\r\n    async #handleConnectionEdit(event) {\r\n        const node = game.ptr.tree.editNode;\r\n        if (!node || node === this) return;\r\n\r\n        switch (event.data.button) {\r\n            case 0: { // Left click add connection\r\n                if (this.node.connected.has(node.node)) return; // Already connected\r\n                if (this.node.type === \"root\" && node.node.type === \"root\") return; // Can't connect two roots\r\n\r\n                const connectNodes = (nodeA, nodeB) => {\r\n                    const connections = new Set(nodeA.node.perk._source.system.node.connected);\r\n                    connections.add(nodeB.node.id);\r\n                    return nodeA.node.perk.update({ \"system.node.connected\": [...connections] });\r\n                }\r\n                \r\n                if(this.node.type === \"root\") await connectNodes(node, this);\r\n                else await connectNodes(this, node);\r\n\r\n                break;\r\n            }\r\n            case 2: { // Right click remove connection\r\n                if (!this.node.connected.has(node.node)) return; // Not connected\r\n\r\n                // Remove ethereal connection\r\n                this.node.connected.delete(node.node);\r\n                node.node.connected.delete(this.node);\r\n\r\n                const connections = new Set(this.node.perk._source.system.node.connected);\r\n                // Check if this node is connected to the other node\r\n                if (!connections.has(node.node.id)) { // If not, check if the other node is connected to this node\r\n                    const otherConnections = new Set(node.node.perk._source.system.node.connected);\r\n                    if (!otherConnections.has(this.node.id)) return; // If not, return, something went wrong.\r\n\r\n                    // Delete the connection from the other node\r\n                    otherConnections.delete(this.node.id);\r\n                    await node.node.perk.update({ \"system.node.connected\": [...otherConnections] });\r\n                    break;\r\n                }\r\n\r\n                // Delete the connection from this node\r\n                connections.delete(node.node.id);\r\n                await this.node.perk.update({ \"system.node.connected\": [...connections] });\r\n                break;\r\n            }\r\n        }\r\n\r\n        await game.ptr.tree.refresh({ nodeRefresh: true });\r\n    }\r\n\r\n    #onClickLeft(event) {\r\n        if (game.ptr.tree.editNode) return this.#handleConnectionEdit(event);\r\n\r\n        this.originalPosition = this.position.clone();\r\n\r\n        if (this.active) {\r\n            game.ptr.tree.deactivateNode();\r\n            this.#onPointerOut(event)\r\n        }\r\n        else {\r\n            this.#onPointerOver(event);\r\n            game.ptr.tree.activateNode(this);\r\n        }\r\n    }\r\n\r\n    #onClickLeftEnd(event) {\r\n        if (game.ptr.tree.editNode) return;\r\n\r\n        event.stopPropagation();\r\n        this.#onPointerOut(event);\r\n\r\n        if (this.active) {\r\n            game.ptr.tree.deactivateNode();\r\n            this.mouseIgnored = true;\r\n\r\n            this._updatePosition();\r\n        }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    #onPointerOver(event) {\r\n        if (this.editMode) return;\r\n        if (!game.ptr.tree.app.renderer.enabled) return;\r\n        if (document.elementFromPoint(event.globalX, event.globalY)?.id !== \"perk-tree\") return;\r\n        if (this.mouseIgnored) return; // Don't hover a node that was just clicked\r\n        this.scale.set(1.2, 1.2);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    #onPointerOut(event) {\r\n        if (this.editMode) return;\r\n        if (!game.ptr.tree.app.renderer.enabled) return;\r\n        if (document.elementFromPoint(event.globalX, event.globalY)?.id !== \"perk-tree\") return;\r\n        if (this.active) return; // Don't un-hover an active node\r\n        this.scale.set(1.0, 1.0);\r\n        this.mouseIgnored = false;\r\n    }\r\n\r\n    #onPointerMove(event) {\r\n        if (!game.ptr.tree.app.renderer.enabled) return;\r\n        if (document.elementFromPoint(event.globalX, event.globalY)?.id !== \"perk-tree\") return;\r\n        if (!this.active) return; // Only move active nodes\r\n\r\n        // Move node\r\n        const newPosition = event.data.getLocalPosition(this.parent);\r\n        this.position.set(newPosition.x, newPosition.y);\r\n    }\r\n}\r\n\r\nclass PTRPerkTreeNodeData {\r\n    constructor({ id, texture, type = \"node\", angle = 0, distance = 200, connected = [], visible = true } = {}, perk) {\r\n        if (PTRPerkTreeNodeData.#nodes.has(id)) return console.warn(`PTRPerkTreeNode: node with id ${id} already exists: ignoring`);\r\n\r\n        // Create ray\r\n        const ray = Ray.fromAngle(0, 0, Math.toRadians(angle), distance);\r\n        Object.defineProperties(this, {\r\n            id: { value: id, writable: false, enumerable: true },\r\n            point: { value: ray.B, writable: true, enumerable: true },\r\n            texture: { value: texture, writable: true, enumerable: true },\r\n            type: { value: type, writable: false, enumerable: true },\r\n            visible: { value: visible, writable: true, enumerable: true },\r\n            perk: { value: perk, writable: false, enumerable: false },\r\n        });\r\n\r\n        // Connected nodes\r\n        for (const node of connected) {\r\n            const connectedNode = PTRPerkTreeNodeData.#nodes.get(node);\r\n            if (!connectedNode) {\r\n                this.retryInfo = { id, type, texture, angle, distance, connected };\r\n                return this.addFailedConnection();\r\n            }\r\n            connectedNode.connect(this)\r\n        }\r\n\r\n        // Add to nodes\r\n        PTRPerkTreeNodeData.#nodes.set(id, this);\r\n\r\n        // Check failed nodes\r\n        const failedNode = PTRPerkTreeNodeData.#failedNodes.get(id);\r\n        if (!failedNode || !failedNode.linked) return;\r\n\r\n        for (const linked of failedNode.linked) {\r\n            const linkedFailedNode = PTRPerkTreeNodeData.#failedNodes.get(linked);\r\n            if (!linkedFailedNode) {\r\n                console.warn(`PTRPerkTreeNodeData: failed node ${linked} does not exist`)\r\n                continue;\r\n            }\r\n\r\n            // Remove this requirement from the failed node\r\n            linkedFailedNode.required.delete(id);\r\n\r\n            // If the failed node has no more requirements, attempt to connect it\r\n            if (!linkedFailedNode.required.size) {\r\n                new PTRPerkTreeNodeData(linkedFailedNode.retryInfo);\r\n                if (PTRPerkTreeNodeData.#nodes.has(linkedFailedNode.retryInfo.id)) {\r\n                    PTRPerkTreeNodeData.#failedNodes.delete(linkedFailedNode.retryInfo.id);\r\n                }\r\n            }\r\n        }\r\n        if (!failedNode.failed) PTRPerkTreeNodeData.#failedNodes.delete(id);\r\n    }\r\n\r\n    static #nodes = new Map();\r\n    static #failedNodes = new Map();\r\n\r\n    static get nodes() {\r\n        return PTRPerkTreeNodeData.#nodes;\r\n    }\r\n\r\n    /**\r\n     * @returns {PTRPerkTreeNode}\r\n     */\r\n    static get origin() {\r\n        return this.#nodes.get(\"node0\") ?? this.origins.at(0);\r\n    }\r\n\r\n    static get origins() {\r\n        return [...this.#nodes.values()].filter(node => node.type == \"root\");\r\n    }\r\n\r\n    connected = new Set();\r\n\r\n    connect(node) {\r\n        this.connected.add(node);\r\n        node.connected.add(this);\r\n    }\r\n\r\n    addFailedConnection() {\r\n        for (const node of this.retryInfo.connected) {\r\n            const connectedNode = PTRPerkTreeNodeData.#nodes.get(node);\r\n            if (connectedNode) continue;\r\n            const failedNode = PTRPerkTreeNodeData.#failedNodes.get(node);\r\n            if (!failedNode) {\r\n                PTRPerkTreeNodeData.#failedNodes.set(node, {\r\n                    failed: false,\r\n                    linked: new Set([this.retryInfo.id])\r\n                });\r\n                continue;\r\n            }\r\n            if (!failedNode.linked) {\r\n                // This node also failed initialization, check if it can now be initialized\r\n                for (const linked of failedNode.required) {\r\n                    const linkedNote = PTRPerkTreeNodeData.#nodes.get(linked);\r\n                    if (!linkedNote) continue;\r\n\r\n                    // Remove this requirement from the failed node\r\n                    failedNode.required.delete(linked);\r\n\r\n                    // If the failed node has no more requirements, attempt to connect it\r\n                    if (!failedNode.required.size) {\r\n                        new PTRPerkTreeNodeData(failedNode.retryInfo);\r\n                        if (PTRPerkTreeNodeData.#nodes.has(failedNode.retryInfo.id)) {\r\n                            PTRPerkTreeNodeData.#failedNodes.delete(failedNode.retryInfo.id);\r\n                        }\r\n                    }\r\n                }\r\n                if (PTRPerkTreeNodeData.#failedNodes.has(failedNode.retryInfo.id)) {\r\n                    failedNode.linked = new Set([this.retryInfo.id]);\r\n                    continue;\r\n                }\r\n            }\r\n            failedNode.linked.add(this.retryInfo.id);\r\n        }\r\n        PTRPerkTreeNodeData.#failedNodes.set(this.retryInfo.id, {\r\n            failed: true,\r\n            required: new Set(this.retryInfo.connected),\r\n            retryInfo: this.retryInfo\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {PTRPerk} perk \r\n     */\r\n    static fromPerk(perk) {\r\n        const node = perk._source?.node;\r\n        if (!node) return node;\r\n\r\n        if (PTRPerkTreeNodeData.#nodes.has(node.id)) {\r\n            if (PTRPerkTreeNodeData.#nodes.get(node.id)?.perk?.id === perk.parent.id) {\r\n                const oldConnections = PTRPerkTreeNodeData.#nodes.get(node.id).connected?.map(node => node.id) ?? [];\r\n                for (const connected of oldConnections) {\r\n                    const connectedNode = PTRPerkTreeNodeData.#nodes.get(connected);\r\n                    if (!connectedNode) continue;\r\n                    connectedNode.connected.delete(PTRPerkTreeNodeData.#nodes.get(node.id));\r\n                }\r\n                PTRPerkTreeNodeData.#nodes.delete(node.id);\r\n\r\n                const updatedNodeData = foundry.utils.duplicate(node);\r\n                updatedNodeData.connected = [...new Set([...oldConnections, ...node.connected])];\r\n                return new PTRPerkTreeNodeData(updatedNodeData, perk.parent);\r\n            }\r\n            return PTRPerkTreeNodeData.#nodes.get(node.id);\r\n        }\r\n\r\n        return new PTRPerkTreeNodeData(node, perk.parent);\r\n    }\r\n}\r\n\r\nexport { PTRPerkTreeNode, PTRPerkTreeNodeData }\r\n\r\nglobalThis.PTRPerkTreeNodeData = PTRPerkTreeNodeData;","import { ItemSystemPTR2e } from \"@item\";\r\nimport { PTRNode } from \"@item/base/data.ts\";\r\nimport { PTRPerkTreeNodeData } from \"@module/canvas/perk-tree/perk-tree-node.mjs\";\r\n\r\nclass PerkSystemPTR2e extends ItemSystemPTR2e {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return Object.assign(super.defineSchema(), {\r\n            node: new fields.SchemaField({\r\n                id: new fields.StringField({ required: true, blank: false, initial: () => foundry.utils.randomID() }),\r\n                angle: new fields.AngleField({ required: true, initial: 0 }),\r\n                distance: new fields.NumberField({ required: true, initial: 100, validate: (d) => d as number >= 0 }),\r\n                type: new fields.StringField({ choices: [\"normal\", \"root\", \"ranked\"], required: true, initial: \"normal\" }),\r\n                connected: new fields.ArrayField(new fields.StringField()),\r\n                texture: new fields.FilePathField({ required: true, categories: [\"IMAGE\", \"MEDIA\", \"VIDEO\"], initial: \"systems/ptu/css/images/types2/UntypedIC_Icon.png\" }),\r\n                visible: new fields.BooleanField({ required: true, initial: true }),\r\n            }),\r\n            cost: new fields.NumberField(),\r\n            prerequisites: new fields.ArrayField(new fields.StringField()),\r\n        })\r\n    }\r\n\r\n    override prepareBaseData() {\r\n        super.prepareBaseData();\r\n\r\n        this.node = PTRPerkTreeNodeData.fromPerk(this);\r\n    }\r\n\r\n    async toEmbed() {\r\n        const container = document.createElement(\"div\");\r\n        container.innerHTML = `<h2>Perk: ${this.name}</h2><p>Effect: ${this.description}</p>`;\r\n        return container;\r\n    }\r\n}\r\n\r\ninterface PerkSystemPTR2e extends ItemSystemPTR2e {\r\n    node: PTRNode\r\n\r\n    /** Perk point cost */\r\n    cost: number\r\n    prerequisites: Trait[]\r\n\r\n    get fromNode(): Node | null;\r\n}\r\n\r\nexport { PerkSystemPTR2e };","import { ActionCost, ActionType, TargetOption } from \"@item/base/data.ts\";\r\n\r\nclass ActionPTR2e extends foundry.abstract.DataModel {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return {\r\n            slug: new fields.StringField({ required: true }),\r\n            name: new fields.StringField({ required: true, initial: \"New Action\" }),\r\n            description: new fields.HTMLField({ required: false, nullable: true }),\r\n            traits: new fields.ArrayField(new fields.StringField()),\r\n            type: new fields.StringField({\r\n                required: true, choices: () => [\r\n                    \"attack\", \"camping\", \"downtime\", \"exploration\"\r\n                ]\r\n            }),\r\n            range: new fields.EmbeddedDataField(RangePTR2e),\r\n            cost: new fields.SchemaField({\r\n                activation: new fields.StringField({\r\n                    required: true, choices: () => [\r\n                        \"simple\", \"complete\", \"free\"\r\n                    ]\r\n                }),\r\n                powerPoints: new fields.NumberField({ required: true, initial: 0 }),\r\n                trigger: new fields.StringField({ required: false, nullable: true }),\r\n                delay: new fields.NumberField({ required: false, nullable: true }),\r\n                priority: new fields.NumberField({ required: false, nullable: true }),\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\ninterface ActionPTR2e extends foundry.abstract.DataModel {\r\n    slug: string\r\n    // Action label\r\n    name: string\r\n    // Effect text\r\n    description: string\r\n    traits: Trait[]\r\n    type: ActionType\r\n\r\n    cost: {\r\n        activation: ActionCost,\r\n        powerPoints: number,\r\n        trigger?: string //| TriggerSource, // prob just string but maybe object\r\n        delay?: 1 | 2 | 3,\r\n        priority?: number,\r\n    }\r\n    range: RangePTR2e[]\r\n}\r\n\r\nclass RangePTR2e extends foundry.abstract.DataModel {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n        return {\r\n            target: new fields.StringField({\r\n                required: true, choices: [\r\n                    \"self\", \"ally\", \"enemy\", \"creature\", \"object\", \"blast\", \"cone\", \"line\", \"wide-line\", \"emanation\", \"field\"\r\n                ]\r\n            }),\r\n            distance: new fields.NumberField({ required: true, initial: 0 }),\r\n            unit: new fields.StringField({ required: true, choices: [\"m\", \"ft\"] }),\r\n        }\r\n    }\r\n}\r\ninterface RangePTR2e extends foundry.abstract.DataModel {\r\n    target: TargetOption\r\n    distance: number\r\n    unit: DistanceUnit\r\n}\r\n\r\nexport { ActionPTR2e, RangePTR2e }","import { ItemPTR2e, SpeciesPTR2e } from \"@item\";\r\nimport { DataSchema } from \"types/foundry/common/data/fields.js\";\r\n\r\nclass ActorSystemPTR2e extends foundry.abstract.TypeDataModel {\r\n    static override defineSchema() {\r\n        const fields = foundry.data.fields;\r\n\r\n        const getAttributeField = (slug: string, withStage = true) => {\r\n            return {\r\n                ...getStatField(slug, withStage),\r\n                evs: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n                ivs: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n                base: new fields.NumberField({ required: true, initial: 50, validate: (d) => d as number >= 1 }),\r\n                value: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            }\r\n        }\r\n        const getStatField = (slug: string, withStage = true) => {\r\n            const output: DataSchema = {\r\n                slug: new fields.StringField({ required: true, initial: slug}),\r\n            }\r\n            if (withStage) output.stage = new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= -6 && d as number <= 6});\r\n            return output;\r\n        }\r\n\r\n        return {\r\n            attributes: new fields.SchemaField({\r\n                hp: new fields.SchemaField(getAttributeField(\"hp\",false)),\r\n                atk: new fields.SchemaField(getAttributeField(\"atk\")),\r\n                def: new fields.SchemaField(getAttributeField(\"def\")),\r\n                spa: new fields.SchemaField(getAttributeField(\"spa\")),\r\n                spd: new fields.SchemaField(getAttributeField(\"spd\")),\r\n                spe: new fields.SchemaField(getAttributeField(\"spe\"))\r\n            }),\r\n            battleStats: new fields.SchemaField({\r\n                evasion: new fields.SchemaField(getStatField(\"evasion\")),\r\n                accuracy: new fields.SchemaField(getStatField(\"accuracy\")),\r\n                critRate: new fields.SchemaField(getStatField(\"critRate\")),\r\n            }),\r\n            skills: new fields.ObjectField({validate: (d: Record<string, Skill> | any) => {\r\n                if (typeof d !== \"object\") return false;\r\n                for (const [key, value] of Object.entries(d as Record<string, Skill>)) {\r\n                    if (typeof key !== \"string\" || typeof value !== \"object\") return false;\r\n                    if (typeof value.slug !== \"string\" || typeof value.value !== \"number\" || typeof value.rvs !== \"number\") return false;\r\n                }\r\n                return true;\r\n            }}),\r\n            biology: new fields.ObjectField(),\r\n            capabilities: new fields.ObjectField(),\r\n            traits: new fields.SetField(new fields.StringField()),\r\n            advancementPoints: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            type: new fields.SchemaField({\r\n                types: new fields.ArrayField(new fields.StringField()),\r\n            }),\r\n            species: new fields.ForeignDocumentField(ItemPTR2e, { required: false, nullable: true }),\r\n            powerPoints: new fields.SchemaField({\r\n                value: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            }),\r\n            health: new fields.SchemaField({\r\n                value: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            }),\r\n            experience: new fields.NumberField({ required: true, initial: 0, validate: (d) => d as number >= 0 }),\r\n            money: new fields.NumberField({ required: true, initial: 0}),\r\n        }\r\n    }\r\n}\r\n\r\ninterface ActorSystemPTR2e extends foundry.abstract.TypeDataModel {\r\n    attributes: Attributes,\r\n    battleStats: {\r\n        evasion: Stat,\r\n        accuracy: Stat,\r\n        critRate: Stat,\r\n    },\r\n    skills: Skills,\r\n    /** Biological data */\r\n    biology: Biology,\r\n    /** Movement Capabilities */\r\n    capabilities: Capabilities,\r\n    /** All traits for this actor */\r\n    traits: Set<string>, //TODO: Map this to Set<Traits>\r\n    /** Available advancement points */\r\n    advancementPoints: number,\r\n    type: {\r\n        effectiveness: object,\r\n        types: string[],\r\n    },\r\n    species: SpeciesPTR2e | null,\r\n    powerPoints: {\r\n        max: number,\r\n        value: number,\r\n    },\r\n    health: HealthData,\r\n    advancement: AdvancementData,\r\n    money: number\r\n}\r\n\r\nexport { ActorSystemPTR2e }","import { TokenDocumentPTR2e } from \"@module/canvas/token/document.ts\";\r\nimport { CombatantPTR2e } from \"@combat\";\r\n\r\nclass CombatPTR2e extends Combat {\r\n    \r\n    // @ts-ignore\r\n    override _sortCombatants(a, b) {\r\n        // Sort initiative ascending, then by speed descending\r\n        const resolveTie = () => {\r\n            // Sort by speed descending\r\n            const speedA = a.actor?.system.speed ?? 0;\r\n            const speedB = b.actor?.system.speed ?? 0;\r\n            return speedB - speedA;\r\n        }\r\n\r\n        const ia = Number.isNumeric(a.initiative) ? a.initiative : -Infinity;\r\n        const ib = Number.isNumeric(b.initiative) ? b.initiative : -Infinity;\r\n\r\n        return typeof a.initiative === \"number\" && typeof b.initiative === \"number\" && a.initiative === b.initiative\r\n            ? resolveTie()\r\n            : (ia - ib) || (a.id > b.id ? 1 : -1);\r\n    }\r\n\r\n    // @ts-ignore\r\n    override async createEmbeddedDocuments(embeddedName = \"Combatant\", data, context = {}) {\r\n        const createData = data.filter((datum: { tokenId: string; }) => {\r\n            const token = canvas.tokens.placeables.find((canvasToken) => canvasToken.id === datum.tokenId);\r\n            if (!token) return false;\r\n\r\n            const { actor } = token;\r\n            if (!actor) {\r\n                ui.notifications.warn(`${token.name} has no associated actor.`);\r\n                return false;\r\n            }\r\n\r\n            // TODO: Add actor types that cannot be part of combat here\r\n\r\n            return true;\r\n        })\r\n        return super.createEmbeddedDocuments(embeddedName, createData, context);\r\n    }\r\n\r\n    override async rollInitiative(ids: any[], options: {\r\n        messageOptions?: any;\r\n        rollMode?: string;\r\n        secret?: boolean;\r\n        temporary?: boolean;\r\n        extraRollOptions?: string[];\r\n    } = {}): Promise<any> {\r\n        const extraRollOptions = options.extraRollOptions ?? [];\r\n        //const rollMode = options.messageOptions?.rollMode ?? options.rollMode ?? game.settings.get(\"core\", \"rollMode\");\r\n        if (options.secret) extraRollOptions.push(\"secret\");\r\n\r\n        const combatants = ids.flatMap(\r\n            (id) => this.combatants.get(id) ?? []\r\n        );\r\n\r\n        //@ts-ignore\r\n        const fightyCombatants = combatants.filter((c) => !!c.actor?.system?.speed);\r\n        /**\r\n         * @type {{initiative: number, _id: string}[]}}\r\n         */\r\n        const initiatives = await Promise.all(\r\n            fightyCombatants.map(async (combatant) => {\r\n                // (500 * (1 + ((level - 5) * 21) / 95)) / speed\r\n                const data = {\r\n                    initiative: Math.round(\r\n                        (\r\n                            500 *\r\n                            (1 + ((10 - 5) * 21) / 95) // Hardcoded level 10 for now\r\n                        ) // @ts-ignore\r\n                        / combatant.actor.system.speed\r\n                    ),\r\n                    _id: combatant.id,\r\n                }\r\n                await combatant.setFlag(\"ptr2e\", \"baseAV\", data.initiative)\r\n                return data;\r\n            })\r\n        );\r\n\r\n        if (options.temporary) return initiatives;\r\n        return this.setMultipleInitiatives(initiatives);\r\n\r\n        // Roll the rest with the parent method\r\n        const remainingIds = ids.filter((id) => !fightyCombatants.some((c) => c.id === id));\r\n        console.warn(remainingIds)\r\n        // return super.rollInitiative(remainingIds, options);\r\n    }\r\n\r\n    /**\r\n     * Set the initiative of multiple combatants at once.\r\n     * @param {{initiative: number, _id: string}[]} initiatives \r\n     */\r\n    async setMultipleInitiatives(initiatives: { initiative: number; _id: string; }[]) {\r\n        const update = {\r\n            combatants: initiatives,\r\n        } as {\r\n            combatants: { initiative: number; _id: string; }[];\r\n            turn?: number;\r\n        }\r\n        if (this.combatant?.id) update.turn = 0;\r\n\r\n        return this.update(update);\r\n    }\r\n\r\n\r\n    override async nextTurn(): Promise<this> {\r\n        const turn = this.turn ?? -1;\r\n\r\n        // Determine the next turn number\r\n        let next = null;\r\n        let nextRound = false;\r\n        for (let [i, t] of this.turns.entries()) {\r\n            if (i <= turn) continue;\r\n            // @ts-ignore\r\n            if (t.hasActed) continue;\r\n            if (this.settings.skipDefeated && t.isDefeated) continue;\r\n            next = i;\r\n            if (t.id === \"roundsinitiative\") nextRound = true;\r\n            break;\r\n        }\r\n\r\n        // Maybe advance to the next round\r\n        let round = this.round;\r\n        if (nextRound) {\r\n            await this.nextRound();\r\n            return this;\r\n        }\r\n\r\n        // Update the document, passing data through a hook first\r\n        const updateData = { round, turn: next };\r\n        // @ts-ignore\r\n        const updateOptions = { advanceTime: CONFIG.time.turnTime, direction: 1 };\r\n        Hooks.callAll(\"combatTurn\", this, updateData, updateOptions);\r\n        await this.update(updateData, updateOptions);\r\n        return this;\r\n    }\r\n\r\n    override async nextRound() {\r\n        if (this.turn === null) return super.nextRound();\r\n\r\n        const next = this.turns[(this.turn ?? 0) + 1];\r\n        if (next?.id !== \"roundsinitiative\") {\r\n            await super.nextRound();\r\n            return this;\r\n        }\r\n\r\n        const current = this.combatant;\r\n        const nextFightyCombattant = this.turns[(this.turn ?? 0) + 2];\r\n\r\n        if (!current || !nextFightyCombattant) {\r\n            await super.nextRound();\r\n            return this;\r\n        }\r\n\r\n        const initiative = nextFightyCombattant.initiative;\r\n        const updates = {\r\n            turn: 0,\r\n            round: this.round + 1,\r\n            combatants: this.combatants.contents.flatMap((combatant) => { // @ts-ignore\r\n                if (combatant.id === \"roundsinitiative\") return [{ _id: combatant.id, initiative: combatant.getFlag(\"ptr2e\", \"baseAV\") - initiative }]; // @ts-ignore\r\n                if (combatant.id === current.id && combatant.initiative === 0) return [{ _id: combatant.id, initiative: combatant.getFlag(\"ptr2e\", \"baseAV\") - initiative }];\r\n                if (combatant.id === nextFightyCombattant.id) return [{ _id: combatant.id, initiative: 0 }];\r\n                if (combatant.initiative === 0) return []; // @ts-ignore\r\n                return [{ _id: combatant.id, initiative: combatant.initiative - initiative }];\r\n            })\r\n        }\r\n        const updateOptions = { direction: 1 };\r\n\r\n        Hooks.callAll(\"combatRound\", this, updates, updateOptions);\r\n        await this.update(updates, updateOptions);\r\n        return this;\r\n    }\r\n\r\n    \r\n    override async previousTurn() {\r\n        const backup = await this.getFlag(\"ptr2e\", \"stateBackup\");\r\n        // @ts-ignore\r\n        if (backup?.length > 0) {\r\n            // @ts-ignore\r\n            const { combatants, round, turn } = backup.pop();\r\n            if (combatants.some((c: { initiative: number; }) => c.initiative === 0)) {\r\n                await this.update({\r\n                    combatants,\r\n                    round,\r\n                    turn,\r\n                    flags: {\r\n                        ptr2e: {\r\n                            stateBackup: backup\r\n                        }\r\n                    }\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n        if (this.round === 1) {\r\n            await Dialog.confirm({\r\n                title: \"Restart Combat\",\r\n                content: \"Are you sure you want to restart combat?\",\r\n                yes: () => {\r\n                    return this.update({\r\n                        round: 0,\r\n                        turn: null,\r\n                        combatants: this.combatants.contents.map((c) => ({ _id: c.id, initiative: null })),\r\n                    });\r\n                }\r\n            });\r\n            return this;\r\n        }\r\n        ui.notifications.warn(\"No previous turn to go back to.\");\r\n        return this;\r\n    }\r\n\r\n    override async update(data: Record<string, unknown>, options = {}) {\r\n        if (!this.combatants.get(\"roundsinitiative\")) {\r\n            await Combatant.create({\r\n                tokenId: undefined,\r\n                actorId: undefined,\r\n                _id: \"roundsinitiative\",\r\n                name: \"The Round\",\r\n                img: \"icons/svg/clockwork.svg\",\r\n                hidden: false,\r\n                defeated: false,\r\n                initiative: 100,\r\n                flags: {\r\n                    ptr2e: {\r\n                        baseAV: 100\r\n                    }\r\n                }\r\n            }, { parent: this, keepId: true, keepEmbeddedIds: true })\r\n        }\r\n\r\n        const noInits = this.combatants.contents.filter((c) => c.initiative === null);\r\n        if (noInits.length > 0) {\r\n            const initiatives = await this.rollInitiative(noInits.map((c) => c.id), { secret: true, temporary: true });\r\n            data.combatants = data.combatants ?? []; // @ts-ignore\r\n            data.combatants.push(...initiatives);\r\n        }\r\n\r\n        // @ts-ignore\r\n        if (!data?.flags?.ptr2e?.stateBackup) {\r\n            data.flags = data.flags ?? {};\r\n            // @ts-ignore\r\n            data.flags.ptr2e = data.flags.ptr2e ?? {};\r\n            // @ts-ignore\r\n            data.flags.ptr2e.stateBackup = this.flags?.ptr2e?.stateBackup ?? [];\r\n            const newBackup = {\r\n                combatants: this.combatants.contents.map((c) => ({ _id: c._id, initiative: c.initiative })),\r\n                round: this.round,\r\n                turn: 0\r\n            }\r\n            // @ts-ignore\r\n            if (!objectsEqual(data.flags.ptr2e.stateBackup.at(-1), newBackup)) data.flags.ptr2e.stateBackup.push(newBackup);\r\n        }\r\n        return super.update(data, options);\r\n    }\r\n\r\n    override _onUpdate(changed: DeepPartial<this[\"_source\"]>, options: DocumentModificationContext<null>, userId: string) {\r\n        super._onUpdate(changed, options, userId);\r\n\r\n        if (!this.started) return;\r\n\r\n        const { combatant, previous } = this;\r\n\r\n        const [newRound, newTurn] = [changed.round, changed.turn];\r\n        const isRoundChange = typeof newRound === \"number\";\r\n        const isTurnChange = typeof newTurn === \"number\"; // @ts-ignore\r\n        const isNewTurnUnacted = isTurnChange && this.turns[newTurn]?.hasActed === false;\r\n        const isNextRound = isRoundChange && (previous.round === null || newRound > previous.round);\r\n        const isNextTurn = isTurnChange && (previous.turn === null || newTurn > previous.turn || isNewTurnUnacted);\r\n\r\n        // End early if no change\r\n        if (!(isRoundChange || isTurnChange)) return;\r\n\r\n        Promise.resolve()\r\n            // .then(async () => {\r\n            //     const noInits = this.combatants.contents.filter((c) => c.initiative === null);\r\n            //     if (noInits.length > 0) await this.rollInitiative(noInits.map((c) => c.id), { secret: true });\r\n            // })\r\n            // .then(async () => {\r\n            //     if (!this.combatants.get(\"roundsinitiative\")) {\r\n            //         await Combatant.create({\r\n            //             tokenId: undefined,\r\n            //             actorId: undefined,\r\n            //             _id: \"roundsinitiative\",\r\n            //             name: \"The Round\",\r\n            //             img: \"icons/svg/clockwork.svg\",\r\n            //             hidden: false,\r\n            //             defeated: false,\r\n            //             initiative: 100,\r\n            //             flags: {\r\n            //                 ptr2e: {\r\n            //                     baseAV: 100\r\n            //                 }\r\n            //             }\r\n            //         }, { parent: this, keepId: true, keepEmbeddedIds: true })\r\n            //     }\r\n            // })\r\n            .then(async () => {\r\n                if (isNextRound || isNextTurn) {\r\n                    const previousCombatant = this.combatants.get(previous.combatantId ?? \"\");\r\n                    // Only the primary updater of the previous actor can end their turn\r\n                    if (game.user.isGM && previousCombatant) {\r\n                        //if (game.user === previousCombatant?.actor?.primaryUpdater) {\r\n                            // @ts-ignore\r\n                        const alreadyWent = previousCombatant.roundOfLastTurnEnd === previous.round\r\n                        if (typeof previous.round === \"number\" && !alreadyWent) {\r\n                            // Handle actor specific turn end\r\n                            // @ts-ignore\r\n                            await previousCombatant.endTurn({ round: previous.round });\r\n                        }\r\n                    }\r\n\r\n                    // Only the primary updater of the current actor can start their turn\r\n                    // if (game.user === combatant?.actor?.primaryUpdater) {\r\n                    if (game.user.isGM) {\r\n                        // @ts-ignore\r\n                        const alreadyWent = combatant?.roundOfLastTurn === this.round;\r\n                        if (combatant && !alreadyWent) {\r\n                            // Update everyone's initiative\r\n                            if (newRound === 1 || !isNextRound) await this.updateInitiatives(previousCombatant!, combatant);\r\n\r\n                            // Handle actor specific turn start\r\n                            // @ts-ignore\r\n                            await combatant.startTurn();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // // Reset all data to get updated encounter roll options\r\n                // this.resetActors();\r\n                // await game.ptu.effectTracker.refresh();\r\n                // game.ptu.tokenPanel.refresh();\r\n            });\r\n    }\r\n\r\n    async updateInitiatives(previousCombatant: CombatantPTR2e, newCombatant: CombatantPTR2e) {\r\n        const combatants = this.combatants;\r\n        const initiative = combatants.get(newCombatant.id)?.initiative;\r\n\r\n        return this.setMultipleInitiatives(combatants.contents.flatMap((combatant) => {\r\n            if (combatant.id === previousCombatant?.id) return [{ _id: combatant.id, initiative: (previousCombatant.getFlag(\"ptr2e\", \"baseAV\") as number) - initiative! }];\r\n            if (combatant.id === newCombatant.id && combatant.initiative !== 0) return [{ _id: combatant.id, initiative: 0 }];\r\n            if (combatant.initiative === 0) return [];\r\n            return [{ _id: combatant.id, initiative: combatant.initiative! - initiative! }];\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    override async _manageTurnEvents(adjustedTurn: number | undefined) {\r\n        if (this.previous || game.release.build >= 308)\r\n            return super._manageTurnEvents(adjustedTurn);\r\n    }\r\n}\r\n\r\ninterface CombatPTR2e extends Combat {\r\n    readonly combatants: foundry.abstract.EmbeddedCollection<CombatantPTR2e<this, TokenDocumentPTR2e | null>>\r\n}\r\n\r\nexport { CombatPTR2e };","import { TokenDocumentPTR2e } from \"@module/canvas/token/document.ts\";\r\nimport { CombatPTR2e } from \"@combat\";\r\n\r\nclass CombatantPTR2e<\r\n    TParent extends CombatPTR2e | null = CombatPTR2e | null,\r\n    TTokenDocument extends TokenDocumentPTR2e | null = TokenDocumentPTR2e | null\r\n> extends Combatant<TParent, TTokenDocument> {\r\n\r\n    get encounter() {\r\n        return this.parent;\r\n    }\r\n\r\n    async endTurn() {\r\n        Hooks.callAll(\"ptr2e.endTurn\", this, this.encounter, game.user.id);\r\n    }\r\n\r\n    async startTurn() {\r\n    }\r\n}\r\n\r\ninterface CombatantPTR2e<\r\n    TParent extends CombatPTR2e | null = CombatPTR2e | null,\r\n    TTokenDocument extends TokenDocumentPTR2e | null = TokenDocumentPTR2e | null\r\n> extends Combatant<TParent, TTokenDocument> {\r\n\r\n}\r\n\r\nexport { CombatantPTR2e }","import { CombatPTR2e } from \"@combat\";\r\n\r\nclass CombatTrackerPTR2e<TEncounter extends CombatPTR2e | null> extends CombatTracker<TEncounter> {\r\n    \r\n    override get template() {\r\n        return 'systems/ptr2e/templates/sidebar/combat-tracker.hbs';\r\n    }\r\n\r\n    override async getData(options: CombatTrackerOptions): Promise<CombatTrackerData> {\r\n        const data = await super.getData(options);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport { CombatTrackerPTR2e };","import { ItemPTR2e } from \"@item\";\r\n\r\nclass ItemSheetPTR2e<TItem extends ItemPTR2e> extends ItemSheet<TItem, ItemSheetOptions> {\r\n\r\n}\r\n\r\ninterface ItemSheetPTR2e<TItem extends ItemPTR2e> extends ItemSheet<TItem, ItemSheetOptions> {\r\n\r\n}\r\n\r\ninterface ItemSheetOptions extends DocumentSheetOptions {\r\n\r\n}\r\n\r\nexport { ItemSheetPTR2e }\r\nexport type { ItemSheetOptions }","import { PerkPTR2e } from \"@item\";\r\nimport { ItemSheetPTR2e } from \"@item/base/sheet.ts\";\r\n\r\nclass PerkSheetPTR2e extends ItemSheetPTR2e<PerkPTR2e> {\r\n\r\n}\r\n\r\nexport { PerkSheetPTR2e }","import { ItemPTR2e, ItemSystemPTR2e } from \"@item\";\r\n\r\nclass PerkDirectory extends ItemDirectory<ItemPTR2e<ItemSystemPTR2e, null>> {\r\n\r\n    override get title() {\r\n        return `${game.i18n.localize(\"DOCUMENT.Perks\")} Directory`;\r\n    }\r\n\r\n    async _onCreateEntry(event: { preventDefault: () => void; stopPropagation: () => void; currentTarget: any; }, { } = {}) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const button = event.currentTarget;\r\n        const li = button.closest(\".directory-item\");\r\n        const data = { folder: li?.dataset?.folderId, type: \"perk\" };\r\n        const options = { width: 320, left: window.innerWidth - 630, top: button.offsetTop };\r\n        return Item.createDialog(data, options);\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    override _onSearchFilter(_event: any, _query: any, rgx: any, html: { querySelectorAll: (arg0: string) => any; }) {\r\n        const isSearch = true //!!query;\r\n        let entryIds: Set<string> = new Set();\r\n        const folderIds: Set<string> = new Set();\r\n        const autoExpandFolderIds = new Set();\r\n\r\n        // Match entries and folders\r\n        if (isSearch) {\r\n\r\n            // Include folders and their parents, auto-expanding parent folders\r\n            const includeFolder = (folder: Folder<EnfolderableDocument> | undefined, autoExpand = true) => {\r\n                if (!folder) return;\r\n                if (typeof folder === \"string\") folder = this.collection.folders.get(folder);\r\n                if (!folder) return;\r\n                const folderId = folder._id!;\r\n                if (folderIds.has(folderId)) {\r\n                    // If this folder is not already auto-expanding, but it should be, add it to the set\r\n                    if (autoExpand && !autoExpandFolderIds.has(folderId)) autoExpandFolderIds.add(folderId);\r\n                    return;\r\n                }\r\n                folderIds.add(folderId);\r\n                if (autoExpand) autoExpandFolderIds.add(folderId);\r\n                if (folder.folder) includeFolder(folder.folder as Folder<EnfolderableDocument>);\r\n            };\r\n\r\n            // First match folders\r\n            this._matchSearchFolders(rgx, includeFolder);\r\n\r\n            // Next match entries\r\n            this._matchSearchEntries(rgx, entryIds, folderIds, includeFolder);\r\n        }\r\n\r\n        // Toggle each directory item\r\n        for (let el of html.querySelectorAll(\".directory-item\")) {\r\n            if (el.classList.contains(\"hidden\")) continue;\r\n            if (el.classList.contains(\"folder\")) {\r\n                let match = isSearch && folderIds.has(el.dataset.folderId);\r\n                el.style.display = (!isSearch || match) ? \"flex\" : \"none\";\r\n                if (autoExpandFolderIds.has(el.dataset.folderId)) {\r\n                    if (isSearch && match) el.classList.remove(\"collapsed\");\r\n                } // @ts-ignore\r\n                else el.classList.toggle(\"collapsed\", !game.folders._expanded[el.dataset.uuid]);\r\n            }\r\n            else el.style.display = (!isSearch || entryIds.has(el.dataset.entryId)) ? \"flex\" : \"none\";\r\n        }\r\n    }\r\n\r\n    override _matchSearchEntries(query: RegExp, entryIds: Set<string>, folderIds: Set<string>, includeFolder: Function) {\r\n        super._matchSearchEntries(query, entryIds, folderIds, includeFolder);\r\n\r\n        // @ts-ignore\r\n        const entries = this.collection.index ?? this.collection.contents;\r\n        for (const entry of entries) {\r\n            if (entry.type !== \"perk\") entryIds.delete(entry._id);\r\n        }\r\n    }\r\n\r\n    override async close(options = {}) {\r\n        if (game.ptr.tree.editMode) { this.minimize(); return; }\r\n        return super.close(options);\r\n    }\r\n\r\n    override renderPopout() {\r\n        const pop = this.createPopout();\r\n        pop.render(true, { top: 0, left: window.innerWidth - 310 });\r\n    }\r\n}\r\n\r\ninterface PerkDirectory extends ItemDirectory<ItemPTR2e<ItemSystemPTR2e, null>> {\r\n\r\n}\r\n\r\nexport { PerkDirectory }","\r\nimport { ActorPTR2e, ActorSheetPTR2e, ActorSystemPTR2e } from \"@actor\";\r\nimport { CombatTrackerPTR2e } from \"@combat\";\r\nimport { GearSystemPTR2e, ItemPTR2e, PerkSystemPTR2e } from \"@item\";\r\nimport { PerkSheetPTR2e } from \"@item/perk/sheet.ts\";\r\nimport { PerkDirectory } from \"@module/apps/sidebar-perks/perks-directory.ts\";\r\n\r\nexport const PTRCONFIG = {\r\n    Actor: {\r\n        documentClass: ActorPTR2e,\r\n        dataModels: {\r\n            character: ActorSystemPTR2e\r\n        },\r\n        sheetClasses: {\r\n            character: ActorSheetPTR2e,\r\n        },\r\n    },\r\n    Item: {\r\n        documentClass: ItemPTR2e,\r\n        dataModels: {\r\n            perk: PerkSystemPTR2e,\r\n            gear: GearSystemPTR2e\r\n        },\r\n        sheetClasses: {\r\n            perk: PerkSheetPTR2e,\r\n        },\r\n    },\r\n    ui: {\r\n        perks: PerkDirectory,\r\n        combat: CombatTrackerPTR2e,\r\n    }\r\n}","export default class PTRPerkTreeHUD extends Application {\r\n    /** @inheritdoc */\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            id: \"perk-tree-hud\",\r\n            template: \"systems/ptr2e/templates/perk-tree/hud.hbs\",\r\n            popOut: false\r\n        });\r\n    }\r\n\r\n    get tree() {\r\n        return game.ptr.tree;\r\n    }\r\n\r\n    /** @override */\r\n    getData(options = {}) {\r\n        return {\r\n            actor: this.tree.actor,\r\n            editMode: this.tree.editMode\r\n        };\r\n    }\r\n\r\n    /** @override */\r\n    activateListeners(html) {\r\n        html.find(\"button.close\").click(() => this.tree.close());\r\n        html.find(\"button.refresh\").click(() => this.tree.refresh({nodeRefresh: true}));\r\n        html.find(\"button.toggleEdit\").click(() => this.tree.toggleEditMode());\r\n    }\r\n}","import { ActorPTR2e } from \"../../actor/base.ts\";\r\nimport PTRPerkTreeHUD from \"./perk-tree-hud.mjs\";\r\nimport { PTRPerkTreeNode, PTRPerkTreeNodeData } from \"./perk-tree-node.mjs\";\r\n\r\n/**\r\n * @extends PTRPerkTreeData\r\n */\r\nexport default class PTRPerkTree extends PIXI.Container {\r\n    constructor() {\r\n        super();\r\n        this._initialize();\r\n    }\r\n\r\n    #drawn = false;\r\n    #dragDrop = null;\r\n\r\n    _initialize() {\r\n        Object.defineProperty(this, \"canvas\", {\r\n            value: document.createElement(\"canvas\"),\r\n            writable: false\r\n        });\r\n        this.canvas.id = \"perk-tree\";\r\n        this.canvas.hidden = true;\r\n        document.body.appendChild(this.canvas);\r\n\r\n        // Activate Drop Handling\r\n        this.#dragDrop = new DragDrop({ callbacks: { drop: this._onDrop.bind(this) } }).bind(this.canvas);\r\n\r\n        Object.defineProperty(this, \"app\", {\r\n            value: new PIXI.Application({\r\n                view: this.canvas,\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                transparent: true,\r\n                resolution: 1,\r\n                antialias: true,\r\n                background: 0xcccccc,\r\n                backgroundAlpha: 0.35,\r\n                powerPreference: \"high-performance\"\r\n            }),\r\n            writable: false\r\n        });\r\n        Object.defineProperty(this, \"stage\", {\r\n            value: this.app.stage,\r\n            writable: false\r\n        });\r\n        Object.defineProperty(this, \"controls\", { value: new PTRPerkTreeHUD(), writable: false });\r\n\r\n        this.stage.addChild(this);\r\n\r\n        this.editMode = false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {ActorPTR2e} actor \r\n     * @param {object} [options]\r\n     * @param {boolean} [options.resetView] \r\n     */\r\n    async open(actor, { resetView } = {}) {\r\n        if (!(actor instanceof ActorPTR2e)) throw new Error(\"PTRPerkTree.open: actor must be an instance of PTRActor\");\r\n\r\n        await this.draw();\r\n\r\n        this.actor = actor;\r\n        await actor.sheet._render(false, { left: 20, top: 20 });\r\n        actor.sheet.minimize();\r\n\r\n        this.pan(resetView ? { x: 0, y: 0, scale: 1.0 } : {});\r\n        this.refresh();\r\n\r\n        this.app.renderer.enabled = true;\r\n        this.canvas.hidden = false;\r\n\r\n        if (this.editMode && !!ui.perks._popout) ui.perks.renderPopout();\r\n    }\r\n\r\n    async close() {\r\n        const actor = this.actor;\r\n        this.actor = null;\r\n        await actor?.sheet.render(false);\r\n        actor.sheet.maximize();\r\n\r\n        this.controls.close();\r\n\r\n        this.app.renderer.enabled = false;\r\n        this.canvas.hidden = true;\r\n\r\n        if (this.editMode) ui.perks._popout?.close();\r\n    }\r\n\r\n    async draw() {\r\n        if (this.#drawn) return;\r\n        this.backgroundLayer = this.addChild(new PIXI.Container());\r\n        this.foregroundLayer = this.addChild(new PIXI.Container());\r\n\r\n        // Draw Background\r\n        this.background = this.backgroundLayer.addChild(await this._drawBackground());\r\n\r\n        // Setup connection background\r\n        this.edges = this.backgroundLayer.addChild(new PIXI.Graphics());\r\n        this.edges.lineStyle({ width: 5, color: 0xffffff, alpha: 0.40 });\r\n\r\n        // Setup active connections\r\n        this.connections = this.backgroundLayer.addChild(new PIXI.Graphics());\r\n\r\n        // Draw Nodes & Edges\r\n        this.nodes = this.backgroundLayer.addChild(new PIXI.Container());\r\n        const seen = new Set();\r\n        for (const origin of PTRPerkTreeNodeData.origins) {\r\n            if (!seen.has(origin.id)) {\r\n                await this._drawNode(origin);\r\n                seen.add(origin.id);\r\n            }\r\n            await this._drawNodes(origin.connected, seen);\r\n        }\r\n\r\n        // Enable Interactivity\r\n        this.#activateInteractivity();\r\n\r\n        // Draw HUD\r\n        canvas.hud.render(true);\r\n\r\n        // Draw initial cycle\r\n        this.refresh();\r\n        this.#drawn = true;\r\n    }\r\n\r\n    async _drawBackground() {\r\n        const backgroundSize = 10000;\r\n        const background = new PIXI.Graphics();\r\n        background.beginFill(0x000000, 0.1).drawRect(-backgroundSize, -backgroundSize, backgroundSize + backgroundSize, backgroundSize + backgroundSize).endFill();\r\n        return background;\r\n    }\r\n\r\n    _drawConnections(node, seen) {\r\n        for (const connection of node.connected) {\r\n            if (seen.has(connection.id)) continue;\r\n            if (!connection.visible) continue;\r\n            this.connections.lineStyle({ color: connection.color, width: 5, alpha: 1 })\r\n                .moveTo(node.point.x, node.point.y)\r\n                .lineTo(connection.point.x, connection.point.y);\r\n        }\r\n    }\r\n\r\n    async _drawNodes(nodes, seen = new Set()) {\r\n        const next = [];\r\n        for (const node of nodes) {\r\n            if (seen.has(node.id)) continue;\r\n            if (!node.visible) continue;\r\n            await this._drawNode(node);\r\n            seen.add(node.id);\r\n            next.push(...node.connected);\r\n        }\r\n        if (next.length) await this._drawNodes(next, seen);\r\n    }\r\n\r\n    async _drawNode(node) {\r\n        const icon = node.icon = new PTRPerkTreeNode(node, { borderColor: node.color });\r\n        this.nodes.addChild(icon);\r\n    }\r\n\r\n    async refresh({ nodeRefresh = false } = {}) {\r\n        if (!this.actor) return;\r\n\r\n        if (nodeRefresh) {\r\n            this.editNode = null;\r\n            this.nodes.removeChildren();\r\n            const seen = new Set();\r\n            for (const origin of PTRPerkTreeNodeData.origins) {\r\n                if (!seen.has(origin.id)) {\r\n                    if (!origin.visible) continue;\r\n                    await this._drawNode(origin);\r\n                    seen.add(origin.id);\r\n                }\r\n                await this._drawNodes(origin.connected, seen);\r\n            }\r\n\r\n            if(this.editMode) {\r\n                // Render all unconnected nodes\r\n                for(const node of PTRPerkTreeNodeData.nodes.values()) {\r\n                    if(!node.visible) continue;\r\n                    if(node.connected.length) continue;\r\n                    if(node.icon?.visible) continue;\r\n                    await this._drawNode(node);\r\n                }\r\n            }\r\n\r\n            return this.refresh();\r\n        }\r\n\r\n        this.connections.clear();\r\n        this.edges.clear();\r\n\r\n        const seen = new Set();\r\n        for (const node of PTRPerkTreeNodeData.nodes.values()) {\r\n            if (!node.visible) continue;\r\n            node.icon?.draw({ text: [...node.id].at(-1) });\r\n            this._drawConnections(node, seen);\r\n            seen.add(node.id);\r\n        }\r\n\r\n        this.controls.render(true);\r\n    }\r\n\r\n    pan({ x, y, scale } = {}) {\r\n        x ??= this.stage.pivot.x;\r\n        y ??= this.stage.pivot.y;\r\n        scale ??= this.stage.scale.x;\r\n        this.stage.pivot.set(x, y);\r\n        this.stage.scale.set(scale, scale);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n    /*  Node & State Management                     */\r\n    /* -------------------------------------------- */\r\n\r\n    activateNode(node) {\r\n        if (this.active) this.deactivateNode();\r\n        this.active = node;\r\n    }\r\n\r\n    deactivateNode() {\r\n        if (!this.active) return;\r\n        this.active.scale.set(1.0, 1.0);\r\n        this.active = null;\r\n    }\r\n\r\n    toggleEditNode(node) {\r\n        if (this.editNode === node) this.editNode = null;\r\n        else this.editNode = node;\r\n    }\r\n\r\n    toggleEditMode() {\r\n        this.editMode = !this.editMode;\r\n        if (this.editMode) {\r\n            if(!ui.perks._popout || ui.perks._popout_minimized) ui.perks.renderPopout();\r\n            this.app.renderer.backgroundColor = 0x851a1a;\r\n            this.app.renderer.backgroundAlpha = 0.35;\r\n        }\r\n        else {\r\n            ui.perks._popout?.close();\r\n            this.app.renderer.backgroundColor = 0xcccccc;\r\n            this.app.renderer.backgroundAlpha = 0.35;\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    /**\r\n     * Event handler for the drop portion of a drag-and-drop event.\r\n     * @param {DragEvent} event  The drag event being dropped onto the canvas\r\n     * @private\r\n     */\r\n    async _onDrop(event) {\r\n        event.preventDefault();\r\n        const data = TextEditor.getDragEventData(event);\r\n        if (!data.type) return;\r\n\r\n        // Acquire the cursor position transformed to Canvas coordinates\r\n        const [x, y] = [event.clientX, event.clientY];\r\n        const t = this.stage.worldTransform;\r\n        data.x = (x - t.tx) / this.stage.scale.x;\r\n        data.y = (y - t.ty) / this.stage.scale.y;\r\n\r\n        /**\r\n         * A hook event that fires when some useful data is dropped onto the\r\n         * Canvas.\r\n         * @function dropCanvasData\r\n         * @memberof hookEvents\r\n         * @param {Canvas} canvas The Canvas\r\n         * @param {object} data   The data that has been dropped onto the Canvas\r\n         */\r\n        const allowed = Hooks.call(\"dropPerkWebCanvasData\", this, data);\r\n        if (allowed === false) return;\r\n\r\n        // Handle different data types\r\n        switch (data.type) {\r\n            case \"Item\": {\r\n                const item = await Item.fromDropData(data);\r\n                // If no item or the type isn't perk return\r\n                if (!item || item.type !== \"perk\") return;\r\n\r\n                if (item.system.node?.icon?.visible) {\r\n                    return await item.system.node.icon._updatePosition({ x: data.x, y: data.y });\r\n                }\r\n                else if (item.system.node?.icon?.visible === false) {\r\n                    return await item.system.node.icon._updatePosition({ x: data.x, y: data.y, visible: true });\r\n                }\r\n                else {\r\n                    if(!data.uuid) return console.warn(\"PTR | No UUID found on dropped item, therefore unable to edit node.\");\r\n\r\n                    // Calculate angle and distance\r\n                    const angle = Math.toDegrees(Math.atan2(data.y, data.x));\r\n                    const distance = Math.sqrt(data.x ** 2 + data.y ** 2);\r\n\r\n                    // Update the item\r\n                    await item.update({\"system.node\": {angle, distance, visible: true}});\r\n                    \r\n                    // Refresh the tree\r\n                    this.refresh({nodeRefresh: true});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n    /*  Event Listeners and Handlers                */\r\n    /* -------------------------------------------- */\r\n\r\n    #activateInteractivity() {\r\n        this.backgroundLayer.eventMode = \"passive\";\r\n        this.backgroundLayer.children.forEach(c => c.eventMode = \"none\");\r\n        this.nodes.eventMode = \"passive\";       // Capture hover/click events on nodes\r\n        this.background.eventMode = \"static\";     // Capture drag events on the background\r\n\r\n        this.interactionManager = new MouseInteractionManager(this, this, {}, {\r\n            clickLeft: this.#onClickLeft,\r\n            dragRightStart: null,\r\n            dragRightMove: this.#onDragRightMove,\r\n            dragRightDrop: null,\r\n            dragRightCancel: null\r\n        }, {\r\n            application: this.app,\r\n            dragResistance: 30\r\n        }).activate();\r\n\r\n        // Window Events\r\n        window.addEventListener(\"resize\", this.#onResize.bind(this));\r\n        window.addEventListener(\"wheel\", this.#onWheel.bind(this), { passive: false });\r\n        this.#onResize();  // set initial dimensions\r\n    }\r\n\r\n    #onClickLeft(event) {\r\n        event.stopPropagation();\r\n        this.deactivateNode();\r\n    }\r\n\r\n    /**\r\n     * Handle right-mouse drag events occurring on the Canvas.\r\n     * @param {PIXI.FederatedEvent} event\r\n     */\r\n    #onDragRightMove(event) {\r\n        const DRAG_SPEED_MODIFIER = 0.8;\r\n        const { origin, destination } = event.interactionData;\r\n        const dx = destination.x - origin.x;\r\n        const dy = destination.y - origin.y;\r\n        this.pan({\r\n            x: this.stage.pivot.x - (dx * DRAG_SPEED_MODIFIER),\r\n            y: this.stage.pivot.y - (dy * DRAG_SPEED_MODIFIER)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle window resize events.\r\n     */\r\n    #onResize() {\r\n        this.app.renderer.resize(window.innerWidth, window.innerHeight);\r\n        const { width, height } = this.app.renderer.screen;\r\n        this.stage.position.set(width / 2, height / 2);\r\n        this.pan(this.stage.pivot);\r\n    }\r\n\r\n    /**\r\n     * Handle mousewheel events on the Talent Tree canvas.\r\n     * @param {WheelEvent} event      The mousewheel event\r\n     */\r\n    #onWheel(event) {\r\n        if (this.canvas.hidden || (event.target?.id !== \"perk-tree\")) return;\r\n        const deltaZ = (event.delta < 0) ? 1.05 : 0.95;\r\n        this.pan({ scale: deltaZ * this.stage.scale.x });\r\n    }\r\n}","import PTRPerkTree from \"@module/canvas/perk-tree/perk-tree.mjs\"\r\n\r\nconst GamePTR = {\r\n    onInit() {\r\n        const initData = {\r\n            tree: new PTRPerkTree()\r\n        }\r\n\r\n        game.ptr = fu.mergeObject(game.ptr ?? {}, initData)\r\n    },\r\n    onSetup() { },\r\n    onReady() { }\r\n}\r\n\r\nexport { GamePTR }","import { ActorSheetPTR2e } from \"@actor\";\r\nimport { CombatPTR2e, CombatantPTR2e } from \"@combat\";\r\nimport { PTRCONFIG } from \"@scripts/config/index.ts\";\r\nimport { GamePTR } from \"@scripts/game-ptr2e.ts\";\r\nimport { registerHandlebarsHelpers, registerTemplates } from \"@utils\";\r\n\r\nexport const Init = {\r\n    listen() {\r\n        Hooks.once('init', () => {\r\n            console.log('PTR 2e | Initializing');\r\n            // Add initialization code here\r\n\r\n            // Add actor() to window\r\n            /** @returns {Actor?} */\r\n            window.actor = function () {\r\n                return canvas.tokens.controlled[0]?.actor;\r\n            }\r\n\r\n\r\n            // Setup PTR Config\r\n            CONFIG.PTR = PTRCONFIG;\r\n            Object.freeze(CONFIG.PTR);\r\n\r\n            // Set custom combat settings\r\n            CONFIG.Combat.documentClass = CombatPTR2e;\r\n            CONFIG.Combatant.documentClass = CombatantPTR2e;\r\n\r\n            CONFIG.ui.combat = PTRCONFIG.ui.combat\r\n            CONFIG.ui.perks = PTRCONFIG.ui.perks;\r\n\r\n            // Define custom Entity classes\r\n            CONFIG.Actor.documentClass = PTRCONFIG.Actor.documentClass;\r\n            CONFIG.Item.documentClass = PTRCONFIG.Item.documentClass;\r\n            CONFIG.Actor.dataModels = PTRCONFIG.Actor.dataModels;\r\n            CONFIG.Item.dataModels = PTRCONFIG.Item.dataModels;\r\n\r\n            // Register custom sheets\r\n            {\r\n                Actors.unregisterSheet(\"core\", ActorSheet);\r\n                Actors.registerSheet(\"ptr2e\", ActorSheetPTR2e, { makeDefault: true })\r\n            }\r\n\r\n            // Register handlebars helpers\r\n            registerHandlebarsHelpers();\r\n            registerTemplates();\r\n\r\n            // Create and populate initial game.ptr interface\r\n            GamePTR.onInit();\r\n        });\r\n\r\n        Hooks.once('setup', () => {\r\n        })\r\n    }\r\n}","import { Init } from \"@scripts/hooks/init.ts\";\r\n\r\nexport const PTRHooks = {\r\n    listen() {\r\n        const listeners = [\r\n            // Add listeners here\r\n            Init\r\n        ]\r\n        for(const listener of listeners) listener.listen();\r\n    }\r\n}\r\n\r\n","import { PTRHooks } from \"@scripts/hooks/index.ts\";\r\n\r\nPTRHooks.listen();"],"names":["map","interpolate","clone","color","index","set","callback","defaults","formatter","_descriptors","devicePixelRatio","canvas","resolve","descriptors","getComputedStyle","draw","from","to","scales","elements","names","i","inRange","layouts","layout","positions","EXPANDO_KEY","validIndex","registry","plugin","plugins","listener","alpha","skip","boundingRects","fill","positioners","round","HALF_PI","h1","dispatchEvent","ChartDataLabels","this","t","e","s","a","n","o","r","l","d","h","g","p","c","u","m","v","f","tagify","node","seen","initData"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,9]}